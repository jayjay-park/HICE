,controversiality,parent_id,body,subreddit,id,score,subreddit_id
21318,0,t1_cegsd8f,Whats a void merge commit?  What expertunderachiever suggests makes complete sense particularly when first committing a new branch with its own history into master.  It advances master by one commit the merging of a new branch with its own history rather than by N commits that give no indication of how they each relate to the rest of master or other branches.A horrible alternative that some people do is to squash their branch into one commit that they then fastforward merge onto master in order to maintain that linear history look ie. commits have one parent.  Ugghh.,git,ceguz6o,2,t5_2qhv1
176211,0,t3_1w1xa7,In my case it was looking at my network home directory that was configured via AD policies.I probably used Process Monitor to track that down.,git,ceyi6i5,1,t5_2qhv1
227405,0,t1_cf4bg7p,oh and to fix the commits youve already made read about interactive rebase but dont do it if theres more people unless you coordinate with everyone else before so they can fix their clones afterwards.,git,cf4bgs3,1,t5_2qhv1
298378,0,t1_cfbmlhv,I suppose the builtin completion might be useful for someone who hasnt already configured the hell out of his shell.As for me my zsh is customised to the point where I think something like gitsh might just slow me down.BTW theres a nifty textmode UI for git that I always forget about  ,git,cfboy9w,2,t5_2qhv1
379524,0,t1_cfjyup5,gt So doing an LZMA pass first before committing might very well be worse over the long term.I was very explicit that the tradeoff only made sense if you were intending to only ever store a single version of the file.,git,cfk3q1l,1,t5_2qhv1
724570,0,t3_22gocz,git reflog HEAD should tell you which commits HEAD has pointed to in the past ie. what youve had checked out as of late. You should be able to recognize your commit messages. An example line of output is aea HEAD commit Add some stuff. Then you can create a branch at that point with git branch foo aea or git branch foo  HEAD.,git,cgmmxv6,3,t5_2qhv1
730850,0,t1_cgnbb0v,I felt something similar.  The title is in my opinion true.  However the text of the article doesnt really try to address why its true. One should not conflate git and GitHub but if one were to discuss why and how git is changing the face of software development GitHub will enter into the narrative.,git,cgnco1i,2,t5_2qhv1
751629,0,t3_22rhvb,Here is a summary on how to quickly search your recent branchgit branch,git,cgppt2l,1,t5_2qhv1
882099,0,t3_243ee6,Merge is like inosculation Rebase is like grafting In the former you take two limbs and join their ends together so theyre now one limb from that point on. In the latter you cut a limb off and stick it back on somewhere else usually higher up the tree.,git,ch4jqg3,3,t5_2qhv1
1063547,0,t1_chomc92,Which is fine.  But the presenter should really highlight why its a bad idea to use it for oopsies I accidentally put a file there I dont want.Also he fails to highlight that once you push a secret to a public github its not really secret anymore.  If there were AWS or whatever keys in there ... you have to revoke them.,git,chp6hec,2,t5_2qhv1
1105073,0,t3_26qpk6,deleted,git,chtwjk6,1,t5_2qhv1
1246579,0,t1_ci9o6yj,Never. Ever. Delete. Anything.Repeat.Never. Ever. Delete. Anything.I assumed he didnt need the files is a stupid assumption. He doesnt need them in master but you might lets rephrase that to will need them in development. Youll only need exports from the PSD in you final product but that doesnt mean you should just play garbage man.EDIT of course they need be versioned! How can you not version your design? Oh man never mind. You clearly havent understood the idea of versioning...,git,ci9utd8,-5,t5_2qhv1
1338066,0,t1_cijnche,Hiyea Im a vim user. I have fugitive installed and I love it but I dont use it for staging files and committing. Maybe I should give it a try.,git,cik5clw,1,t5_2qhv1
1368824,0,t1_cinuq8s,Care to show me your github repo? It may be that you pushed them to a branch besides master and arent seeing the option on github to look at different branches.,git,cinvcpt,1,t5_2qhv1
1585617,0,t1_cje5dqi,Seriously. I can think of several applicable entries in MJDs File of Good Advice,git,cjf1f36,1,t5_2qhv1
1597457,0,t1_cjggiju,Patchwork seems to be interesting thank you for that. I do not need the stuff right now as the project I thought of when asking the question does not exist yet but will exist in  months and maybe we me and my team get patches via email so I know how to handle them now as Im the maintainer for the repository. If there are only few patches per month or whatever I can handle them on my own but patchworkjenkins seems to be a good idea if there are much patches on the ML.Thanks a lot for your comment!,git,cjgj1es,1,t5_2qhv1
1622127,0,t1_cjjhpmc,TILbrb switching to zsh,git,cjjmuzh,1,t5_2qhv1
1704658,0,t3_2duzhg,Blogspam.,git,cju18lz,1,t5_2qhv1
1740606,0,t3_2ect12,deleted,git,cjyken9,-1,t5_2qhv1
1816113,0,t1_ck7xsa8,thank you very much! This is great to understand the concept and its usefulness.,git,ck80w1z,1,t5_2qhv1
1822040,0,t1_ck863we,Your solution is fine. People come up with janky solutions for this kind of problem all the time and in my opinion if a simple script will get it done proxying is overkill.,git,ck8qs5j,1,t5_2qhv1
2067889,0,t3_2ijf47,Or even better than git stash  commit early commit often!,git,cl2oa5y,3,t5_2qhv1
2071640,0,t1_cl2zjxn,Be very careful with rebase as it rewrites history and makes finding clean cuts of code hard in particular when rebasing with a history of commits that goes back days or weeks.Rebase works best if it is part of a CI type mindset where you are committing up and accepting changes from other developers as often as possible ideally many times a day. When rebasing over a short period like a day the changes to historycommitshas that can happen during a rebase are small close to the conflicting commit and the previous state does not live long enough for people to become reliant upon it. When rebasing over a longer period regular practice will make for a clean history but you will find it very hard to pick a point in the past that buildsruns the way it did on the day you committed that change.You seem to like feature branching you may want to look into GitFlow as it automates the steps common to managing feature branches.,git,cl35g45,1,t5_2qhv1
2124304,0,t3_2j96gi,Protip Dont do this with the Linux kernel repo... My file server is unhappy today.,git,cl9ug6v,3,t5_2qhv1
2286106,0,t1_cltlmxr,Why not just use the stash if you want to use the stash?,git,clua2lm,1,t5_2qhv1
2327521,0,t3_2lyurx,Welcome to git!Im not sure I understand your use case and that might have to do with the vocabulary. Git doesnt have a send verb. We have commit and push which are both sendysortof activities that relate to branches. We also have tags which exist independently from branches.I understand that you have an original version of course code and you have changesadditions that arrive periodically that you need to keep revisions of. These changes could just be commits to the master branch. A commit is just a collection of changes to files with a little message attached to it. A commit gives you a hash to identify it like cee which isnt very user friendly which is why we also have tags. A tag is just a way to attach a string to that commit so that you can easily locate it later without having to remember the hash.The major usefulness of git comes in having multiple branches doing merges and sharing your work with other people. Even as a lone developer git has a lot of power in how you can sling changesets around in useful ways. From your description it doesnt sound like you intend to have any other branches or do any development work yourself. Do you plan to just use git to keep track of the revisions provided to you by the vendor with all of the projects history being a straight line of additions or will you be using git for other additional purposes?,git,clze7s1,3,t5_2qhv1
2484236,0,t1_cmisfod,Thanks. Really helped me look at it differently.,git,cmitt79,1,t5_2qhv1
2523140,0,t3_2oi3u2,Do you just want to be able to view the commit history for each file separately?,git,cmnwu56,2,t5_2qhv1
2704929,0,t1_cnbjbyn,Arent backslashes almost always escapes? They are in bash at any rate. Glad you found out! ,git,cnbjgfh,1,t5_2qhv1
2844540,0,t1_cnr0nuw,Im not sure thats right. If you clone a local repo sometimes you can get the objects directory to be mostly hard links. But for a regular working copy what other files are there to link with?,git,cnrf8j8,1,t5_2qhv1
2967665,0,t1_co59o9z,What needs to be fixed? Is there an issue for that?,git,co5fsz4,1,t5_2qhv1
3391651,0,t1_cpev7ni,When deploying to Phonegap Build you simply give it the address of the git repo.So it relies on the file structure being a certain way in the git repo.Why the condescending ...s ?,git,cpeviad,1,t5_2qhv1
3426342,0,t1_cpitl2d,If you commit it will take whatever is in the stage and turn that into the commit so yes youd get both sets of changes. This is a good opportunity for you to learn about two useful commands git add i for addingremoving things from the index interactively and git stash for making temporary fake commits not on any branch.Switch to feat use git add i to remove the feat changes from the index and back into the working tree. Then use git stash to take those unstaged changes and make a fake commit out of them. Switch back to bug use git status to verify your stage is accurate and commit. Switch back to feat git stash pop will restore your changes and you can continue working.,git,cpittxe,1,t5_2qhv1
3561196,0,t3_30rpbi,Which of the two copies currently is a repository i.e. has a .git directory?If they both do they are copies of the same repository.  Youre already done.  Or did you want something else?Did you make changes to one that you want to copy to the other?  Or just record in the others history without changing its current state?Im not even sure what you mean by merge.  Normally in a version control system it means to combine two or more sets of changes.  But you didnt mention any changes so theres nothing to merge.These are all straightforward things to do but your question isnt clear which you want.The other thing that affects the easiest way to do things is what kind of access you have to the two copies.  For example if you only have FTP access to one its hard to run git on that system.,git,cpy7a6q,1,t5_2qhv1
3603457,0,t3_31mqly,Unless youre using a hosting solution like Github and have some artificial limit I vote for different repositories cloned from some base repo. Then you gitflow per product as normal.If updates to your baserepo are rare youll be able to pull and merge from the base into the product. If base changes are common then Id recommend separating the common code from the changing code ie whatever youd want to pull from base to product and making that commonrepo a submodule to your product projects.,git,cq30q3i,1,t5_2qhv1
3611390,0,t3_31pp44,A practical overview is one thing but Id suggest covering the theory and design of git briefly as an introduction. Why distributed version control systems are so powerful why cheap branches and cheap merges are core to git and such and so forth.People will listen if you give them a practical run down but theyll only learn if they understand why what youre telling them is important.,git,cq3xawj,6,t5_2qhv1
3706187,0,t3_32u1kd,GitHub is not Git.  It is just one of a number of services that support Git remote clones.A Git repository is merely a directory tree of files along with a number of Git objects in the hidden .git directory in the top directory of the tree.  You can use Git locally and only locally if you want.  Theres no requirement to have a remote clone.And personally Ive never been convinced of the utility of maintaining a clone of a repository on a production server i.e. a web host.  You shouldnt be doing development work on the live version of something so why would you need Git tracking the live version?  Use Git on the systems where you work on things then just copy the most recent useful versions of files to the production serverweb host using sftp rsync or whatever.  Just tell that utility to ignore the .git directory.Caveat emptor.,git,cqeqb4m,2,t5_2qhv1
3742612,0,t3_337x82,Every once in a while someone posts such a tool here and most of the time it has some weird dependency or is difficult to install or written in a language that is not preinstalled.Thats why I always put a shameless selfplug here D,git,cqivs37,2,t5_2qhv1
3776674,0,t1_cqml2jq,Oh I totally agree thats why I said and maybe Im being a bit too anal with this question but hey if Im starting down the road of thousands of commit messages why not do things properly from the start?,git,cqmroka,2,t5_2qhv1
3817922,0,t1_cqrg5rx,Isnt that considered bad practice? Why does it have the hinting built in?     git comitgit comit is not a git command. See git help.Did you mean this?          commit,git,cqrh2d6,5,t5_2qhv1
3895091,0,t1_cr09q59,Thats relatively easy to detect because your trees will become out of sync.,git,cr09w5g,1,t5_2qhv1
3997216,0,t1_crbbk6x,That is the only situation that I can imagine. In which case I have bigger complaints with the team. If my dev is not good enough to run his code on his computer how can I trust them to not make intermediate mistakes like introducing bottlenecks in solution or maintaining clean logs or troubleshooting environment issues ,git,crbwybh,1,t5_2qhv1
4024713,0,t3_36lnvj,,git,crf1pi2,3,t5_2qhv1
4070728,0,t1_crk5dqf,Thats neat sort of like an open source dropbox alternative? Im not sure if this would play well with git though which Id like to use for development as source control or would this method of syncing the git repo between machines be ok?,git,crkagu1,1,t5_2qhv1
4292599,0,t1_cs9h9o5,thank you too!,git,cs9hwz2,1,t5_2qhv1
4327308,0,t1_csde5pi,from what Ive read git subtree would be a more robust and simpler alternative,git,csdf0gk,1,t5_2qhv1
4338319,0,t1_csek853,cheers  i was after something a little more involved than that but without all the theory that comes with Pro Git or something like that. Maybe theres nothing out there maybe it wouldnt really translate to a vimtutor esque tutorial anyway! cheers ,git,csenpfl,2,t5_2qhv1
4623706,0,t3_3eaion,Why not simply use git pull rebase? If you want that as the default lookup autosetuprebase in git help config.,git,ctde4nq,2,t5_2qhv1
4625620,0,t1_ctdmr45,sure,git,ctdmrua,0,t5_2qhv1
4780687,0,t1_ctuod8v,Heres the origins of TBD if youre interested   ,git,ctx59u0,1,t5_2qhv1
4807525,0,t1_cu0g4qp,Works for me on .,git,cu0j0tk,2,t5_2qhv1
4815164,0,t1_cu1h7c6,OK thats perfect then. Im not saying you shouldnt show them off Im saying they dont belong in the same repo as the blog. My question about deleting the blog was just a thought experiment to better understand the nature of the projects.I would split the repo as described in my earliest post and then redesign the blog so that it does not depend upon the projects as subpages. Some other kind of dependency will be needed. I dont know enough about Jekyll to make a specific suggestion but Im sure there are many ways to do this.The central point is that Git is designed to be used on a oneprojectperrepo basis. This idea has to take precedence over the implementation details of Jekyll. The blog is just a way of showing off the projects so the blog needs to adapt to the reality of how the projects are organized not the other way around.,git,cu1hol7,1,t5_2qhv1
4924709,0,t1_cufaj5y,I thought this is what I might have to do. Thanks for your help.,git,cufar2b,2,t5_2qhv1
4930754,0,t3_3icxlz,I put a byte .gitignore in directories that would otherwise be empty.,git,cug26vt,3,t5_2qhv1
4932476,0,t1_cug8o11,Are you using Zsh or Bash? On Zsh those   get collapsed. Perhaps you should try running gitradar bash?,git,cuga0et,2,t5_2qhv1
5031977,0,t1_cusf34a,gtOr should these be merged at all? I made several minor but unrelated changes to a library Friday so I took the time to go back and split them out into separate branches and PRs so they could be evaluated and assessed for mergeability independently. Ahhh I had an inkling thatd be a possibility.Assuming Im merging the branches named patchx for . how is that done? Ie merge pathgtpatch ?,git,cusjm6h,1,t5_2qhv1
5161458,0,t1_cv84r4n,Absolutely. Follow this advice!,git,cv85bja,5,t5_2qhv1
5171317,0,t1_cv808bx,I highly recommend against this. Better to use git revert. If you have other people working on the same branch youre git history will be kinda fucked. Better to use git revert. ,git,cv9c19n,2,t5_2qhv1
5184014,0,t1_cvaup6w,Wow starting to realize I have a lot more to learn with Git. I really appreciate the indepth explanation. And  for the naming convention idea thats a great idea and Ill probably end up implementing that anyways.,git,cvav3pd,2,t5_2qhv1
5207404,0,t1_cvcuvdy,Im sorry to do this but Im going to go through your post and talk about a few things.gt You only need branches if you plan on working on more than one alternate current version at a time.This is wrong.  There are lots of reasons to have multiple branches even with only one developer working on the code base.  See the famous Git Flow workflow or the simpler GItHub Flow.  One example is that you  might want to develop several features while still maintaining i.e. bug fixes the main branch you can use a branch for each feature and merge them back in later.gt Copying works fine for Git backups as long as there is only one user and you dont do something really dumb.In my opinion you should always have an upstream bare repo and a checkout copy of that even if they are both on the same box.  This is one way to get the best benefit out of Git.  This way you can make copies of a repo and as we all know a copy of a repo is still a repo so you can just pull from the source.  Now as far as how best to back up that master repo.  My opinion is that you should use an offsite backup tool say CrashPlan or a private repo say Bitbucket to back things up.  Remember two copies means no copies.gt Git only works well on plain text files.Nope.  This is completely not true.  What is true is that Git doesnt handle binary files well.  All this means is that any change to a binary file requires a new copy of that file to be generated in the repo if you commit it.  Further your example of a Word document is interesting because of what a Word document really is it is a sort of zip file that contains marked up versions of your text and style sheets.  Ive not experimented much with Word docs in Git but I know that GitHub supports diffs between them so Id imagine they are stored pretty in a nonbinary way.  Ultimately if you have a lot of frequently changing or large binaries there are tools out there to help you move them off to their own location that leaves only small text references to them.Again sorry to dump on your reply but I think it is important that people understand this particular tool.,git,cvdon8x,3,t5_2qhv1
5220465,0,t1_cvf21vp,Im gonna guess that with things like API Gateway   allowing code snippets to be directly linked to endpoints and http methods this becomes helpful. Disclaimer this is a shot in the dark. Ive only used about  of that intimidating AWS consoles many offerings CodeCommit and API Gateway not among them. ,git,cvf9akx,2,t5_2qhv1
5360484,0,t3_3of9l0,Yeah its excellent. Its especially useful if you ever find yourself trying to make sense of a complex merge tree.,git,cvwv20v,1,t5_2qhv1
5533526,0,t1_cwip87c,youre free to use git for linear histories too.,git,cwiyg2r,2,t5_2qhv1
5638927,0,t1_cwvsq33,removed,git,cww29xr,1,t5_2qhv1
5703933,0,t1_cx31qtu,Btw quick tip along the same lines    pretty    myformat  formatCautohCautod Cbold bluead ann        sCresetThen you can reference that format just like the predefined ones    alias    slog  !git mylog dateshort prettymyformatThat way the format is easier to reuse.,git,cx44n0k,1,t5_2qhv1
5842280,0,t1_cxlamaz,Something I was just thinking about that is similar to long running merge commits  how do you handle long running feature branches? From what you just said the final result should be a single buildable squashed commit Added feature X that adds feature X. Following on from your previous message I guess you would create a local branch and work on the feature there making many commits and squash down once done. Assuming you werent collaborating with anyone else on the the team would you keep that branch local only until the feature is complete? And if so does the lack of back up of the work youve been doing not concern you?,git,cxlg6ub,1,t5_2qhv1
5860725,0,t1_cxnj7xh,I guess Im not making myself clear. I want to authenticate with username and password manually everytime. I just dont want to do it in a gui popup like the latest git bash makes me do. I want to do it from a command line prompt like the older version of git bash makes you. Thanks for the help though and not calling my question stupid,git,cxnvciv,1,t5_2qhv1
5983444,0,t1_cy2swwt,You know I obviously came across this quite a bit but they always seemed too complicated. However I decided to take another look and I ended up using this tool.I spent all day but I can finally say that I am almost off SVN. It took a while since I did some other crazy stuff like splitting off SVN repos into multiple git repos got to play with filterbranch etc and more.I hope I am happy with the decision. My biggest concern was that if I have any large files and if they change I now have full history on all checkouts. assuming I do not filter them out.However I actually think it may be a wash. On my server I would keep a checkout and the server part plus a backup. On my main laptop I would keep a checkout and a backup just in case. Now I have the bare repository on the server plush a working copy and then a working copy on my laptop. Therefore assuming no other compression or optimization the storage is the same.The only difference is other working copies. But I am okay with that. I just now think of them as other back ups!Thanks for your help,git,cy3ylms,1,t5_2qhv1
6053322,0,t1_cyd1sdl,Every commit in Git is a logical representation of a snapshot of your entire project. Git uses a Merkle tree to make the storage inherently very efficient when there are only small changes from one commit to the next but in no sense is a commit limited to the files that changed since the parent. A Git commit is not a change set though the rebase and cherrypick command sometimes interpret it as a patch or delta and the storage is about as efficient as if it were a patch or delta.,git,cyd39yj,1,t5_2qhv1
6103099,0,t1_cyh8l6g,The post history of uwpdevz explains it this account is just spamming links to the same two adriddled blogs.,git,cyjcz6v,1,t5_2qhv1
6189871,0,t3_40bkit,What does echo USER show?Does export USERname fix the problem?Im guessing its Bash not Git thats getting the wrong username set in some startup file.,git,cyt81ow,2,t5_2qhv1
6220528,0,t1_cywmumf,gt Changes would be made in individual worktrees from that one clone on separate branches.I guess you could do thatyou mean using the brand new worktree function in the latest git release?I dont think the workflow possibilities of that new feature have really been well thought through by anybody at least as far as Ive seen. The established workflow most people do is developers clone their own copy of the repo work in that pulling updates from the blessed central repo and pushing up their changes. A lot of people are afraid of gits mergecentric collaboration strategy before they try it. Especially moving from svn it feels pretty uncontrolledmy thenmanager went through the same agita. It does take some getting used to and you have to know that every now and then there will be a manual merge to deal with. People need to be trained how to deal with that.Why are you looking to avoid cloning? Its not like thatll reduce your number of merges.,git,cywpgbt,1,t5_2qhv1
6296464,0,t3_41v3dy,I believe youre thinking about it backwards. The .blender file should be tracked and the .obj should be .gitignored since its generated from the .blender file.,git,cz5c4mp,4,t5_2qhv1
6302981,0,t1_cz5zwwy,Nah then I wont get fancy colors,git,cz62tgx,1,t5_2qhv1
6311047,0,t3_421ale,We use both at work. Bitbucket for internal private things and Github for public. The only reason for that is the pricing model for BB suits us better.Having used both the projects feature is going to be really really useful. At the end of the day though both have features over the other and I think the killer feature is still Githubs massive user base when you want to be very publicfacing.,git,cz6zum6,5,t5_2qhv1
6328512,0,t1_cz8yij4,Given that thats essentially how gitlab gogs etc. do it...    man gitshellTake note of the c CLI flag. Still on mobile so google it yourself. If memory serves correctly Serverfault has a solution doing exactly that.,git,cz8zdoj,1,t5_2qhv1
6470788,0,t1_czod4lm,How is that relevant?,git,czomis6,1,t5_2qhv1
6622699,0,t1_d04arff,Neither for me. There is a version from September  in the Wayback Machine,git,d04ce6l,1,t5_2qhv1
6642560,0,t1_d069t37,seconded,git,d06ecfa,1,t5_2qhv1
6653493,0,t3_461pqe,I havent upgraded yet but for what I see on the image I like The little icons on the center panel for file status branches etc I dont see the Git Flow button and thats something I use sometimes I dont see either the status bar on the bottom right corner.I have mixed feelings about the icons I like them but I do agree that there should be more colours specially for the files status.,git,d07j1o9,1,t5_2qhv1
6966110,0,t3_4b41zp,No thats fine.But when you say I send files to bitbucket it makes me think youre not thinking about git in the right mindset.Commits are not some silly thing you have to do to send a file over remotely. Commits are supposed to be a set of changes from one stable point to another. And as upiv said you should be getting used to making changes on separate branches and only merge to master before pushing.Make a feature branch or at least a branch where youre actually going to work.    git checkout b devbranchMake changes to a bunch of different files and commit it.    git add A    git commit m Fixed issue  ...Now merge all your extra branches into master    git checkout master    git merge devbranch featurebranchThen you can push it    git pushTo think about how youre going to be working with git rather than just having it work for just you look more into git workflows,git,d15y06f,5,t5_2qhv1
7046894,0,t1_d1f4c01,That sounds very confusing....,git,d1f4g72,1,t5_2qhv1
7484972,0,t1_d2szkzf,Also what OS?,git,d2t00nm,1,t5_2qhv1
7524026,0,t3_4i79fd,Why make this if its not intended for use?,git,d2xg0kz,1,t5_2qhv1
7545150,0,t3_4inhh3,Funnily strange. Id suspect a change in line ending l as udakotahawkins suggests. For a merge to conflict there has to be a change in both sources parent commit  staging  so unless the rest of the file has been modified to the point where git cant find the same line that invisible line was not inexistent. ,git,d2zuhsd,1,t5_2qhv1
7566573,0,t3_4i7vxs,Distributed version control. ,git,d32a6uk,1,t5_2qhv1
7594360,0,t1_d35f98i,I dont know what you mean by subset  do you perhaps want to squash your commits before pushing them?,git,d35fv8x,2,t5_2qhv1
7720753,0,t1_d3jphen,I have toyed with the idea of using both OCR and QR code in the past. My QRcode idea was to make a git bundle of all the patches that need to be brought off the island compressing the hell out of it and putting it on an L QR codes. This is actually the best way to do it technically but I cant do that because the QR code is not human readable and must pass through human censors who censor all information leaving the island.edit spelling,git,d3jsp1t,1,t5_2qhv1
7730588,0,t1_d3kveu9,Thank you for your response. I do understand its inherent power. Im amazed frankly that something like it exists to help people collaborate all over the world.I will follow your advice and look at these repos and their messages. Ive been so overfocused on my own issues Ive forgotten to just go look at other successful repos. Thank you for the suggestion.,git,d3kwvix,1,t5_2qhv1
7854180,0,t3_4mt7ot,The key question here is if you have pushed to a remote branch.  If you have then you need to revert the commit.  Otherwise you should just be able to do something like this     git checkout ltcommitHashOfThingBeforeMergegt    git branch delete ltyourBranchgt    git checkout b ltsomeNewBranchNamegt,git,d3yvphr,2,t5_2qhv1
7869123,0,t1_d3zoqrz,Glad that you asked though I try not to advertise because of the comment below.Apart from being more collaborative with our customers better UX and all of those promises every company has we try to design things from the company perspective rather than from open source community perspective. The following are examples of such Support for Git Subversion and Mercurial repositories this is especially for those organizations that have a lot of legacy projects Ability to configure SAML single signon authentication in the cloud which is related to the below multitenancy e.g. you always belong to a company that is completely isolated from other companies even the user accounts. This is not the case in Gitlab.com Github.com nor Bitbucket.org where you always have an account for the whole service which is then limited to e.g. organizations or repositories More fullfledged issue tracking ability to define custom workflow rather than opendone trello type task board coming up later this summer Project focus rather than repository focus allowing users to reference an issue from multiple repos in a project for example or group them together in general Separate account type for external collaborators that limit the access rights and visibility allowing you to invite your customers or collaborators easily to a project like mentioned in the blog post Ability to trigger hooks from branchfile patterns In onpremise installations the Ability to expose usersgroups to other development tools via LDAP API which allows you to delegate access management to your other toolsThese might not sound like a lot Im sure but I believe theres a niche for a such offering we have and naturally we keep diversifying to offer such features we think that benefit the software companies and teams inside them. I remember a quote from JetBrains when someone asked about their product vs. competitors which went something like this Try it out if you like it pay for it if you dont dont let us know how we can improve.Im more than eager to hear any feedback you have regarding the above or if you took Deveo for a test drive.There are naturally other smaller and technical details such as that Deveo web client is a SPA written in EmberJS that allows us to do some neat stuff on the frontend side but thats another topic.,git,d40k950,1,t5_2qhv1
8225683,0,t1_d55riuo,Ok so I just removed those individual dirs and that solved it...,git,d55rm1r,1,t5_2qhv1
8295109,0,t3_4t12c1,I think you have to change the origin to the ssh version not  You could add a temporary remote to test it delete origin or change origin in the .gitconfig file like it is described here,git,d5eg457,1,t5_2qhv1
8335623,0,t1_d588f59,Thanks for the feedback. A better Readme is coming up. ,git,d5jia56,1,t5_2qhv1
9005435,0,t1_d7uaumk,Will do!,git,d7ub9z4,1,t5_2qhv1
9105000,0,t1_d8665sg,Doesnt that require you to have a .gitkeep file in that folder and thats what youre really keeping?Otherwise why would you need to keep an empty folder?,git,d869wn4,2,t5_2qhv1
9107577,0,t1_d86kioj,Ill give it a look  I dont mind paying for good software but when the license locks it down from using on my other computersvms its a bit of a pain. Also like to refer users to an opensource onesorting out a guide for one of my projects that needs diffing of a third party file for update contributions.Is KDiff referring to KDiff? Just evaluated that and it seemed to flop over whitespace conflicts line endings had a drop down to set for the file which is good. It had an ignore whitespace setting but the merge tool seemed to disregard that noticed configuration for regex that might work? Interface felt clutteredheavy and coloursdefault at least not too good on the eye.Kompare touts itself as a successor to KDiffagain not sure if referring to originally or KDiff it was sort of nicer but felt clunky using with some poor UX  Still preferring Meld at this point on KDE right now and didnt run into the whitespace ignore problem this time round so might have been a bug fixed since I last used it. Configuration wasnt a hidden menu in the title like it was on Gnome either ,git,d86l1r1,1,t5_2qhv1
9234057,0,t1_d8mhchw,gt Its nevertheless a good idea to prevent this forcepushing behaviour serversideI guess it depends. There have been times when I would want this behavior Ive occasionally used it to catch horrific mistakes before the technical lead sees it  ...but yeah generally force is not something that you should ever have to do,git,d8mhfz6,0,t5_2qhv1
9312762,0,t1_d8w9rw6,The files are blog posts for a static site generator. The aspect that I need advice on is deploying a folder in a semiunsorted state. This folder would be repeatedly updated and in turn repeatedly deployed. Plus it has the added complication of also combining the contents of another folder before being deployed hence my suggestion of subtree.,git,d8wglxe,1,t5_2qhv1
9342880,0,t1_d8zqpcb,I certainly dont have enough understanding of your environment to make a fullyinformed recommendation. If youre convinced that this will save time thats good enough for me.,git,d909zg0,1,t5_2qhv1
9360800,0,t3_58n252,I did exactly this about a year ago except we did a step to SVN in the middle. CVS to SVN was relatively okay SVN to Git wasnt as straightforward.The two main problems we had were that. The original CVS repo included every project under the sun. We split these off into separate folders beforehand so that we started with multiple cleaner repositories.. The original CVS repo had sooo many tags and branches. This made the conversion take absolutely forever.  commits literally took weeks to convert and then still failed.I would strongly advise that you forget taking history with you and that you split the projects into logical repositories in Git. The time itll take you to retain the full history is not worth it when you can still just look back through the CVS history. Just take the last few hundred commits to cover the recent past.I would also suggest reducing the number of branches youre converting. I ran into a lot of problems with these and had to manually patch some in the end.,git,d92jrws,2,t5_2qhv1
9412974,0,t3_59io3v,gt How would I solve this problem? Can I run the dockerfile I linked to generate a docker image from it then remove system components that I dont want then send the new docker image up to the docker hub and then use that with bitbucket piplines? That seems... overly complicated.Perhaps but how often would you have to redo that dockerfile? Yes building a custom image kind of sucks but it will save so much time and so many build minutes later on.,git,d995s3l,1,t5_2qhv1
9417222,0,t3_59m4hb,Use ssh URLs not  if possible. And install correct SSH keys for both users. The user.name and email variables are only for commit identification. The failure comes from user authentication. If you want to push at a repo either user the SSH keycredentials of the repository ownerOr give the other user access rights to the repository.The second one is achieved by adding roles to the project on gitlab but I dont know how in github.,git,d99p5bl,1,t5_2qhv1
9488804,0,t3_59j0yq,uhamidshojaee Its just too much money. GitKraken is a great tool and I would pay for it... Once.   or more even I would pay for a perpetual license. But this price point I cant bear and so we have to break up. Its upsetting because I thought we would be together for a long time. Maybe one day if something changes we can try it again. Ill check on your blog periodically.Dont call me.,git,d9ip548,3,t5_2qhv1
9542908,0,t1_d9m8uum,GitKraken is pretty solid featurewise. I think it has everything Ive wanted from it on a regular basis. Obviously it wont let you do very complex stuff eg. delete all remote branches that contain a certain phrase but for  of what you need on a daily basis its there.GK is  my suggestion for noncorporate users. Cross platform stable featurecompleteenough active development nice UI I like it. My only issue with it is the expensive subscription pricing. ,git,d9pd0kf,3,t5_2qhv1
9587396,0,t1_d9ue3rs,Woah sorry if I came off as aggressive that wasnt my intent. Was simply explaining the differences to yourself and to future readers!,git,d9uuc2y,2,t5_2qhv1
9627218,0,t1_d9zpvg8,You may not be trying to automate the fix but youre trying to find a onesizefitsall solution to a complex problem that may have many different causes.If the developer is only pushing a single commit or if the file was introduced in his most recent commit he can use git rm and git commit amend to remove the offending file. If he is pushing multiple commits and the file was introduced in an earlier commit he will need to use something like git rebase interactive first in order to get back to the right commit to edit.However unless the file was added entirely accidentally he will not only need to remove the file but he will also need to redesign and reimplement whatever code changes are needed to achieve the same goal as he had when he added the file. This is not something you will be able to encode into your hooks rejection message.Basically your developers are going to need to be competent Git users in order to deal intelligently with this hook. A canned command is not going to be sufficient. And there is no canned command that any reasonably person would actually use in this scenario. Anyone who uses git filterbranch in a nonautomated way to delete a single file from a single commit should be fired.,git,d9zr3rj,1,t5_2qhv1
9663338,0,t3_5depyx,Git for Windows comes with grep. If youre somehow not using Git for Windows on Windows well... you should be.,git,da47itk,1,t5_2qhv1
9779891,0,t3_5f9asc,Yes when people always add to the end or beginning of a list that often causes merge conflicts. Two workarounds that might be practical Add in alphabetical order instead. Bonus is its easier to find stuff. Negative is that people might complain its too hard. This also doesnt solve  of cases because two additions might coincidentally go into the same position. Split the file into multiple files one per person.,git,dail4gr,2,t5_2qhv1
9857497,0,t3_5ghrt8,Git is part of my task. I certainly wouldnt consider git add . ampamp git commit m  ampamp git push a usual step either.Generally I make a very small change. Then I commit that change. Then I make another very small change. Then I commit that change. Eventually this pile of small changes has added up to a big change and some feature is now done. So I squash the commits and then I push.,git,dasge28,2,t5_2qhv1
10185433,0,t3_5lrxs0,My only guess is there might be a .gitignore change halfway through? It could cause previously ignored files to suddenly show up as new changes.,git,dbykppm,2,t5_2qhv1
10208028,0,t3_5m6kax,Not the author but this is a great read. There is a lot of information out there that git reset hard loses work. We are all human we make mistakes. Without knowing about git reflog and the inner workings of git you are just as bad off as you thought. But git to the rescue!,git,dc14xpl,1,t5_2qhv1
10264455,0,t3_5mzp0t,Without more details its hard to say. I agree with your reasoning that without making modifications to the todo it should be a noop. Even if there were somehow conflicts that needed to be resolved it should stop midrebase and ask you to address those not just error out. Is there anything else included in the error output?,git,dc7j5o3,1,t5_2qhv1
10281968,0,t3_5n7nm4,Docx are just zip files full of xml files e.g. try unzip l document.docx.  Perhaps store the exploded docx file and run everything through xmllint format before storing things in git.  These are all linux commands though.  p,git,dc9in0h,9,t5_2qhv1
10478672,0,t3_5q3087,Ive done this so far Installed python . amp git  set up python amp python scripts to path git clone url git checkout everything is up to date now how do I install that app? trough git or trought python?,git,dcvv6j4,1,t5_2qhv1
10484547,0,t1_dcwegol,gt or arent part of something you charge money fori can seriously not see how this has anything to do with anything. Do apps that someone charge money for run always on multiple servers and have N users that need to access it? Or is it just that i need to complexity to justify charging money? Is it because there is a change to push bullshit? What surely never would happen with a CI because we all are always writing perfect test cases?Seriously it is ok if you do not like my article or what i do. But this is pedantic,git,dcwj68s,1,t5_2qhv1
10506437,0,t1_dcyzpgt,Well checking out a remote at least didnt throw an error but it didnt checkout any files either     git checkout tfsdefault    Note checking out tfsdefault.        You are in detached HEAD state. You can look around make experimental    changes and commit them and you can discard any commits you make in this    state without impacting any branches by performing another checkout.        If you want to create a new branch to retain commits you create you may    do so now or later by using b with the checkout command again. Example          git checkout b ltnewbranchnamegt        HEAD is now at dcb... New Release blah blah blahThis looks like an issue with gittfs or maybe even our TFVC database. Maybe I could try gittf instead.,git,dcz0l63,1,t5_2qhv1
10593149,0,t3_5rmsv7,What overall are you trying to do?Whats driving you away from the standard option GitHub?,git,dd8lnv0,2,t5_2qhv1
10729125,0,t1_ddlyjo7,There are some workflows that are IMO more comfortable and faster in a GUI namely setting up complex commits and exploring recent history at least in those cases that the GUIs can handle.Another aspect of this issue is that the GUIs are more accessible to newbies. Yes it would be ideal to have developers coming to my team from other SVN based teams properly schooled int he ways of Git but I just dont have time for that. The most usual process is to explain a few very basic things give them SourceTree and then guide them along the way few people are willing to actually sit and read a proper introduction article. SourceTree makes them functional rather quickly.That said Sync is evil. Premature pushes are source of most pain our devs encounter since git reset hard is enough to get most people out of trouble on their own as long as they did not push newbs dont get access to push force. Sync on the other hand encourages pushing willy nilly every time the developer wants to pull which tends to be all the time since they see the little behind number and want to get rid of it.,git,ddmmnqf,1,t5_2qhv1
10768016,0,t1_ddqgyy5,Id like to agree although I havent dealt with TFS specifically. We recently did a GittoGit migration merging several repositories into one  which took several weeks to get right and our decision was to preserve all history. The last few weeks weve had several situations where that has been really helpful e.g. tailoring special release branches from old branches and commits combined with new bug fixes.One thing that we sacrificed was the ability to do certain automated buildstasks on Jenkins for older releases from the new repo so we basically moved old repos and Jenkins jobs to a readonly attic in case we need to go back at some time  but so far therea been no need to do that and as time goes by this need will go away completely I hope.,git,ddqn37r,1,t5_2qhv1
10782159,0,t3_5u2kxt,removed,git,dds3nkh,1,t5_2qhv1
11150469,0,t1_dev6rhr,Havent actually executed it but at least this command doesnt seem to require root permissions like some other programming language package managers.,git,devw6kr,1,t5_2qhv1
11275602,0,t1_dfa12z3,It treated it as the same file. Said modified each time i changed it but under the old name.,git,dfa2n5q,1,t5_2qhv1
11316267,0,t3_61gfql,You were probably told not to branch on master to avoid making a bunch of random branches on master that might confuse others. You do have to branch off of master to work on things but typically youd branch for some feature giving it a name and then merge that back to master when done. The person who told you not to branch on master may have meant not to try out variants of ideas on a given feature on master but to branch once for the feature and then do any experimental branching on that branch so master doesnt end up polluted with experiments. Just guessing though.,git,dfeoidh,0,t5_2qhv1
11444629,0,t1_dfshyu6,once in a while. Sounds terrifying.But as a great man said Men dont take backups men cry,git,dft8lej,2,t5_2qhv1
