,controversiality,parent_id,body,subreddit,id,score,subreddit_id
9855790,0,t3_5fz4ob,Hey I agree with ukdf a lot. I thought before just now that I would leave it at this response because its good but heres my two cents. A computer program is a process over time in an environment. As in physics we would like to know how a process evolves over time. In many cases we want to short cut running the process itself and instead simply extract invariant properties of the process before runtime. In physics we want to know the orbit of Mercury without live simulating all the laws of physics by simply watching Mercury.Its really expensive to run an entire computer program in full . It consumes energy time and space of CPU RAM etc.... It would be nice if we could selectively simulate or flat out predict the behavior of computation without running it on a CPU and then dumping the registers and memory at every hardware breakpoint to figure out if a variable is always positive. In the case of computer programs you can think of the environment as the values of the registers memory hard drive etc... in a particular time.  There are four camps here. Understanding the underlying assumptions mathematics and limitation and connections among these four camps is extremely important. Most people focus on two things and dont study the interconnections.  The fours camps are static dynamic syntax and semantics. Traditionally people specialized in two sub camps of   static  amp semantics or  dynamic amp syntactic.  But things are changing now and many people are mixing these categories. ,REMath,das8dpk,2,t5_2vea0
