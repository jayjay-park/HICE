,controversiality,parent_id,body,subreddit,id,score,subreddit_id
23479,0,t1_ceh3p94,Youre actually  right and I apologise. These are often quite tricky concepts and I know myself how many different explanations from different angles I needed before I understood various things like VAOs. Having lots of different ways of explaining things to people is a good thing. Sorry.,cpp,ceh3u25,6,t5_2qi27
53915,0,t1_cekk631,Have you used these tools? Could I reasonably expect my code to still work and do exactly the same thing? ,cpp,cekkgt5,2,t5_2qi27
161382,0,t1_cewt1m1,I have seen that method. I would like it if I could name the variables e.g.    for autoamp objname autoamp object  map        do something with the object and its name.or    for autoamp objname object  map         shorthand         do something with the object and its name.which assumes autoamp for key and valueThoughts?,cpp,cewtbtt,1,t5_2qi27
166422,0,t1_cewzhql,Subscribed!,cpp,cexdzv1,1,t5_2qi27
172016,0,t1_cexz7xp,Can you explain?,cpp,cey0x1e,1,t5_2qi27
199216,0,t3_1we5om,    cout ltlt yeart ltlt Forestednis invalid syntax.You cant have a variable and a string literal next to each other like that theres no operator implied in that statement.Note that with string literals you can have      cout ltlt Hello  World ltlt endlWhat you want is     cout ltlt year ltlt t ltlt Forested ltlt n   Prefer stdendl to nAlso your code has huge problems.  The least of which is that it will not at all do what you want but will print out a ton of repetitive garbage.  And thats only on the condition it prints anything at all due to buffer flushing.Also its standard practice in C to initialize variables with a value if they have one.  Prefer for example     float Forested  .Fto      float Forested    Forested    Technically an int to float conversion hereLastly year should be an int not a float and the expression year returns a copy of the previous year.  You would prefer year to year  the parenthesis are completely unnecessary here.Dont mean to be a dick I know you just started but getting these things straight help you understand exactly what each line does rather than just saying Well this does work so I can use it.,cpp,cf14sox,6,t5_2qi27
312554,0,t1_cfd57g0,Totally depends on the language environment but most importantly workplace follow the teams rules opensource too. It depends on the language because the entire grammar might allow different characters in identifiers like question marks and exclamation marks as in Ruby. Youll see something like foo.sorted? or foo.sort! to show its either returning a boolean or modifying the object instead of plain foo.sort which will probably just return a sorted foo without modifying it. Some languages allow hyphens usually those are just subtraction or part of an operator like gt  or  Other langs have instances likeThis most have classes named LikeThis some have snakecase some are incredibly short like in C some Java class might LookLikeThisFactoryBufferedStreamReaderFactory. Globals or macros USUALLYLOOKLIKETHIS.I see a lot of Python code in camelCase from people who came from other backgrounds but I try to follow PEP  which I always recommend for Python. No one wants to see tabs in Python source.A few standards GNU Google C style guide Mozilla Coding Style PEP  again Github ruby guide some ruby guide Oracle JavaAs someone else mentioned read code. In this respect read good well maintained mature code thats been looked at and cleaned up by many people. Study the patterns and read any style guide they posted.,cpp,cfd5ybv,3,t5_2qi27
324593,0,t1_cfea4iw,This is somewhat my picture too nicely exposed ,cpp,cfeext3,1,t5_2qi27
341266,0,t3_1xzlf5,I also suggest you to watch the STL videos on MSDN if you get tired of reading. Those are more advanced and also cover a lot of stuff that you will not find in most books.,cpp,cfg54ee,2,t5_2qi27
349115,0,t1_cfgcp82,gt The second key to understanding the error will be realizing that constiterator and iterator are  fundamentally different types different than T versus T const. Actually T  and const T  are also different types related by a conversion and they will trigger the same kind of mismatch during template argument deduction. As an aside vector iterators are allowed to be pointers although in VC they never are.,cpp,cfgyc5r,1,t5_2qi27
356517,0,t1_cfhopy4,Haha sorry.  I do wish it were in C by default though.,cpp,cfhpwoe,0,t5_2qi27
358416,0,t3_1y6919,deleted,cpp,cfhwzhc,3,t5_2qi27
369623,0,t1_cfiqjm6,Right! How could I miss that! I had this in my notes  and it is listed in Second part but somehow it did not appear in the final articles. Will definitely upgrade the content.,cpp,cfj2s03,2,t5_2qi27
383193,0,t1_cfkh97p,yeah just explaining why it isnt used...,cpp,cfkhegt,1,t5_2qi27
392308,0,t1_cflc1uk,Yes. That would actually be a trivial change to the standard.,cpp,cflfg0k,2,t5_2qi27
417762,0,t3_1yv0zl,The austere path that I followed was to implement SHA hashing then Huffman compression and finally BWT compression Each project is relatively small very precisely defined unlike make a game has obvious correctness and performance tests involves complicated algorithms and data structures and does useful work unlike the vast majority of beginner coding tasks. Their downside of course is that their work is invisible which many people find uninteresting. But if youre like me HOLY SHIT MY CODE IS COMPRESSING DATA AT A HUNDRED MEGS PER SECOND AND DECOMPRESSION IS BYTEFORBYTE IDENTICAL THIS IS THE AWESOMEST THING EVER is powerful motivation.,cpp,cfo2f2w,8,t5_2qi27
472492,0,t1_cftyblv,That said with a makefile project you can use G,cpp,cftz3so,2,t5_2qi27
481429,0,t1_cfuxdbg,filesystem will probably come as a Technical Specification this year. Still if you cant wait you should be using Boost.Filesystem which is available today.,cpp,cfuzpjz,2,t5_2qi27
482275,0,t1_cfu9oox,First of all its unfortunately not as clear cut a dangling pointerreference may lead to memory corruption which as hard as hell to track.Now between a coredump and a memory leak I would pick  the coredump when it comes to debugging  the memory leak when it comes to operating a service with highavailability with redundancy a not too wild leak is just a matter of recycling the process once every XThe thing is predictable trumps unpredictable from an operability standpoint.Of course since I use C its really like I have a choice anyway ,cpp,cfv36ah,2,t5_2qi27
491241,0,t3_1zoarr,Heres one reason. Lets say you write a function that should only work on arrays with  members    void fooint x         cout ltlt x ltlt endl  This is safe right?    And you have the following code in main    int main         int a  This only has three elements        fooa  So this wont compile right?    You might think that latter wont compile. You might think that type of a is different from the type of the parameter of foo and therefore it will fail to compile. But youre wrong. The compiler will laugh at your parameter type and just let any old array bind to it. Update See the responses to this comment for more on how you should not have arrays in your parameter types  unless taken by reference or some other indirect route.If instead you take arrays by reference instead of by pointer decay then things become a little safer. The following will only accept int arrays with exactly  members    foo  int  ampx You can even use template deduction to learn the length of the array at compiletime    templateltsizet Ngt    foo  int ampxN Also its not directly possible to pass an array by value. There are some easy workarounds wrapping it inside a struct but that just leads to slightly messy code.All these problems are solved by std array. Or of course vector if you want to be able to resize at runtime.,cpp,cfw3vn0,3,t5_2qi27
495781,0,t1_cfwmgqc,This is a perfect example of why we need punctuation for sarcasm.,cpp,cfwmh6i,1,t5_2qi27
523673,0,t3_204999,deleted,cpp,cfzspmx,-1,t5_2qi27
576069,0,t3_20q7cy,Integration with the systems packagemanager would be a cool thing.,cpp,cg5r4z6,7,t5_2qi27
576354,0,t1_cg5ib40,I dont know ncurses but youll get a much more useful learning experience if you start with something more visual and modern like SFML. As I said check out rgamedev the sidebar especially youll find plenty of freetouse art assets that you can integrate in your game if you cant create them. Itll be much more interesting to look at than a console as in command line game.Also one thing I might add to my original post  Rendering is an important topic but you dont need to know how to write shaders and stuff unless this is what you really want to do. Otherwise its nice to have a good overview of how things work but chances are that if you dont specialize in rendering youll not touch the rendering system ever in a large company anyway.,cpp,cg5sawv,1,t5_2qi27
593654,0,t3_20xuwi,switch is misspelled on line . just saying,cpp,cg7r3hi,3,t5_2qi27
635613,0,t1_cgbqhuv,The distinction is less technical and more usageoriented.  Serialization serializing a session context kept in memcached to be accessible from various webservers.  Messaging the web browser tells the webserver to buy X items of ID Y.Serialization is symmetrical you register information to access it at a later date generally in the same process or a clone. On the other hand Messaging is about communicating between widely different processes operating with different BOMs and maybe even different languages this in turns means that messaging is not tied to one particular representation of the business and in general each message defines its own representation requiring translation on both ends Sender BOM gt Message gt Receiver BOM.Now things get blurry because you can perfectly use messaging thrift protobuf ... instead of serialization because its a superset of the functionality. The cost of course is that this requires implementing the translation and has some performance overhead on the other hand you get robust solutions for multiple versions handling and thus backward compatibility and maybe forward compatibility.And things get blurrier because serialization framework also attempt to cover the backwardforward compatibility cases and multiple versions handling.So the two come from different requirements but lean in the same direction.,cpp,cgcipqu,2,t5_2qi27
640989,0,t1_cgcva65,In hard realtime environments theres no malloc on the hot code paths either. Use of stack is fine or already allocated and locked memory.Basically anything that could stall for unbounded time is a nono mutexes too.,cpp,cgd4q5q,3,t5_2qi27
645067,0,t1_cgdldp9,deleted,cpp,cgdleoo,2,t5_2qi27
658372,0,t1_cgf1i86,gt  The odds of my investigating a bug report that was filed against the exact same version of a file I have checkedout on my machine is extremely low less than .It should be  because you should check out the version it was filed against first especially with a rapidly changing codebase. Why would you try to diagnose a problem by looking at a different version of the code?,cpp,cgf3ub1,2,t5_2qi27
661870,0,t1_cgfe5cj,Whats considered the standard way to do a breadth first tree traversal?In one of my courses my professors example used a dequeue but my friend and I were able to do it with two queues.,cpp,cgfi64l,1,t5_2qi27
676571,0,t1_cgftmpy,you could use the .data method.,cpp,cgh6d39,1,t5_2qi27
714495,0,t1_cglh89b,Right its clearly undefined if you are still inside the unlock function. But its also possible that the very very last thing in the unlock function is releasing the lock and there is no further work and thus no chance to be caught in the mutexs code when it gets destroyed perhaps the only reason this bit the Linux kernel is that it has to manually go awaken the first person waiting on the lock.,cpp,cglhpja,2,t5_2qi27
745706,0,t3_22pa9f,I ended up rolling my own lightweight version. The boost implementation seems pretty good though assuming you dont have any issues with using boost in your project in the first place. Any reason for wanting an alternative?,cpp,cgp1kfy,1,t5_2qi27
751237,0,t1_cgp1nkv,I share similar views.at is related to defensive programming. In my opinion it shouldnt exist. As Design by Contract tells us  its up to the client code to ensure the bounds are respected. Its not the responsibility of the calledcode. Lets take another example. Lets say we have a program that loads a file made of distances and that it applies sqrt on them for whatever reason. Having sqrt throw an exception when it receives negative numbers would result in error sqrt cant process negative numbers. Having the caller code check the distances at the source would result in negative distance found at line  of file bardistances.foo.Checking the positivity of the number is not sqrt responsibility. Its obviously the responsibility of callerclientcode. Its up to the client to respect sqrt contract either by construction  gt sqrtabsx or by checking the inputs if x lt throw ...   sqrtx.Its exactly the same regarding at and . The client has to ensure the bounds are respected. When outof bound access is made it means there is a programming error. And assertions are our best friend here.Unfortunately according to the standard  is not expected to assert anything.,cpp,cgpo7e8,1,t5_2qi27
888109,0,t3_249zj2,Some points I noticed by simply browsing Try to avoid writing empty destructors theres generally no reason to do so. Dont ifelse through an enum if you can use a switch that allows the compiler to check your code better. Avoid starting variable names with underscores as these names can be reserved see here Common alternatives are var or dvar for data members. Avoid NULL e.g. in parameters.hL Use  or nullptr instead. Dont use C header files like time.h use the C versions ctime cmath etc. If at all possible try to write constructors with less parameters.  For example parameters.hL Wow. Dont specify enum values unless you really need to. E.g. esoptimizer.hL is useless as that is the default behaviour. Constructs like genopheno.hL are useless instead of else return gen just write return gen. Again at genopheno.hL. Avoid commenting out source code e.g. esostrategy.ccL  Doublecheck your headers do you need ltiostreamgt in esostrategy.cc You compile with Wall good. Maybe Wextra and pedantic will help you catch more issues didnt test this though. Style I dont like your indenting. See for example genopheno.hL in this function the ifcode is on a different level of indent from the elsecode and the else is superfluous anyway. I wouldnt indent on  already.Not a proper code review but I hope it helps.,cpp,ch58c9c,12,t5_2qi27
926808,0,t1_ch9mptb,gt My you are young.Heh. Oh man I wish. Im an embittered C veteran and a C networking library built specifically to interface via C would be leaps and bounds better than the old standards.My you are young. P,cpp,ch9msol,4,t5_2qi27
977840,0,t1_chexfwc,Cool that you included Wayward on your list! Author here  I have to note that its super early days for the framework and that it certainly isnt ready for production at the moment.Im currently working on development workflow with Railslike automatic reloading which is to say ondemand recompilation and its looking good.,cpp,chfft7r,2,t5_2qi27
1029956,0,t1_chlcryp,I do prefer unsigned char but thats mostly when I expect to use any type of math or bitwise logic. If its just raw bytes to parse is there a reason to prefer unsigned?,cpp,chld0yv,1,t5_2qi27
1237867,0,t3_289n27,Of all these the exclusion of lambdas bind and rvalues seems like throwing the baby out with the bath water.  Ive had the privileged of starting something new and writing pure C.  It is an enormous improvement and really smooths some of the warts out there albeit while adding some complexity and extra questions like the lifetime of a static variable inside of function object created with bind as that function is moved to a thread.    Lambdas bind and closures in general are extremely powerful.  You can even do things like bind a function with an argument and move it to another thread or create state for your function object by passing in a reference not a pointer and not a const reference and then modifying it.,cpp,ci8vk5t,6,t5_2qi27
1253072,0,t1_ci8thpd,I can sort of understand the exceptions thing.It only takes one person to write exception unsafe code and youve got resource leaks.  Of course this can be fixed by the alternate style guide of RAII everything.,cpp,cial3mk,2,t5_2qi27
1417236,0,t1_citryyx,You could also do thisHowever this is without the type erasure so not sure if helpful..,cpp,citxgi9,1,t5_2qi27
1420975,0,t1_citgh56,I dont see how    for auto entry  table     vs    for auto amp entry  tableis any more error prone than    for stdpairltint stdstringgt entry  table     vs    for stdpairltint stdstringgt amp entry  tableI actually find the former less error prone because there is less noise so its clearer when a copy is being made. You are also sure no conversions are taking place.,cpp,ciuear7,1,t5_2qi27
1429411,0,t1_civg8ry,Yes the market is huge and private firms are starting to get into this but too slowly. Im not saying that nothings being done just that theres still a huge market for more.,cpp,civgcfk,1,t5_2qi27
1472193,0,t1_cj03iw7,No its not.Platform specific code ! vendor lockin. Using your definition include ltlinuxfs.hgt would also be a kind of lockin because you cant compile that code on OSX or MSDOS or iOS. Operating systemsprogramming languagescompilersapp frameworksplatforms etc are by definition incompatible with each other unless someone takes the effort to make them portable or uses a common abstraction layer like Java. Vendor lockin would be if hotmailgmailyahooetc switched away from POPIMAP and forced you to only use their email clients. Now youre actually lockedin because its impossible to get your email out since the service only works with their clients.A developer making a choice and creating platform specific applications is not lockin. No developer looks at WinMain or J and thinks This just just like other platforms so let me write my app using this and Im sure its going to run everywhere else.,cpp,cj0tbzk,7,t5_2qi27
1485091,0,t1_cj2fcu4,As RaphaelMiedl pointed out we already have them. Theythemtheir as neutral singular pronouns.Of course we could always use vevervis.  Having read entire books full of them I can attest that they sound quite good.,cpp,cj2fjaj,6,t5_2qi27
1493373,0,t1_cj3dsto,gt Source?You can ask them if you want a definitive answer but come on.  No open source volunteer project that is already short on resources to maintain one copy of a huge code base would ever agree to take on the job of maintaining a code bomb that duplicates functionality they already have but has its own entire set of bugs and issues.  I also dont have to ask if someone wants a hot poker in the eye because thats the software maintenance equivalent.,cpp,cj3gwfv,1,t5_2qi27
1497246,0,t3_2bbhtb,Oh yeah and thanks for mentioning fp!Its very much WIP although in a very usable state despite that only clang supports it.Would very much appreciate any input!,cpp,cj3ydfn,1,t5_2qi27
1504742,0,t1_cj4w0id,Imagine your library exposes an extern variable in a header. Of course global state is poor design so you would want to deprecate this and come up with something better!,cpp,cj4w58u,7,t5_2qi27
1552127,0,t3_2by45s,gt Which one is better? I would go with a third option use a strategy pattern to implement the support for each separate platform and then use a factory to supply the object for your platform.Example pseudoish code    class FooStrategy         abstract base class that defines the interface for all foo classes        class FooPlatformA public FooStrategy         platformspecific code for platformA        class FooPlatformB public FooStrategy         platformspecific code for platformB        FooStrategy  FooFactoryvoid               if PLATFORM  A    return new FooPlatformB    elif PLATFORM  B    return new FooPlatformB    endif    Then with this component you can run platformspecific code this way    FooStrategy foo  FooFactory    foogtdosomethinggenericThis approach has several advantages platformspecific code is stored in separate classes which helps code review and development if you need to support a new platform just add another concrete strategy for it and tweak FooFactory accordingly the code is cleaner and easier to read and follow through depending on the case compilers may be able to optimize away the polymorphism away from this implementation,cpp,cjatzcj,-6,t5_2qi27
1582829,0,t3_2bvibg,Ive started a video series recently.....Should have the next few up in the next few days...,cpp,cjeosq7,1,t5_2qi27
1641796,0,t3_2d3gxq,I thought you were working for Microsoft!? Why do you help the competitor?,cpp,cjm42pl,-5,t5_2qi27
1702034,0,t1_cjtlszd,How does hiding the type improve readability. Well this is a great variable. Of course I have no idea whats stored in it nor any notion of how to use it.The argument that one can change type declaration of the returning function is just dangerous. Because its not in the declaration thats the problem. Its in its use. Changing the return type means that you change how the return type is subsequently used and its not always caught by the compiler.Not declaring types inhibits readability.The correct solution is to have refactoring tools that allow you to change types deterministicly.,cpp,cjtpcly,15,t5_2qi27
1746428,0,t1_cjza0cy,gt Which wouldnt work since you would have in addition to define operatorlt making this complete and utter overkill.I think that depends on how often the map is usedhow many other people will read this codeetc.gt Aside from that What is the descriptive name?Often the two things are completely independent and their union is never needed elsewhere because all we want is a map that takes more than one key.Its hard to say wo a concrete example. There are perhaps some times when stdpair is most appropriate but I think in many examples you can come up with useful names.,cpp,cjzaq5p,0,t5_2qi27
1767602,0,t1_ck1hval,Right I was thinking about the onthewire format  presumably it boils down to something similar. Also for languages that dont support unions which is most of them Id guess you cant do much better than the previous inmemory representation...,cpp,ck1ynd5,1,t5_2qi27
1769959,0,t3_2eq3hg,This is such an obvious attempt at clickbait recruiting its not funny. Come on mttd Im sure you can do a better job at filtering out such things. ,cpp,ck29c1v,5,t5_2qi27
1795426,0,t3_2f2r8h,Ive been looking into tinyformat so its cool to find something similar. However this appears to be faster than sprintf? How?A nice feature would be support of printf format specifiers eg s and d so it could be more easily dropped in as a replacement.,cpp,ck5gnve,2,t5_2qi27
1812222,0,t1_ck7fx72,I cant see how it could get missed. Quicksorts quadratic worst case is not an obscure secret. Its a wellknown property of the algorithm.,cpp,ck7jtns,13,t5_2qi27
1822244,0,t1_ck8ckes,deleted,cpp,ck8ros8,1,t5_2qi27
1844084,0,t1_ckbcvkr,Ive sort of come upon the same sort of idea.  I can basically bind to the pair such that everything after if !pairexpected.validthe negative sidebecomes a lamda or function.  So it would be something like at best    return string.nonull.readcontext gtgt resultpair p           ... all the rest....    Then this happens like  times in that function.The alternative appoach I can think of is that I dont have the appropriate fundamentals.  I need something that turns a stream into a sequence of expectedltsometypegt.  Each time I ask for the next one it needs to do the parse...then I need an operation that turns THAT into expectedltsometypegt or whatnot.What I dont want to do is to fall into the trap of trying to get one language to do what another language does better.  So I dont want to force C into being Haskell.  But Im trying to see if these constructs fit into some sort of C paradigm without a bunch of nonsense that doesnt fit.,cpp,ckbepg3,1,t5_2qi27
1853348,0,t1_cjtu9ko,Im just starting to learn C and wow thats a lot of stuff.,cpp,ckcivat,1,t5_2qi27
1879206,0,t3_2g4ex1,Flying from Australia is prohibitive. ,cpp,ckfmyhh,17,t5_2qi27
1879802,0,t1_ckf6cso,GPL forces the application using this library to also be opensource ref ,cpp,ckfpjk1,3,t5_2qi27
1890491,0,t1_ckgw09j,gt British He was Scottish I believe,cpp,ckgzv6x,1,t5_2qi27
1916609,0,t1_ckk1lqt,This might be a somewhat legit reason to use it in the presentation itself but I fail to see why you wouldnt export it to pdf for the repo.I should however mention that unlike Bjarnes horribly broken presentation yours just has one title that contains a linebreak.Concerning LibreOffice This is what I am using. It might render correctly if the fonts are installed. This is however not everywhere the case but pptx obviously assumes that it is which is the main reason why it is such a horrible format. Not all of Microsofts fonts are installed on my GNULinux.PDF does not have this problem and can be viewed with lots of different programs most of them much more lightweight than a full blown officesuit.,cpp,ckk4zxy,1,t5_2qi27
1942736,0,t1_ckm3uk7,Ive been trying to find a good comprehensive book on template metaprogramming does anyone have any suggestions? I can find plenty of short tutorials online but Id love a full book on it as of now I only see one book on Amazon for it.,cpp,cknas3i,1,t5_2qi27
1969964,0,t3_2h70y5,The problem with addChildPane is slicing not having a copy Pane could be a Frame but you would lose all the Frame properties in the copy constructor.  You could easily store the properties as a sharedptr internal to Pane so that editing any copy of Pane edits the same set of data.Having a sharedptruniqueptr being passed in for addChild is the straightforward solution.Another approach would be to use  which would let you store an array of them amp convert to Pane ondemand without slicing.,cpp,ckqkxvx,1,t5_2qi27
2064147,0,t3_2ig6uw,As a senior game designer Ive been teaching myself programming to keep myself relevant. I started with Python and got as far as being able to write a simple text and ascii based games Hunt the Wumpus and Battle Ship but after talking with some programmer friends in the industry it was recommend that I just jump straight into C since thats the majority of what games are programmed in and also the language that they use. Since I was very much interested in joining their company I took this advice.Perhaps game development has more of a need for C than other industries.,cpp,cl275ii,1,t5_2qi27
2100033,0,t1_cl6lalv,bind is seductive but dangerous.  The problems with bind are A bind expression involves reading and writing a language that is Not C.  In contrast a lambdas body is ordinary C.  Yes theres extra stuff introducing the lambda that has to be learned but lambdas are popular so programmers are going to learn them. bind conceals much more behavior from the programmer.  Did you know that bind passes bound arguments as lvalues?  I learned that the hard way and Im an STL maintainer.  Ive seen other experts get this wrong and it matters e.g. when trying to pass uniqueptr.  In contrast a lambda makes it perfectly clear how its passing its bound arguments and ordinary arguments. bind makes it harder to see and control when things are evaluated.  For example bindfunctor meow immediately calls meow at the time of binding not the later time of invocation.  Many people dont realize this Ive seen experts make this mistake.  If you want to delay meows call to the time of invocation very few people know how to do that and its absolutely horrible nested bind.  In contrast lambdas make it easy to control ordinary calls in the body happen at the time of invocation and we now have initcaptures to do things at the time of construction. When bind goes wrong due to misuse it explodes. I eat angle brackets and drink compiler errors for a living yet bind errors horrify even me.  Theyre going to complain about a hugely complicated mess of STL machinery  much more so than something simple like trying to sort constant or bidi iterators which terrifies most programmers but shouldnt. In contrast because a lambdas body is ordinary C errors are ordinary. bind is less efficient.  bind stores the bound functor as a data member and that is very difficult for optimizers to see through.  Function pointers will typically not be inlined unlike when passing them as arguments to algorithms which all compilers are now capable of inlining.  Bound arguments are also stored as data members which are less likely to be optimized away.  In contrast lambdas often have the opportunity to hardcode their bound functor and arguments making them ordinary candidates for inlining and optimization.bind still has some tricks up its sleeve like what it does with PMFs.  But its just not worth the cost.  I almost always encourage the use of Library machinery over Core but with bind its the reverse.  It was a good idea in the TR era but lambdas really are superior even if they can be more verbose in certain situations.,cpp,cl6rduk,8,t5_2qi27
2111876,0,t1_cl882s7,gt class RefltTgt holds a pointer to TAs does Tamp i.e. references are implemented via pointer indirection anyway.,cpp,cl89j1x,1,t5_2qi27
2126083,0,t1_cl9zrxw,gt Which are quite a lot.The list of editorsIDEtools supporting autocompletionsemantic analysis via a compiler fronted is actually pretty large VisualStudio XCode emacs vim sublime text KDevelop Eclipse Doxygen.... I cannot think of a widelyused editorIDE that supports autocompletion and doesnt support a compiler frontend to do it. I would be surprised if you could provide any evidence.gt These languages are not in mainstream use yet.Ruby C ObjectiveC Python Javascript offer this via extension methods. The UFCS proposals are just a first step in the same direction. The next step is the multimethods proposal also for C. gtThe compiler allows it anyway.Since main has to return int I highly doubt it.gtThe functions outside of the class are still part of the class API.True.gt moving code outside of a class doesnt make a class less monolithic. Not true. Nonmember nonfriend functions can only use the class public interface. Nonmember friend functions and member functions can also use the protected and private interface. Since public  protected  private gt public nonmember nonfriend functions improve encapsulation.gt By coding the common parts between classes in a base class.I thought that by generic you meant polymorphic. Reusing behavior is fine.gt  sorry I dont have the time to watch an one hour and  minutes presentation in order to get a single proposition.gt  again I dont have the time to watch videos. I found the pdf though.You got the points from the talk wrong.gtit creates functor objects that inside them do various things and all these functor objects have the same signature.He could have done the same simply using stdfunction and lambdas but for the sake of the argument lets suppose that he does that for illustrative purposes.No he implements a polymorphic interface with valuesemantics that is not based on subtyping. That is the whole point. gtEven so he actually uses subtype polymorphism in order to implement the functors. Its impossible not to use subtype polymorphism even if it is in the root object.Using a virtualfunction for typeerasure is an implementation detail.gtHowever applying this pattern to large software components that can handle many messages will quickly become a maintenance nightmare functors will be scattered around the code introduced at arbitrary places split responsibility between many different files etc.Proof? The author actually is lead architect at Adobe which has bought many companies and has to build single applications using completely independently developed codebases. The author argues that not applying this pattern is what leads to a mess and shows proof that inheritance based polymorphism doesnt scale across independent codebases while conceptbased polymorphism does. Conceptbased polymorphism is also faster than inheritance based one there are a couple of blog posts on probablydance.com about this since you only pay for polymorphism when you need it. With inheritancebased polymorphism you pay all the time not only for the polymorphism you use but for the possibility of using more polymorphism in the future. This is why devirtualization without final and LTO doesnt work across TUs.gt Reading code with this is difficult.gt Too much fuss without any real benefit.gt So now I will have to pay attention to one more message from the compiler without any actual benefit.gt No thanks. Really.It is difficult for you for me it is actually way easier. For me and most people on the reddit thread this features has a lot of benefit. gtThat means my function bar introduced locally will never be invoked. But when reading the code I will assume out of habit that it will. If you dont want to change habits when changing to a different programming language you probably shouldnt change. Noone forces you to program in c it is optin. Just stick with   or C with classes and you will be fine. as in code that works with a lot of different types not code reusing behavior through inheritance.,cpp,cla2l11,2,t5_2qi27
2149449,0,t3_2jloav,openFrameworks works on all platforms.,cpp,cld1ldr,2,t5_2qi27
2160233,0,t1_cl8km8q,gt act all butthurt They dont  you didnt read it. ,cpp,cleeye8,1,t5_2qi27
2246694,0,t1_clpeiac,I was sort of assuming it was so you could do code like this           stduniquelockltstdmutexgt outerLock  No associated mutex                 stduniquelockltstdmutexgt innerLockmutex Mutex is locked here          outerLock  stdmoveinnerLock  outerLock is associated with Mutex innerLock becomes unassociated.             Mutex is unlocked here...up one scope.Now this is a pretty contrived example and I cant think of an easy use off of the top of my head.  But its nice if you need it and its exactly the kind of pattern I was talking about with the two state objects above.  I like to avoid them but Id rather have them and proper move semantics then not have them at all.,cpp,clpeovd,2,t5_2qi27
2282525,0,t1_cltp186,gt General purpose programming languages are not analogous to the different tools in a workshop.They are different workshops. If you have enough time you may produce at carpentry workshop every tool and detail you need to repair a car. But it will be rather shitty and paintful repair.,cpp,cltu5tu,3,t5_2qi27
2285961,0,t3_2lfafc,Code Blocks is good. The UI is a bit unintuitive but ok.It is cross platform and relatively snappy compared to the Java based IDEs,cpp,clu9fdv,3,t5_2qi27
2289387,0,t1_cluo3xn,Technically you can use globbing to get files in CMake but its not recommended since then you have to manually rerun cmake when you or another developer adds or removes a file...so youre pretty much on the money,cpp,cluonie,7,t5_2qi27
2289826,0,t1_clu1nes,Do you use facebook? They have services written in Haskel.l Here is a blog post about it,cpp,cluqltr,2,t5_2qi27
2301174,0,t3_2lfafc,Kdevelop is looking promising so far!,cpp,clw53zb,2,t5_2qi27
2305024,0,t1_clwm357,Let me guess you havent read the proposal? Ranges are layered on top of iterators. Anything with a begin and an end is a range not just pairs of iterators. Ranges are also Generic and have concepts that are defined in terms of the iterator concepts.One of the coauthors of the paper is the former boss of Alex Stepanov the inventor of the STL. Hes not ignorant of its strengths.,cpp,clwm8pp,8,t5_2qi27
2342136,0,t1_cm16x8a,Yes thats right. Its just that new programmers dont know that theyre supposed to check.,cpp,cm17811,1,t5_2qi27
2342243,0,t1_cm0ty76,You can easily enough code in C and not use the fancy features  Almost identical to C then!,cpp,cm17p3c,0,t5_2qi27
2357927,0,t3_2m9tit,This is probably really naive but isnt it possible to create a program that reads in binary from a file or multiple and then creates a program that writes that binary to disk? That would result in a kind of self  extracting archive. The program could just convert the file to Base and store the file inefficiently in a hardcoded string. ,cpp,cm35fb9,1,t5_2qi27
2366126,0,t1_cm45n59,Sorry dont know. Googling got me this ,cpp,cm45uq9,-1,t5_2qi27
2449872,0,t1_cmefxq0,Ive filed bugs gcc  clang ,cpp,cmeiajh,6,t5_2qi27
2508452,0,t3_2o5c3c,I largely agree with CrazyEddie. However I have another question. Why would you want to work as a developer after finished your PhD? I dont know if its just me but development life is monotonous boring and you rarely if ever solve any interesting problems. I think you should look to other things than a developer. Youre overqualified for almost every dev job I can think of.,cpp,cmlzqz9,2,t5_2qi27
2509748,0,t1_cmm5h8c,Almost every library does this especially since referencecounting shared strings were banned in C due to concurrency issues. My own C string library  does the same thing.,cpp,cmm5utq,6,t5_2qi27
2548641,0,t3_2owj18,deleted,cpp,cmr8tb7,1,t5_2qi27
2590513,0,t3_2pguzt,I sometimes feel named parameters are a hack just as much as some of the C solutions that float out there. Languages that dont have strong type safety use named parameters but C does offer strong type safety and it can do better than that.,cpp,cmwptgp,2,t5_2qi27
2591094,0,t1_cmwp9z2,Asserts are your friend.  They are documentation and you should be using them in all code where the caller can detect the precondition ahead of time. Yes this puts the burden on the caller but it also means it doesnt penalize the caller for a check that may have already been done.  stdvector access bounds checks are often like thiswhilei lt v.size  vi   Here the bounds check is already done so theres no point in paying for it on every access.  In my experience trying to be smart and quietly handle these things is rarely a good idea because crashing is usually not the worst thing corrupting the users data is usually the worst thing and trying to handle these conditions can easily end up in corruption.,cpp,cmwsk39,5,t5_2qi27
2597080,0,t1_cmxkfds,True one can sacrifice safety for performance but this is not a decision to be made lightly nor I would argue even by default.Of course if it is truly the case that dx    gt  x   then the dx   test should never happen so performance shouldnt be affected plus or minus icache issues.,cpp,cmxkpvd,1,t5_2qi27
2617071,0,t1_cn069vh,Honestly who the hell programs in C without a debugger?,cpp,cn06u8z,1,t5_2qi27
2688622,0,t1_cn9bil1,The easiest way to Teach Yourself C in  Days.,cpp,cn9itlw,1,t5_2qi27
2732924,0,t3_2rbhn3,One thing I wish I could change about Json Are quotes really necessary on the lhs.  foo  bar  seems so much better than  foo  bar .,cpp,cnepzwy,-1,t5_2qi27
2747850,0,t3_2rj4op,    stdsortstdbeginfoo stdendfoo const Exampleamp e const Exampleamp e         return e.length lt e.length    If this is the usual sort comparison then it would be better to extract the above lambda and implement it as an operator overload    bool operatorltconst Exampleamp e const Exampleamp e         return e.length lt e.length        stdsortstdbeginfoo stdendfoo,cpp,cngf3gy,6,t5_2qi27
2748533,0,t3_2rjbrd,HiToday I would use I developed one too because proxygen was not yet out and the other are way too complicated or heavy for my usage it is running in production in my current and last job.In C  looks very interesting.Have fun.,cpp,cnghw1u,5,t5_2qi27
2786101,0,t3_2rzpc6,Read sidebars. ,cpp,cnkrpwv,1,t5_2qi27
2789687,0,t1_cnfd3xk,Think of tuples as being the closest C comes to supporting reflection.,cpp,cnl6ehe,1,t5_2qi27
2873320,0,t3_2sxos2,Neat although still very young. Wonder how fast it is just because its in cpp.,cpp,cnup40q,2,t5_2qi27
2904548,0,t1_cny4spm,This is the selling point for me in this.,cpp,cny946c,2,t5_2qi27
2932187,0,t1_co1c650,deleted,cpp,co1egpu,1,t5_2qi27
2969815,0,t1_co5nypl,Think about it. They are only so named because of their notation not their function. Nowadays postincrement is synonym with incrementing and returning a copy of the previous value but I dont see any logical explanation for choosing that to be post rather than pre other than it being an arbitrary choice.,cpp,co5ol46,-7,t5_2qi27
2997122,0,t1_co8mzbz,I agree that libraries should be preferred to changing the language but I think libraries should add functionality not language features. This library is pretending to add a new language feature. If you write the same statement as if  lt in gt numbers it suddenly looks very odd. Those less than and greater than operators certainly dont mean less than or more than anymore. If there were some feature of C designed for this kind of extension Id be fine with it  but theres not.,cpp,co8ndue,1,t5_2qi27
3001312,0,t3_2uh0d0,Those libraries are probably distributed as .so files in ELF format which should be compilerlinker independent as long as they comprehend the standard the same way   The link uduuuh provides should go into lots more detail.,cpp,co9313t,2,t5_2qi27
3077796,0,t1_co8m6gf,Woe on those who wish to stdfind three things.,cpp,coh0ekq,1,t5_2qi27
3110512,0,t1_co9ywlk,Visual Studio doesnt even support asm on x. ,cpp,cokej6k,1,t5_2qi27
3134647,0,t3_2w1uwp,You should describe the actual problem youre trying to solve because its not at all clear.  If youre talking about eliminating the warning you get when you define a function with a parameter that isnt used then thats easy dont give it a name.  For example    int fint x double            return x      You dont need any macros or variadic templates and its impossible to refer to that argument.,cpp,comwj8n,4,t5_2qi27
3151320,0,t3_2w81rc,It is interesting that the problem and requirements described in this speak is exactly the same as what lead to the the Wrap dependency manager link one link two of the Meson build system full disclosure made by me. Specifically works on LinuxOSXiPhoneAndroidWindowsetc use native packages when possible automatically download everything so the users dont have to available today,cpp,coomr0m,3,t5_2qi27
3178464,0,t3_2wiq6o,You might want to look at rec Its a scanner generator for Clike languages that uses regex. To give you a sense of how it may look like incomplete amp untested    int tokenizeconst char str           !rec          recyyfillenable            recyyfillcheck            recdefineYYCURSOR  it          recdefineYYCTYPE  char                     enum States           STNONE          STSTRING        state  STNONE              stdstringstream ss       const char it  str              for            const char cur  it          if state  STNONE              !rec                WS          tn                ALNUM      azAZ                NAME       ALNUM | azAZALNUM                    WS                 continue                                 NAME                 pushnamecur it continue                                                  pushnumcur it continue                                 ltlt | gtgt                 pushopcur it continue                                  |  | ltlt | gtgt | || | ampamp                 pushopcur it continue                                 ltgt!|amp                  pushopcur it continue                                 ltgt!|amp                 pushopcur it continue                                                  pushopen continue                                                  pushclose continue                                                  state  STSTRING continue                                                   pushterm break                                                  pushunexpected break                         else if state  STSTRING              !rec                                 ss ltlt  continue                                 n                 ss ltlt n continue                                                                    pushstringss.str                    ss.strstdstring                    ss.clear                    state  STNONE                    continue                                                                  ss ltlt cur continue                                             return     It should be capable of tokenizing expressions like const chars  foobar     into  const char  s  foobar        i|k into     i |     k  Overlapping rules like matching  and  are handled by writing the rule matching  first.,cpp,corg2o1,2,t5_2qi27
3343339,0,t1_cp7tokz,Thanks for the reply and also thank you to everyone who replied aswell.Yes i will be running simulations of the game. a strategy as i used it in my OP I would say would be defined as a certain way a specific team can get around a specific map coordinate execute and win the round.,cpp,cp9d60t,1,t5_2qi27
3363644,0,t1_cpbi1hj,C has that only if the programmer wrote them which turns any argument against them into it hurts if I poke myself with a stick.But dig this from perspective of C C has invisible function calls too    Struct  struct  look ma operator    Rettype ftype param  look ma copy constructor!The thing is these invisible function calls sure do come in handy. One can be an ignoramus or know how to use them.,cpp,cpboig1,10,t5_2qi27
3412363,0,t3_2z8ybt,Have you filed a bug report? No reason tailrecursion shouldnt work with a bit value on a bit platform. ,cpp,cph8g2x,3,t5_2qi27
3435326,0,t1_cpjpc0z,Quiet you. Its dark out there. Neighbors are sleeping.,cpp,cpjuphg,3,t5_2qi27
3457373,0,t3_2zs2ob,I think the only things missing from MNMLSTC Core not having MSVC support are constexpr member functions and voidt. I would violate intercontinental trade agreements to get voidt support.,cpp,cpmd71j,1,t5_2qi27
3475298,0,t3_2zs2ob,A hotkey for switching between open tab groups. The lack of a hotkey for this makes mouseless programming hard in VS.,cpp,cpoer82,2,t5_2qi27
3562610,0,t1_cpxs0i8,gtbtreesI dont think every single data structure known to man needs to be in the standard library. This is Boost territory IMO. Thats what Boost is for right? Put it in Boost  its probably there already  and if its widely used then it might be appropriate for the stdlib.gtasiois nice,cpp,cpyd3p2,1,t5_2qi27
3564885,0,t1_cpylxmd,Thanks for taking the time to respond STL those are the kind of features I was after. Ive read parts of the standard but not in its entirety and used streams though not to the point where I did anything significant with them. Now I have few specific things I can go and research.On a halfrelated note I am certain Id like to work with you if I could. Just not sure MS is the place for me ,cpp,cpymgi9,1,t5_2qi27
3631169,0,t1_cq61518,gtmy professional experience is all CThats probably why this probably encourages you to use inheritanceoriented programming.,cpp,cq66jfo,2,t5_2qi27
3632877,0,t1_cq60365,deleted,cpp,cq6dj3f,1,t5_2qi27
3655196,0,t1_cq8x0od,gt VAXWhich one?,cpp,cq8x2cu,1,t5_2qi27
3662051,0,t1_cq9nupy,I came here to realize that my cpp skills need improvement lots of it.,cpp,cq9p65p,7,t5_2qi27
3697906,0,t1_cqdrmke,Cool I will keep that in mind if I ever need a super high performance solution. Are there benchmarks for LibFlatArray? I searched their site and couldnt find anyI posted this more as an accessible way to expose people to two common SFINAE patterns and thought hiding it with an alias was interesting since aliases dont support SFINAE themselves. Also like you linked to a lot of people have problems with the syntax for creating multidimensional arrays so I wanted to point out a simple way to ease their pain.This is just about  lines of code to make the standard libraries more accessible. The standard library is designed for usability and good enough speed. If someone is working in high performance computing they obviously arent using this or the standard libraries for their performance critical code.,cpp,cqdsb2d,1,t5_2qi27
3704022,0,t1_cqeh7xk,Running late makes sense I had forgotten that it was originally codenamed Cx!,cpp,cqehesu,2,t5_2qi27
3708162,0,t1_cqex3bn,gt Im still missing the point. Lets take your example againNo the example both mine and yours are fine and work fine.But if you replace string with bool they dont work anymore and the C standard requires that my example with iterator work for any type if the class be considered a container so the iterator be considered an iterator of a container.You cant do        vectorltboolgt v    vectorltboolgtiterator iter  v.begin    boolamp bref  iterwhich means vectorltboolgtiterator doesnt conform to the C standard of iterators of containers and hence any algorithm using this iterator isnt guaranteed to work correctly or at all.Youre not allowed to have proxy references in your container iterators. Its against the C standard.gt And I hate stdvectorltboolgt because that specialisation should be an optionBut the point is  not that they shouldnt do a default specialization which they shouldnt but that you CANT do this specialization even if you wanted to!You cant create a container that uses a proxy to getset values. It isnt allowed. Iterators are so inconvenient in i do my own containers that even those who created the standard cant figure out a way to use it in anything by the most simple use cases.About the mutex thing  I think we might not be on the same page. So Ill just give an example implementation    class SafeVec      private        int data        mutable stdmutex m  actually multiple mutexes etc.      public         all the usual constructordestructor stuff        void setsizet i int val          stdlockguardltstdmutexgt guardm          dataival                int getsizet i const          stdlockguardltstdmutexgt guardm          int resdatai          return res            fully encapsulated no one has to worry about locking  unlocking  thread safety when using it no global mutexes.Now how would you access values with iterators given that the standard doesnt allow you to use proxy classes?,cpp,cqeyf3f,0,t5_2qi27
3716431,0,t1_cqfj67r,The Twitter example? The article admits its not a very likely scenario in real life. Or am I missing something else?Dont get me wrong I realize that this is theoretically a problem although some of it is probably in your std implementation and not in the standard and the article explains it pretty well. Im just assessing if it will ever affect me personally.,cpp,cqfwe8v,1,t5_2qi27
3743874,0,t1_cpz0w4a,gt Friend violates encapsulation     Nonsenses. Friend allows to declare fully private classes only accessible to very few selected classes. Properly used allows to strengthen encapsulation beyond what is possible with Java.,cpp,cqj0ysr,2,t5_2qi27
3745749,0,t3_33b06v,Or just call boostfusionforeach?,cpp,cqj8o01,4,t5_2qi27
3747393,0,t3_33b06v,You could avoid tuples by making a little helper function to apply a function over all members    template lttypename Callable typename... Vsgt    V foreachv Callable c const Vsamp... vs            V v        v.x  c vs.x...        v.y  c vs.y...        v.z  c vs.z...        return v    Example here,cpp,cqjff6o,3,t5_2qi27
3803623,0,t1_cqpsh7w,It was a joke  some people got it you didnt and thats okay!,cpp,cqpudhn,1,t5_2qi27
3811489,0,t1_cqq2cur,Especially today given that both Go and Rust are also targeting the same niche as well.,cpp,cqqqnye,-1,t5_2qi27
3816791,0,t3_3452jq,Would be nice if I got it nailed down like this in a real situation when I accidentally copyfail something then I could skip out on the static analyzer.None the less . Good enough.,cpp,cqrcf21,1,t5_2qi27
3949279,0,t1_cr1z2cy,gt svn.boost.org uses an invalid security certificate.gt gt The certificate expired on Sunday  March   AM. The current time is Tuesday  May   PM.gt gt Error code secerrorexpiredcertificateFirefox is also disappointed.,cpp,cr6g9u2,1,t5_2qi27
3949357,0,t1_cqyk5yz,C implementation is full of binary blobs containing .,cpp,cr6glc9,1,t5_2qi27
3952229,0,t1_cr6s4n4,Ah I hadnt heard that VS had partial support thats great! My understanding is that Intels compiler and VS usually take a year or two.I think I disagree with your five years assesment but well see ,cpp,cr6sdgh,3,t5_2qi27
3961216,0,t1_cr66v0z,Was going to ask this ,cpp,cr7t8ua,1,t5_2qi27
3989006,0,t1_cravoz7,Thanks. I was worried there was something exotic going on.,cpp,crazcco,1,t5_2qi27
4006399,0,t1_crcx31e,gt IMO use endl  it is idiomaticIt shouldnt be and only is because of poor teaching.gt if perf is an issue probably stream is not the best to start with right?Stream performance is one thing and is often acceptable even though subpar but overtly pessimizing said performance by needlessly flushing constantly is another matter entirely.,cpp,crcykgz,3,t5_2qi27
4046306,0,t1_crgimnm,Im the author or RapidCheck and Im happy you noticed the effort I put in to implement proper shrinking RapidCheck actually doesnt have any external dependencies at all it only uses Catch for its own tests and of course it uses itself. It has a tiny header for some light integration but thats it.Im considering doing some integration with Boost Test and Google Test as well. Preferably I want to be able to use existing fixtures that people have already written.,cpp,crhicou,4,t5_2qi27
4073643,0,t3_3787nj,If you are looking for something that you can do but want to show off then write it purely in bytecode using some kind of hex editor or cat program. Stripped down there isnt that much boilerplate so it is within the realm of memorization.,cpp,crkmeg4,2,t5_2qi27
4079056,0,t1_crl22xa,but what does it do? whats its purpose? answer dynamic dispatchwith templates PIMPL etc. you do static dispatch,cpp,crl8klu,2,t5_2qi27
4113988,0,t3_37olsp,Win is the API which came out with Windows  twenty years ago and before the C ISO specification. MFC and ATL were basically wrappers of this. WinRT finally brought C UI API parity with the managed languages and hopefully will see broader adoption once Windows  roles out.,cpp,crp7y03,1,t5_2qi27
4123282,0,t3_37v40y,From the C FAQgt Whats the difference between the keywords struct and class?  gt The members and base classes of a struct are public by default while in class they default to private. Note you should make your base classes explicitly public private or protected rather than relying on the defaults.gt gt struct and class are otherwise functionally equivalent.gt gt Enough of that squeaky clean techno talk. Emotionally most developers make a strong distinction between a class and a struct. A struct simply feels like an open pile of bits with very little in the way of encapsulation or functionality. A class feels like a living and responsible member of society with intelligent services a strong encapsulation barrier and a well defined interface. Since thats the connotation most people already have you should probably use the struct keyword if you have a class that has very few methods and has public data such things do exist in well designed systems! but otherwise you should probably use the class keyword.I personally just follow the coding standard I have in place.  Whatever you decide for whatever reason just be consistent for the sakes of anyone that reads your code.,cpp,crqa22l,6,t5_2qi27
4141945,0,t1_crsck08,Thats not kind of free I was talking about...,cpp,crsedq0,1,t5_2qi27
4190447,0,t1_crxvno0,Good post as usual .Apart from the pure disambiguation I would like to just give another example where enableif can also be really useful and makes the code more efficient With policies enableif rocks! It allows you to select a private overload that is more efficient when a specific type is given.For example for a job I had to develop an object that was keeping track of other objects and was ordering them. One of the class policies was to indicate if the tracked objects can be ordered by group.I used enableif to make sure that when groups were not used all the call to the group functions usual suspect addInGroup forEachElementInGroup removeFromGroup etc. were noops.Also while I love staticassert they may not be visible in the source at first glance so while I agree with uSTL that they are often preferable I personally find enableif useful in function declaration such as    template lttypename ConcreteType              typename  stdenableifltstdisbaseofltBaseType ConcreteTypegtvaluegtgt     I also sometime use macro to shorten those enableif.    void createConf constampcreate implementation is still hidden and yet you know that the type must inherits from BaseType. The only problem with this approach is that the compiler gives you a kindda nasty error message. ,cpp,crxwsee,2,t5_2qi27
4213064,0,t1_cs0fp7x,Its a two persons operation for now? and one of them knows autotools I was also expecting CMake.Its an interesting experiment to remove moc and all the Qt containers QVector QString QMap etc all that makes C people consider Qt not such a C framework.I dont think this was done before.,cpp,cs0h3k1,12,t5_2qi27
4242164,0,t3_39fe55,Question is it even possible to write the name of the type in this case if all you have is a function that returns something like this or is like Voldemort types in D?,cpp,cs3sr5i,2,t5_2qi27
4245833,0,t1_cs3zuzj,Yeah but generally you shouldnt be allocating and deallocating in the fast path anyway.,cpp,cs47rv4,2,t5_2qi27
4246164,0,t1_cs47rv4,And if you are then the virtual call is probably not anywhere close to your bottleneck.,cpp,cs494qv,2,t5_2qi27
4255204,0,t1_cs4d5yr,gtTelling people to learn C to make more is placing the focus on the tool and not the job. Telling people to make a strategic choice of specialty and then go deep is better advice.The thing about learning C is it is impossible to learn it without picking up a pretty good understanding of the hardware along the way. And its that deep understanding of the machine that makes better programmers  not C.,cpp,cs5a196,1,t5_2qi27
4292178,0,t3_3a5avu,Caven.,cpp,cs9g7ev,1,t5_2qi27
4292778,0,t3_3a2a28,Its exciting to see such an easy and upgrade friendly way to add parallelism to existing STL algorithms but Im curious why concurrent containers arent being added? Are transactions considered the first step towards possibly adding it in cx?,cpp,cs9in9w,2,t5_2qi27
4317004,0,t1_csc80oy,Am I correct in saying that the ABI proposal is for creating compatibility within a platform with compilers that support the same ABI as opposed to cross platform? That is it allows the use of object files created by different versions of the same compiler to share things like stdstring and not to allow an object file compiled for ARM to work with x?,cpp,csc958w,1,t5_2qi27
4330076,0,t1_csdootk,I am not saying that they are hard to understand. I am saying that they are hard to use without creating memoryrelated bugs and that most of the time they can and should be avoided. I am not saying they should never be taught. I am saying that the ways to avoid them should be taught first in order to prevent the people from thinking that pointers are something that should be used all the time.,cpp,csdq8wb,2,t5_2qi27
4332458,0,t1_csdq8wb,I understand what you say and I disagree. Java uses pointers all the time and people have no problem with that. Thinking that we can avoid considering the memory allocation deallocation while programming in C or C is a non sense. If people do not want that then they have to use another language. Honestly hidden call of ctor copy ctor operator is really more complex to understand than using pointer you have to use the pair newdelete. What you have to avoid is to return a pointer because in this case the ownership is not clear. If it is what you wanted to say in this case I agree with you,cpp,csdzwwt,-1,t5_2qi27
4369689,0,t1_cshzs4d,deleted,cpp,csi763w,2,t5_2qi27
4375685,0,t1_csiuotc,Nice challenge. I am definitely going to try when I get a chance.,cpp,csivj0j,2,t5_2qi27
4403643,1,t1_csm0qfe,Ive kinda sworn off boost after an initial torrid affair. Im going to make a stub allocator that just aliases to stdallocator for the timebeing so Ill be able to simply plug in mine once theres support from Apple for threadlocal.The usecase is that Im going to have a lot of threads constantly allocating and deallocating little fragments of memory darn near constantly its for a stochastic goal solver for autonomous AIs where work units can get shifted from thread to thread so I wanted to write a custom allocator that uses a static threadlocal map of freelists stored in a base class keyed by size in bytes. Without threadlocal storage Id have to wrap each access in a mutex and that would just be bad news.,cpp,csm0x96,0,t5_2qi27
4416580,0,t1_csngemh,Yeah sorry about that I always thought it was available separately with link.exe you can of course get it as a CTP but that is less than ideal. Now it is entirely possible that the compilerlinker arch is available as a redist andor available as a .dll in system but that is also not what I was thinking of... ,cpp,csnhe8a,1,t5_2qi27
4434622,0,t1_csph7b6,gt You should have to ask for nonstandard GNU language extensions they should not be enabled by default.That is not how vendor lockin works.,cpp,cspo5zk,4,t5_2qi27
4459628,0,t1_css4h71,In my experience it is always beneficial to use more than one tool for the job. Every tool has its strength and weaknesses why not use those for our benefit? PVSStudios advantages are clearly the nice integration into the IDE and the possibility to suppress diagnostics on an instance by instance bases. I dont like Wnoxxx as it may hide something important.,cpp,csster0,1,t5_2qi27
4501537,0,t1_csxu0cw,That is it. You rock,cpp,csy2lgm,2,t5_2qi27
4611970,0,t1_ctb8q7q,gt stop the progress of the current activityOkay so you are one of the people who think that exceptions are a flow control tool. Cool I can now safely ignore everything you are saying because we wont arrive at a point even worth looking at.And yes now that youve truly shown you are a moron Im being an asshole  like Im towards most of the morons I meet.,cpp,ctbx512,0,t5_2qi27
4641708,0,t1_cteyyq6,gt Perfect forwarding?Perfect forwarding in C is desirable because we can overload on the value category and might want to forward an argument to the right overload preserving its value category for overload resolution. For example    templateltclass Tgt class vector                 void pushbackT constamp wasanlvalue         void pushbackT ampamp wasanrvalue             The reason why you might want this kind of overloading is basically because not every type in C is efficiently moveconstructible. So this overloading is preferable to using passbyvalue    templateltclass Tgt class vector                 void pushbackT temp             at least in the generic case where we know little about T because you get to save an additional move which might actually be a copy in case of a nonmoveoptimized legacy type. For wellbehaved types like stdstring which are efficiently movable taking the parameter by value would be fine however.Rust differs in these respects. You dont have overloading. So you cant overload on the value category. Therefore you dont need something like perfect forwarding. On the other hand every data type in Rust is as efficiently and painlessly to move like executing memcpy. There are no move constructors that could fail. This makes it totally fine in Rust to just use passbyvalue for such a vectors push method.Of course if moving is just a shallow copy of the bytes we have to make sure that the source location is not treated as a valid value anymore to prevent errors like doublefrees and such. No destructor will run on it and the compiler doesnt let you touch this memory location anymore unless you write a new value to it which validates it again.And just like C does some copymove elision Rust can also avoid some unnecessary moves which should help with types have are large in terms of stdmemsizeofltTgt.I consider myself rather proficient in both C  years and Rust  year. And from what I can tell move semantics in Rust is almost as powerful as in C but more conventient and much less complex fewer things to mess up like rule of three violations no need for artificial zombienull states as part of the types invariant. There are some corner cases which only work in C because they require you to customize the behaviour of a move for example a type that always needs to report its new memory location to some other entity like Boosts old linkedptr smart pointer. But AFAIK this smart pointer never performed that well and it has kind of fallen out of fashion.gt Brief discussion of move constructors at the end its just a bytewise copy how will this play with custom allocators? Will stateful allocators be allowed?I dont see why this should be mutually exclusive. As for allocators The standard container types dont have a parameter for that. But you are free to write your own things of course.gt I guess whats frustrating about Rust evangelism for me is that you hear the same content most of the time and its about solving the major issues from  years ago.I get it. Modern C is so much cooler than what C used to be. C was a big step up. I mostly write C commandline apps to do number chrunching. And I almost never run into any memory safety issues. A year ago I ran into a data race issue because I expected boostcircularbuffer to be implemented differently than it actually is. You cant even observe such a thing from two threads because the iterators all share mutable state for debugging purposes. I wasted about  hours to track this down. But I digress ... Anyhow there are also those who dont see any use in C and just prefer C even for bigger projects. Why? I dont know. I cant really relate to those people. For example when I take a look at gits C implementation I see a strbuf abstraction thats actually close to what vectorltchargt and stdstring are doing with a couple of extras. You could turn this into a nice moveenabled C class that would be so much more convenient and easier to use correctly. It would clean up after itself via the magic of destructors etc. But the same applies to Rust. Rust extends Cs ownership concept via the notion of borrowing which involves adding lifetime parameters to the type system. Sometimes you dont want to transfer or share the ownership of something. Sometimes you just want to lend out a resource or a slice of a vector to some other part of the code for a limited amount ot time. And as soon this gets a little out of hand in design complexity its quite easy to fuck up iterator invalidation use after free. Sure you could use sharedptr to share the ownership. But you might not want this kind of overhead. I hear you say well I dont need these extension C is good enough for me but that would sound a lot like what the C guys are saying about C. As for Rust solving the major issues from  years ago I must disagree. I mean its possible that you dont really need to care about the problems it solves. But then youre probably also not writing largescale networkfacing andor multithreaded C programs that need to be free from vulnerabilities attackers could otherwise exploit by sending you carefully crafted data packets etc. This is hardly a solved problem in C. C does OK and IMHO better than C in this respect thanks to destructors and more runtime checking in an STL debug mode. But OK is not always good enough. As Steve said About every nd security vulnerability in their big C project is due to fuck ups w.r.t. memory and thread safety. People just keep on making mistakes. Even the smart ones. The idea is to have a compiler being able to check almost all of the code for these kinds of memorythread safety bugs. In Rust this involves being more explicit about things like lifetimes in APIs. And this tends to just move part of the API documentation into function signatures where the compiler actually understands it and can check for it.,cpp,ctfnjh8,4,t5_2qi27
4680052,0,t1_ctkaoj9,Ive been very tempted to try myself for those reasons well mostly for the C.  C in  is mostly there now.   But as my code is quite large now and crossplatform Im being hesitant.    Also  will behave much better with plugins. ,cpp,ctkgur3,1,t5_2qi27
4765595,0,t3_3g3aa1,Support for advanced debugging visualizers in natvis would be very helpful. Ideally there would be a way to include scripts for complex types gdb supports visualizers in python! but thats most likely too large a feature. Function evaluation in natvis is currently not possible so this would be a nice start.,cpp,ctv8wrl,2,t5_2qi27
4785931,0,t3_3gfp1m,Learn How to Program with COr if youre familiair with Java or CAccelerated Introduction to C,cpp,ctxt10e,2,t5_2qi27
4841530,0,t1_cu4szt1,Very interesting. Thank you!,cpp,cu4t8zi,1,t5_2qi27
4852797,0,t1_cu5pkil,The behavior you expect is the default behavior of stdmap  unless told differently it uses stdlessltKeygt as comparison operator. However stdmap always allows to use a different comparison for instance stdgreaterltKeygt or the one I use in fifomap.That said I did not overload the operator  it is the default semantics of this operator to rely on the maps comparison operator.,cpp,cu68bz2,1,t5_2qi27
4895848,0,t1_cub09tm,Agreed.My main objection to GC although I do use GC languages for certain tasks is that it is too restrictive. Even if you dont mind the performance hit which for most tasks isnt a big issue GC is makes it harder or even impossible to use RAII or taking manual control over memory allocation for performance tuning. All for what? unique ownership is all you need for about  of practical appliactions. So why is is that almost all languages are GC?Memory management is a solved problem! Sure RAII isnt a  perfect solution since ownership cannot always be unique and reference counting has the circular reference problem but how often is that an issue? The only cases I can think of are if youre working with some pretty complex graphs or computational geometry.For the majority of cases GC is overkill and I think fueled by some wierd perfectionism.  As if it isnt completely fool proof its not good enough. And as a result you still have to manually close filestreams in for instance Java because there are no destructors.Hubris I swear!,cpp,cubnspq,6,t5_2qi27
4896577,0,t1_cu9bojg,This would be an absolute godsend. It drives me up the wall to not have this in the standard.,cpp,cubr3h9,1,t5_2qi27
4902200,0,t1_cucftcg,Its certainly improved from what we were shipping before but it still contains some known deficiencies e.g. it cant detect symlinks and may contain further bugs. So its somewhere in the range pretty good crystalline perfection.,cpp,cucgla5,3,t5_2qi27
4903312,0,t1_cuclfa7,Hmm link doesnt seem to be working P,cpp,cuclmfm,1,t5_2qi27
4916279,0,t1_cudn7nm,gt I hate to be that guyyou love it,cpp,cue8gfl,8,t5_2qi27
4940640,0,t1_cuh79sx,If you use the builtin make rules you can simply domake programE.g.     cat main.cc     include ltiostreamgt    include ltlimits.hgt        using namespace std        int mainint argc char  argv    cout ltlt INTMIN  ltlt INTMIN ltlt endlcout ltlt INTMAX  ltlt INTMAX ltlt endlreturn              make main    g     main.cc   o main     .main     INTMIN     INTMAX ,cpp,cuhb25l,2,t5_2qi27
4956410,0,t1_cuidqks,You hit a nerve theres a certain amount of snobbery and looking down on C guiltyI can kind of see why people like programming in C but it seems like the equivalent of wearing a burlap sack and flailing yourself and the preprocessor partly because C has many ways of avoiding it thus its more associated with C again. Mind you the preprocessor sucksgenerating code with the preprocessor is kind of like programming in Notepad.Also though I think there is a strong correlation between using the term CC and people saying dumb things or people advocating nonidiomatic C code because idiomatic C code is quite different than C code.,cpp,cujanph,3,t5_2qi27
4958236,0,t1_cujduw7,gt Note that lambdas were able to fix this.How so? And will compilers make worse code with the fix?,cpp,cujixn5,6,t5_2qi27
4991203,0,t3_3jahqj,Builds on CDSChecker A Model Checker for C and C Atomics  ,cpp,cunmjg3,1,t5_2qi27
4999031,0,t3_3jefwe,I think you should find the best ones online  MIT OCW Coursera. A lot of C courses at Unis are not particularly good anyway or not particularly modern C  more like pointers and Cstuff. So you may be better off with a good modern online course or for example there are these online sites that give you tasks and let you level up or acquire points... like Kaggle but theres easier and more generic ones too I just cant remember any nameslinks now.,cpp,cuokjdv,1,t5_2qi27
5022410,0,t1_cur1k0b,gt boostvariant is sometimes forced to heapallocateIt seems scary when expressed like that...boostvariant never heapsallocate behind the programmers back. Only if you need to use recursive variants ie variants referring to themselves then you have to use a specific construct which may heap allocate however referencing to self has the same issue whether you use a variant or not so its not exactly surprising.,cpp,cure48l,7,t5_2qi27
5040786,0,t1_cutb4yp,VS  has it and has had the tr version since . libstdc will ship it in . and libc is aiming for ..,cpp,cutltfj,6,t5_2qi27
5054062,0,t1_cuv723a,Normal in Java maybe. Most C guides have a specific naming convention that doe not allow a member variable and a function parameter to have the same name. Shadowing is confusing underscores are no big deal.Granted this is bikeshedding but this is a point of probably  consensus in my experience.,cpp,cuv7fhj,9,t5_2qi27
5112169,0,t3_3knr78,If you are using the Microsoft compilers the debug builds will return mallocd memory with various useful values.  For example xCC in which case if you try and execute data it will automatically drop into the debugger xCC is INT.  Also xDD on free.  There are various other values depending on where the memory is allocated from windows heap etc.  Of course it doesnt do any of this in a release build.  There has been a lot of thought put into these various code so badly reinventing the wheel is not recommended.,cpp,cv27hhf,2,t5_2qi27
5157238,0,t1_cv7mql9,That is an abomination. I cringe and vomit every time I see it.,cpp,cv7n1a3,21,t5_2qi27
5185599,0,t1_cvb1s1v,Nice work! I would enjoy that series very much!,cpp,cvb1zzz,9,t5_2qi27
5186277,0,t1_cvb1s1v,Im glad people like you exists who have the skills to conjure black magic STL features for everyone else to use.Looking forward to the presentation video once its out.,cpp,cvb4xpm,5,t5_2qi27
5186783,0,t3_3m1hdp,Wow! Thanks a lot to CppCon for sharing this keynote video so quick!! ,cpp,cvb74f5,30,t5_2qi27
5192509,0,t3_3m2ig1,Something I never really understood is when Java folk say well actually Java is basically as fast as C code once it has been through JITAOT compilation but that never seems to be true in any real world applications only in very specific benchmarks. ,cpp,cvbw2ik,38,t5_2qi27
5194274,0,t1_cvc386b,He hates Java for different reasons. His rant explicitly applies to C. One can do OOP in C you know. ,cpp,cvc3r6g,-12,t5_2qi27
5198404,0,t3_3m21d0,After a little thought I have to say that more and more Im thinking that any modern language should ideally have a very explicit compile time metaprogramming aspect that isnt incidental like C templates.  I think modern macros in things like rust are too separate from the language itself and separate from issues of types and templating. C templates are powerful but far from intuitive for anything nontrivial.It seems to me that ideally you would write in templates more often than not with a separate syntax for dealing with checking and modifying any and all compile time data.I see things like this parsers and even the idea of small kernels that could use SIMD more effectively like ISPC and it makes me think that we really havent hit on the sweet spot of power and simplicity yet. ,cpp,cvcln7i,1,t5_2qi27
5206240,0,t1_cvdgi17,What should matter is that good ideas win over poor ones not which is someones favourite language. C began life in  according to cplusplus.com so thank goodness people are trying to move things forward now in an intelligent way. I really couldnt care which language wins at the end of this process. I do care that technology moves forward.,cpp,cvdjm0i,6,t5_2qi27
5206249,0,t1_cvdbh5o,I thought everyone already knew that static checking is great such things are not available in C and Rust provides much better support for these. Yet most people stuck with C because of existing codebases and the fact the C is more mature and hence tooling is far better. With C adding static checking a major reason to migrate to Rust disappears.,cpp,cvdjnf2,6,t5_2qi27
5271530,0,t3_3n36g3,I am very excited that the first committee paper with my name on it is now out!,cpp,cvlhwtm,2,t5_2qi27
5275465,0,t3_3n8lvz,It is terribly inefficient but you can write some decent code by using stdregex  stdregextokeniterator and it might actually be not so bad if your separator needs to be an actual regex.,cpp,cvm0153,2,t5_2qi27
5277214,0,t1_cvm3159,Yeah. But I think there are better ways to communicate it. Same goes for me partly.Aaannd..let there be peace. ,cpp,cvm8379,1,t5_2qi27
5282085,0,t1_cvmkdos,For the name you mean?  No particular reason.  As I was starting I went through a handful of names including constexprstringview but ended up having to give up when it became close enough BTW I didnt get a chance to see it live but I hear great things about your Hana presentation!  I look forward to seeing it on video.,cpp,cvmujat,1,t5_2qi27
5364787,0,t1_cvx5v8j,Edit see here,cpp,cvxeump,2,t5_2qi27
5380877,0,t3_3opxn4,Great history! And the best thing for me is amazing progress in C standard that has been done in recent years. Kudos to Bjarne and the standards committee. Hope theyll enjoy their Hawaii meeting and wont be too distracted .P.S. This is also on HN ,cpp,cvzgugw,10,t5_2qi27
5391670,0,t1_cw0u6n7,deleted,cpp,cw0uh92,1,t5_2qi27
5435629,0,t3_3pi14j,These type of question belong better to rcppquestions,cpp,cw6gfhv,3,t5_2qi27
5452693,0,t1_cw6bvmz,My main issue with GCC is that when you compile with literally every warning enabled it doesnt tell you where it comes from just blah blah blah Wpedantic. Clang spews out roughly the same error but as blah blah blah Wccompat. This way you can turn on all warnings you find useful but turn off those you dont find useful.If there is a way to have GCC do the same or have a list of where each error message comes from on GCC that would be highly appreciated.,cpp,cw8mtnw,1,t5_2qi27
5472699,0,t3_3q0nrn,Have you read the existing proposals? This has been brought up and discussed quite a bit. I think anyone seriously into the topic I am not in that category will have read the existing proposals know the outstanding issues there and would expect you to address them.,cpp,cwb6t3s,5,t5_2qi27
5474244,0,t3_3pvjal,CodeBlocks is seriously underrated. Its the only decent IDE Ive used that has never crashed.,cpp,cwbdwlt,2,t5_2qi27
5480693,0,t3_3q4agc,Every company I have ever worked at has had its own poor implementation of C reflection. A significant amount of the complexity in almost every major serialization library protocol buffers capnproto fusion thrift... is dedicated to a poor reflection solution. I would gladly jettison every other paper to get reflection.,cpp,cwc7kd6,47,t5_2qi27
5497394,0,t1_cwdsntf,no public dates yet.   RC is next.,cpp,cweced7,6,t5_2qi27
5510777,0,t1_cw9t9l2,How much experience does one have to work with your German team? Is a few years university enough to start out?  ,cpp,cwg1vmo,1,t5_2qi27
5537050,1,t3_3qy2db,the best is vi,cpp,cwjensv,0,t5_2qi27
5565741,0,t3_3racz1,I could see this making some CodeBlocks users happy. They can test their code using mingw and MS tools in one IDE. ,cpp,cwmzbkn,4,t5_2qi27
5577677,0,t1_cwikbik,It happened to me a lot dont worry. Just comment stuff until you find the line that causes the problem.If youre kind enough isolate this in a simple example and submit a bug.Then reword your code using older syntax until the compiler accepts it. That or youre stuck waiting a new update. ,cpp,cwogogw,1,t5_2qi27
5608188,0,t3_3rwfs5,How its compared to boost.log?,cpp,cws90hw,4,t5_2qi27
5627080,0,t1_cwuimgj,I agree with you that starting with CMake is hard but dont give up! Once you begin to master it its a great build system and the multiplatform ability is awesome.,cpp,cwulcv0,1,t5_2qi27
5646887,0,t1_cwwyhsj,Seems that way!,cpp,cwx1ul4,3,t5_2qi27
5660946,0,t1_cwys5a1,No I meant yours but thats just as weird yea. I just dont understand how that makes UE under pressure. Its all pretty normal stuff.,cpp,cwysmgq,6,t5_2qi27
5720825,0,t1_cx64s5m,I could not pass the interview.I was asked about the threading concepts in C and how they are implemented internally. I could explain from my basic comp science knowledge. I terribly failed how its designed in C ,cpp,cx683mb,2,t5_2qi27
5725144,0,t1_cx5nqdy,Read this. Only the suspend up model is already a deal breaker for me it is inherently noncomposable but there are more thingsAbout efficiency I am not sure I understand everything well the topic is complex but look at this,cpp,cx6rdhu,2,t5_2qi27
5750803,0,t3_3ttrpm,Linux CLion it has some minor issues as the memory speed and other problems but in general is worth to buy itor pay the subscription.WIndows Depends if I use UE Visual Studio otherwise CLion.Mac Xcode but honestly I  hate this son of a b slow really slow but well I have to use it.,cpp,cx9xxxt,1,t5_2qi27
5788888,0,t3_3ugl0p,Why write easier to read code?,cpp,cxenzm8,5,t5_2qi27
5835596,0,t3_3f1a9x,Revamping this thread. Kenny Kerr the library author finally got attention from Microsoft and has been hired to work full time on it Looks like it will be the new de facto library for writing C in the windows runtime over the dreaded language extensions. I hope that C will finally receive good treatment from Redmont after all.This means that the name Modern C will likely be dropped for some Microsoft letter acronym like WRT WRL CLR ATL etc...,cpp,cxkknr6,2,t5_2qi27
5855516,0,t3_3vfnv4,Paging uSTL can we expect a distro update in the next week or two? ,cpp,cxn6q8f,8,t5_2qi27
5858016,0,t1_cxnhu48,Yep. The table should have said languagetechnology or something like that. But thats what they have in the report Im just quoting.,cpp,cxnijbb,1,t5_2qi27
5915997,0,t1_cxv37ma,Exactly. DDS Data Distribution Service being one of them.,cpp,cxv4ajb,1,t5_2qi27
5960676,0,t1_cy0ww4o,I think citing noise is weak argument. Quite frankly I deem function prototypes inconsistent with its implementation detail a bad practice and it is a lazy habit. When I see inconsistency in code it raises a question whether a mistake was made or whether that was intentional. I dont know that without investigating. I should not have to subject myself to that kind of cognitive load when I can avoid it. The practice is also at odds with the idea of self documenting code. Ultimately youre communicating with others. You make an assertion of what kind of usage should be permitted with the variable in question. ,cpp,cy0z4aw,1,t5_2qi27
6007826,0,t1_cy6id9n,tldr use decltypearr.size instead.The problem with declvalltdecltypearrgt.size is that declval is only allowed in a nonevaluated context and you actually want to evaluate this at compile time compile time evaluation and unevaluated expressions arent the same thing.declval is for use in generic programming when you want to do some metaprogramming on types but getting the desired type requires an expression of a particular object type but you dont have any way of forming such an expression legally.For example say you have a type T which has a member function foo by contract with the user and you want to get the type returned by foo. If another part of the contract is that T is default constructible then you can easily just say decltypeT.foo. No problem. But if default construction isnt part of the contract and you dont want to make it so then you have the problem which declval was designed to solve it allows you to pretend you have an object of type T without ever creating one.The bottom line here is that with stdarrayltfloat gt you know the exact type and you know that it is constructible so you can just use that directly. Instead of declvalltdecltypearrgt.size you can simply say decltypearr.size. This expression unlike the version with declval can actually be evaluated and is a constexpr.,cpp,cy75o4o,3,t5_2qi27
6012192,0,t1_cy7pji7,gtwe should be getting rid of those god awful header files with modules.So? Doesnt mean we get rid of complex code.gtAnd header files dont change the fact that the definition could be anywhere.I never said it did. In fact thats my point.gtheaderfile explosion is an unambiguously acknowledged problem which is why the C community on the whole wants modules.Header files are unrelated.gtquit bringing up Java.Then quit trying to make C into Java.gtnaming is hard because its subjective.Then learn to name things better.gtyou seriously think | overloaded for pipes is less ambiguous whereas in my circles its second meaning is more likely to mean dot product and its primary meaning is bitwise OR flags being used all time time.Are you trolling? Pipe literally never has meant dot product. In no context does it mean dot product. If anything the bloody . operator should mean dot product.gtit is beyond your comprehension you reject bad APIs if you cant fit them in your head.If you cant fit them into your head theyre fucking bad APIs. ,cpp,cy7q6xn,0,t5_2qi27
6066862,0,t1_cyelmhh,The code throws an exception of type stddomainerror example type must be number but is string.,cpp,cyeuuj8,2,t5_2qi27
6110595,0,t1_cyjge7j,Qt doesnt handle only Gui stuff but multimedia stuff audio cameras. So for Mediaenabled applications its the way to go. In addiction Qt has hooks for OpenSSL in case you need secure connections. Boost doesnt offer such kind of things in asio.,cpp,cyk7ngl,3,t5_2qi27
6112668,0,t1_cykavhu,For the record I requested that compiler intrinsic and it was first implemented in MSVC. Give us a little credit for driving the state of the art forwards! gtSpecifically I want credit for being lazy. A user reported that my linear implementation was slow and bad and asked for a clever log implementation like libcs maintainers had written. I said screw that Im gonna get the compilers to do my work for me.At the moment Ive enabled use of the intrinsic when VCs STL is compiled with Clang only. Although CXX implemented it first I encountered a couple of bugs that my initial unit test missed.,cpp,cykg4br,11,t5_2qi27
6146770,0,t3_3zqun9,Hmmm...wonder why you arent together anymore.,cpp,cyobn9s,1,t5_2qi27
6154606,0,t3_3zuzm6,Its better than I was expecting but still not very good. A few not many of the answers are wrong nearly all of them are poorly worded the code samples should be better formatted and differentiated from the text and there is no mention at all of features from C or C.,cpp,cyp7q7b,1,t5_2qi27
6212906,0,t1_cyv77yy,Where that fails is when you want to look over what you could be doing.  Sure you could try to find some blog post  or look over the more generic documentation thats there.  But theres nothing like an exhaustive list of command line options to show you whats available.Numeric identifiers arent required for that  but they sure make a great indexing tool.,cpp,cyvu9nk,1,t5_2qi27
6253047,0,t1_cz0e5bt,agreed. came here seeking Raft Implementation but this is not that although there are many of them out there.But this is very interesting none the less because its distributed stream processing with default parallelism built into it.  ,cpp,cz0ejp5,3,t5_2qi27
6261404,0,t1_cz17of0,Nice thanks.,cpp,cz1cp59,1,t5_2qi27
6274072,0,t1_cz2rwhj,I am using clang .. because it is the only compiler that currently works for me. Hana doesnt compile with gcc and clang. is broken on arch so I am currently just using clang ...,cpp,cz2shqe,1,t5_2qi27
6292857,0,t1_cz4tbtz,The source code can be found hereThe ESTL separates the definitions of the classes from the definitions of the member functions.  Some people believe this makes things cleaner and easier to read.Anyway the protected vector constructor is declared at line  and marked protected because of the protected declaration at line .The declare namespace with constructor definitions is declared at line .  The class definition is at line  with the declare namespace declared at line .  The declarevector constructors are defined shortly after line .  The protected nondeclare vector constructors are called from the initializer lists at lines    and .I hope that clears things up.gt Sorry if ... I come from primarily a C background and am trying to improve my C techniques.Dont be sorry.  We all had to learn C at some point.,cpp,cz4xe11,1,t5_2qi27
6305283,0,t1_cz57pzu,Its just a link I was making so much the better if its not true.,cpp,cz6c8ws,1,t5_2qi27
6310041,0,t1_cz6aj75,deleted,cpp,cz6vq70,1,t5_2qi27
6313627,0,t1_cz76rfl,That sounds awesome! Ill be interested in reading it whenever it is done Id also appreciate the link back cheers! Do you mind linking your blog? Pming it would work too.,cpp,cz7afei,2,t5_2qi27
6331152,0,t1_cz98yrg,gt your subjective perception of quality of content is based solely on your own opinion.Yup thats why the reddiquette says if you think... and not if objectively...gt To someone else this could be highquality content.Then they should upvote it according to reddiquette.gt Youre disagreeing with the content itselfIrrelevant. My disagreement with the content does not mean this isnt a low quality submission. My downvote was based on the quality not the difference of opinions.gtYour judgment is relative and subjective and it is not and cannot be fact based.Why do you think I am incapable of judging based on facts? Thats awfully insulting. I think your judgement against me is not based on facts but on vague accusations of downvoting based on disagreement. Show me the facts that prove this. You have none.gt Your judgment is relative and subjectiveSo what? That isnt stopping you from judging everyone in this thread. Why do you think you get to play by different rules?gt Fact The link is a video related to C and this is a subreddit for C.Newbie questions about C are also related to C but those are off topic in this subreddit. Just because it mentions C doesnt mean it is on topic.gt it generated a lot of good discussion. It helped people see different sides of the ideas presented. This means quality of the submission is not low.Nonsequitur. The quality was low and most of the discussion that I found to be good was merely expounding on why this guys rant was irrational. All this really did was entrench both side further rather than actually try to bridge the divide by giving a constructive critique of an imperfect language. Contrast this submission with critiques from Scott Meyers or Andrei Alexandrescu which provoked excellent discussion and were high quality submissions in themselves.,cpp,cz9a6ex,3,t5_2qi27
6360104,0,t1_czcigaf,gt the majority of the Minecraft performance issues are caused by bad codingEven in the vanilla experience Id venture the majority of the performance issues come from VM thread stalls due to GC churn. Now whether you attribute that to bad coding or the use of a GC language is up to you ......Possibly a little from column A and a little from column B?,cpp,czckmtw,19,t5_2qi27
6369512,0,t1_czcpd6q,Is there something wrong with valgrind?Alternatively when youre on MSVC you use their debug CRT sanitizing features not really a compiler right?Theres more than way to skin a cat you know...,cpp,czdn6qk,2,t5_2qi27
6377775,0,t1_cze98ec,Heap allocation must be implemented in terms of an OS call on any protectedmode OS  how can this possibly be optimized out? As far as the compiler is concerned this is a volatile sideeffect.,cpp,czel0z9,2,t5_2qi27
6396296,0,t1_czeu6ux,gtVery sleepyToo bad I couldnt get it to show symbols when I compiled my code with clang I loved it in the past when I used it with MSVC. Iirc its open source so it can probably be extended to support executables compiled with clang.,cpp,czgoylu,1,t5_2qi27
6396435,0,t3_43a70m,No but if youre looking for a JSONlike format that you can use to generate classes try Protobuf,cpp,czgpj2z,9,t5_2qi27
6407602,0,t3_43fk0q,gt Or static reflection in C I hopeNot a chance sorry. The Reflection study group is making progress but not quickly enough for C. At Kona a TS was still in the design stage Im looking forward to what they come up with though. ,cpp,czhz9ml,4,t5_2qi27
6414623,0,t3_43j1iz,deleted,cpp,czis09x,1,t5_2qi27
6427511,0,t1_czk3eo3,The interviewer was at least understandable for me but yes he indeed interrupted him a lot repeating the exact thing he was trying to say.,cpp,czk54xv,2,t5_2qi27
6460484,0,t1_cznd0yd,Its interesting that the extra scope inhibits the NRVO in GCC.  Was that your point?  Normally NRVO does happen on GCC.  See ,cpp,cznk2ho,2,t5_2qi27
6464014,0,t1_czn76sk,In my opinion thats a very big problem then thats an immediate nogo for me. I hope you reconsider this position in the future.Edit Ok at least you have a good explanation for it and directly mention it under Warnings ,cpp,cznx9d0,3,t5_2qi27
6513860,0,t1_czt29aw,I was hoping youd chime in! Kudos for doing the work of investigating the compile times.,cpp,czt31aj,1,t5_2qi27
6525391,0,t3_450eld,This ones the full thing? Whats new here that wasnt included in  ?,cpp,czu9zz3,11,t5_2qi27
6532002,0,t1_czu3gpl,I knew it existed and found the idea very interesting never got around to playing with it. And never will unfortunately Ill replace it with conan.io on my list of things to look at.,cpp,czuylnj,3,t5_2qi27
6539344,1,t1_czvp6b3,Trying to learn C at any point is an exercise in frustration.  It is easily the worst programming language in popular usage.Also while operating systems is still a requirement for some programs it is quickly becoming something optional and something that strong knowledge of is not needed.  I will also note that although Linux is written in C there are popular operating systems written in C Such as the NT kernel,cpp,czvpzbh,0,t5_2qi27
6542730,0,t1_czw2681,Factories definitely need to return some kind of pointers.   They are the biggest reason I have seen for having to storeown an abstract type.,cpp,czw2kta,2,t5_2qi27
6545403,0,t1_czvp6b3,Nobody is saying students shouldnt ever learn C.What they are saying is that C doesnt belong in a C course. Just as C doesnt belong in a Java course.That aside CS students dont need to know C as much as you think they do. Thats a pretty selfcentred point of view.,cpp,czwcj69,3,t5_2qi27
6550318,0,t1_czwqkg3,Modern C Design is a great example. It is full of insightful techniques. However there are much better ways to do a lot of stuff that Andrei does. For example a lot of his TypeList code could be replaced by variadic templates. The lack of variadics also makes his implementation of Function more complicated. If you know C you would see this. If you are a beginner you will think this is the best way to do it in c. ,cpp,czwuurt,4,t5_2qi27
6585345,0,t1_d00gro2,Yep it would work.,cpp,d00h8tf,1,t5_2qi27
6585548,0,t1_d004pp5,I second this. Im quite good at Qt and Ive never read a book or taken a course in it. The documentation is absolutely fenomenal!,cpp,d00hzwx,2,t5_2qi27
6593564,0,t1_d00wj09,Stephan thanks for managing my question and your answer ive expected this exaclty from you So let me summarize. We have those args with current design  Cons possible exception on default construction unexpected by most ordinary developers construction flow  and it is hard to catch ever in runtime eh frames in any object hierarchy constructors that  ve used containers and no chances to  compiler to optimize whole object memory allocations for default constructed containers ever worse locality in many cases one more indirection required to use beginend harder memory usage in addition to self container allocates head node with uninitialized T. Possible ive missed others drawbacks...  Pros end iterators are remains valid after swap that is not required by standart so that poorly written non C code is working  could be resolved as runtime check or with compile time code analizer binary compatibility joke  it was changed constantly from VC up to .  For some reason it seems to me if we ask a spherical developers in the vacuum to choose a suitable option they will choose the option without the allocation of additional nodes So are there any chances to move to another design yes   like gccclang whatever? Maybe with macro. How could we as a customers so far push you to think one more time about this issue?Thanks!,cpp,d01budi,6,t5_2qi27
6597605,0,t3_45vwqr,I had a small problem with this once  it complicated my custom memory management system. Because I had static globalscope containers I know I know I had to create the memory management system as early as possible before even main run which meant I couldnt modularize it well and couldnt run any setup for other dependent systems before the memsystem was expensively constructed. This was a solvable problem but it DID increase code complexity which is sad The arbitrary order of static initialization didnt help here either.,cpp,d01qvky,3,t5_2qi27
6620975,0,t1_d041g6w,gt but the newer standard comes with all new pitfalls.Yes but the new pitfalls are fewer and further between than the C pitfalls if you use modern C.gt ... without any compiler error nor even a warning on any modern compiler.Compilers are getting better at this.  Did you see the demo of Microsofts warnings at CppCon ?  Its not complete yet but it will warn about things like this as well as many things in the C Core Guidelines.  Also there are static analysis tools like CppCheck that will catch things like this.gt Its not that C has magic its that it has the wrong magic defaults.Sadly this is due mostly to backwards compatibility and not knowing what the future would look like.  Hindsight is .  All other languages that have evolved has similar problems with wrong defaults somewhere.  Granted C has more because it maintains backwards compatibility with most of C and it helped pave the way in many areas that other languages have now had the hindsight to improve on.,cpp,d045zid,3,t5_2qi27
6635944,0,t1_d05nopp,deleted,cpp,d05poyn,1,t5_2qi27
6636179,0,t1_d05nycj,QT is not only the best its the only reasonable one.  As others have said you dont need QT Creator. ,cpp,d05qkeb,6,t5_2qi27
6651895,0,t1_d06xgks,Your first example exploits ... which explicitly states that lookup of fully qualified names is allowed. I am not worried about that one because fully qualified names are not the same as unqualified names if they were it would preclude name collisions across namespaces which is silly.Your second example is an example of variable shadowing which is not the same as name hiding of types. You must explicitly introduce a new scope to shadow a variable name whereas such a thing would explicitly not be allowed for types by the first half of ....,cpp,d07d3fv,1,t5_2qi27
6658527,0,t1_d080jsx,Yeah it is. As another comment used the example    stripsplitn lowercasertrimreversestring   Youre suggesting instead we could write this over multiple lines like    stdstring string  ...    string  reversestring    string  rtrimstring     string  lowercasestring    auto lines  splitstring n    lines  mapstrip  lines     making a few changes to make it make more senseWhen with fxy ltgt x.fy we could write instead    stdstring string  ...    auto lines  reversestring        .rtrim        .lowercase        .splitn        .mapstrip Ive not poured over the debate but this is very similar to libraries added to languages like Java and C theyre very useful and produce easier to read code.    ,cpp,d081rzi,5,t5_2qi27
6668509,0,t1_d08pqfk,Sorry yes. The discussion seemed to have moved to exceptions in general and out of memory problems. Exceptions are never going in something like the kernel so it seems a moot point whether you should throw one or not for a failed allocation.,cpp,d092xvd,3,t5_2qi27
6670019,0,t1_d098cx1,Well what do you expect forward to do without any reference collapsing present? ,cpp,d098jy5,1,t5_2qi27
6672861,0,t1_d09eycw,This technique is appealing but as I argue elsewhere on the page for  of new development in C there is no reason not to use exceptions.Of course there are embedded systems which cant use exceptions  there are compilers which dont even allow them  but these represent a tiny number of developers.  And there are systems with a great deal of legacy code where exceptions would cause too many problems  but thats why I specified new development! ,cpp,d09j59f,2,t5_2qi27
6673563,0,t1_d09lk0h,Yep.  Oh well! ,cpp,d09lrex,1,t5_2qi27
6689345,0,t1_cw2u73a,CMake is the least horrible of many horrible options.,cpp,d0b8jdo,1,t5_2qi27
6759025,0,t3_487mt9,deleted,cpp,d0ifuah,0,t5_2qi27
6777900,0,t1_d0kb4gq,Id say next logical step would be to touch the sky.Or levitation. Levitations cool too.,cpp,d0kk4ei,16,t5_2qi27
6791787,1,t3_48shrb,I mean if you really care about bare metal implementation just do it in C.    int mainint argc const char argv          struct stat sb      int fd  openlongfile.txt ORDONLY      fstatfd ampsb      const char s  mmapNULL sb.stsize PROTREAD MAPSHARED fd       printfString len zun strlens    String len realm.s  userm.s  sysm.s  And thats running on a  yr old cpu in a VM ...,cpp,d0m4z04,0,t5_2qi27
6808829,0,t3_48zdk3,As much as I really really really want modules this is the right way to do it.  I have the same opinion on Concepts a feature theyve been working on for about  years and still cant seem to get it right.Big features like this need a trial period.,cpp,d0o2smd,13,t5_2qi27
6824939,0,t1_d0pvis3,Looking at other languages with modules support they could.Headers arent required with proper module systems the information they contain can always be generated from the module metadata.If C keeps the headers  lib model for binary libraries there will be zero improvements on build times for third party dependencies.Meaning one will always need to do an initial full build to generate the modules. Hardly an improvement over precompiled headers.,cpp,d0pwmfd,5,t5_2qi27
6825063,0,t1_d0pwsa3,Computing factorials combinatorics,cpp,d0px4q8,2,t5_2qi27
6831459,0,t1_d0qlezw,Concepts will be available in a TS right? You can still use them they just have a beta flag stamped on top of them.,cpp,d0qna3v,2,t5_2qi27
6855553,0,t1_d0td1x7,Yes the permissions allow me to write hooks to your public repositories so CodeDocs knows when your repository has changed. I am pretty sure I am doing the same thing as TravisCI and other similar integrations.There might be a way to get around this by using GitHubs PubSubHubbub where anyone can subscribe to any public repo. Ill see what I can do.,cpp,d0tdvm0,1,t5_2qi27
6880005,0,t1_d0w500j,sharing of libraries compiler independent including different versions is not a goal.  There is a lot more to that.To be absolutely clear we are not trying to turn C into a managed language ,cpp,d0w5w5t,3,t5_2qi27
6906394,0,t1_d0yxfm2,There are no guarantees in life.,cpp,d0z5qoh,1,t5_2qi27
6917088,0,t1_d0vf69u,any decent understanding of C should also come with decent understanding of how Operating Systems work. There should be a class for that when you study Computer Science. Operating system covers topics of memory management threads processes synchronization IO. All the under the hood stuff that C programmer should be aware off,cpp,d10dihb,1,t5_2qi27
6947155,0,t1_d13qt6q,Mostly referring to standard c libraries,cpp,d13sh92,0,t5_2qi27
6982087,0,t1_d17r75g,Was it an issue with compiling Boost.Context for iOS  ARM? It should work fine as far as I know but might need tweaking of some flags.,cpp,d17rbi7,1,t5_2qi27
6992247,0,t1_d18kl6t,Thanks for clarifying that I was only mentioning what I got for other sources.Even if I have mostly become a JVM.NET nowadays I really appreciate all the effort you have been putting into it from C fan sidelines.Congratulations on the work achieved thus far.,cpp,d18wwkk,2,t5_2qi27
6997921,0,t3_4bi3ga, Papers and Presentations by Sean Parent.,cpp,d19k3b5,7,t5_2qi27
7055054,0,t1_d1g1qff,oh sorry i dont know this rule,cpp,d1g1sns,1,t5_2qi27
7056051,0,t1_d1g0a0e,Thanks. I actually added the ifstatement after TemplateRexs observation above. If the range is empty then first  last so nextfirst  last   which makes it an infinite loop.,cpp,d1g5v29,1,t5_2qi27
7058632,0,t1_d1g5end,Perhaps we could move bashing to a dedicated forum rc perhaps?,cpp,d1ggf92,2,t5_2qi27
7081299,0,t1_d1j0gk4,Its going to take a long time to get all that legacy code to use modules.  A lot of code never will honestly.  And the modules proposal currently still requires headers to get preprocessor macros so this would still be useful to have either way.,cpp,d1j13mt,7,t5_2qi27
7089187,0,t1_d1jt01i,Tempting. Thanks.,cpp,d1jxelc,1,t5_2qi27
7103741,0,t3_4cue8w,Awesome we want this in the language. Today I feel so strange...,cpp,d1lkyf4,2,t5_2qi27
7110943,0,t1_d1m51s3,Whoa calm down there Tirek,cpp,d1met76,4,t5_2qi27
7157318,0,t1_d1jkbun,Provided that you know as much as you show off here in which way gets C on the way? Because if you can make proper use of it provided that you know the tool very well as you said better than me at least and I have been using for a long time how can you make such a clumsy use of C to the point of considering it worse than C? C is more strongly typed you have classes lambdas templates and lots of things that help you write shorter code. You can manage memory through smart pointers... In every area except binary ABIs C is superior so as I said maybe you do not know this tool as much as you pretend.But I can help you ,cpp,d1rpu73,2,t5_2qi27
7165379,0,t3_4dndpu,A packet sniffer to hack bustopology LAN passwords ,cpp,d1smvm7,3,t5_2qi27
7276688,0,t1_d257pli,Just keep in mind that while its an excellent book it also covers some fairly advanced material. A lot of this stuff wont click on the first read.,cpp,d25b74a,2,t5_2qi27
7297463,0,t1_d27nowd,Wow.Why dont you just fall on that chainsaw again?You motherless nuisance.,cpp,d27o797,2,t5_2qi27
7298558,0,t3_4fcp1j,I would argue that this is bad advice for a general audience. Very few programs have performance bottlenecks in text output. The cost of this optimization is asynchrony which makes things a pain to debug and reason about. Its useful for people to know what endl is doing just in case it becomes a problem but endl should be the default.,cpp,d27soki,12,t5_2qi27
7314497,0,t1_d28jl57,Hes talking about a manifest issue for Windows Store apps. WINVER and WINWINNT are relevant but are not the problem or solution in this case.,cpp,d29lxbb,1,t5_2qi27
7329009,0,t1_d2b908y,C APIs that take callbacks will require pointers to function types with C linkage captureless lambdas are only convertible to pointers to functions with C linkage. And so sayeth expr.callgt Calling a function through an expression whose function type has a language linkage that is different from the language linkage of the function type of the called functions definition is undefined.So using a lambda as a C callback is UB period. Of course all compilers I know of support this as an extension but thats a little beside the point.,cpp,d2b9bh0,7,t5_2qi27
7331410,0,t1_d29m13p,Thats probably not true. The ApiSchemaSet redirection is at the OS level  rerouting linkage to dlls like KernelBase ntdll kernel etc.  The C layers ucrtbase and siblings are high high above that  and there is no APIset involved in resolving their linkage.,cpp,d2bj4sm,2,t5_2qi27
7362917,0,t3_4g63si,Know what compiler depends on to optimize C code. This means typebased aliasing restrict pointers low level bit packing and manipulations and beyond.,cpp,d2f438d,1,t5_2qi27
7376953,0,t1_d2enc70,The effective series is not a beginner set of books.  They dont teach the language at all in fact.  They teach best practices.Dude needs to start simpler and move UP to the effective and exceptional series.  Accelerated C.,cpp,d2gpi74,1,t5_2qi27
7421688,0,t3_4gwnuo,I dont do much GUI stuff so normally I just use NVim and a shell.,cpp,d2lsq3d,3,t5_2qi27
7436607,0,t3_4h356i,The guy doesnt ascribe to all things c but handmadehero.org is a pretty substantial archive of building a game from the ground up still in progress. Currently almost  min videos are on his youtube channel and he streams on weeknights.,cpp,d2nht4s,1,t5_2qi27
7438410,1,t1_d2nki5t,I think that considering mathematicians or for that matter physicists as role models in that regard is a bad idea Those are the guys who believe that oneletter variablenames are great and letters from alphabets that they often enough cannot pronounce themselves are even greater. Take a very simple example    s  a  powt  And this is even avoid uppercase letters that would interfere with most coding standards at least when mixed.compare this    distance  acceleration  powtime  You might say that this is more to read but keep in mind that this is an extremely well known formula with wildly accepted variables. Just take a look in slightly more advanced areas where pi might for instance not mean the circular number yes I have encountered things like that. Words are so much more intuitive then letters and the same is true for words vs. symbols.,cpp,d2np6g3,3,t5_2qi27
7470364,0,t3_4hmduq,This looks great! sent you a pm,cpp,d2rc2la,2,t5_2qi27
7478154,0,t1_d2rmduu,Thank you. Thats the main reason Im making my posts public  to get feedback and learn. The code snippet you posted is amazing Ill update the article. The whole point of my posts is the ability to addremove callbacks during runtime and avoid duplicates. ,cpp,d2s81n7,1,t5_2qi27
7483723,0,t1_d2su2zt,Looks cool.How does this compare to stdoptional? I havent used it but I believe it can be used for similar purposes.Also it would be nice to see some automated test cases.,cpp,d2suw5r,8,t5_2qi27
7485535,0,t1_d2sxxi3,deleted,cpp,d2t2btc,1,t5_2qi27
7487204,0,t1_d2sz1k9,No. Theres no way to inject a return call into a function in C from an expression. The only options you have in C for exiting from a function are a reaching the end of the function b the return statement or c throwing an exception. Theres also longjmp but that skips unwinding.,cpp,d2t96e6,2,t5_2qi27
7507382,0,t1_d2viulj,can it also resolve auto return types?,cpp,d2vjukk,1,t5_2qi27
7507928,0,t1_d2vjukk,that means checking all function template return paths then document those. Its possible of course but Im sure Jonathan will be focused in other things first.,cpp,d2vm36w,1,t5_2qi27
7525190,0,t1_d2xdrir,Youll need msextensions if you want to use VCs STL. This covers actual features like declspecdllimport.,cpp,d2xkrvp,1,t5_2qi27
7532311,0,t1_d2y03qq,You mean N     ,cpp,d2ydxo2,5,t5_2qi27
7581375,0,t1_d33xa5m,In this case it is not enough due to the ctor staticanyTampamp. I need an overloading otherwise this templated ctor eats everything. At the beginning I did some SFINAE like enableiflt!stdsameltany Tgtgt but when I added the support of constructing from anyltMgt with N ! M SFINAE was not enough or maybe it is but overloading is way easier to achieve that ,cpp,d33yrdq,1,t5_2qi27
7727280,0,t1_d3kj3wm,Someone asked Bjarne Stoustrop that question. If I recall correctly he rated himself as a .,cpp,d3kjcvy,17,t5_2qi27
7728062,0,t1_d3kmctd,,cpp,d3kmjwq,9,t5_2qi27
7736088,0,t1_d3klqyy,deleted,cpp,d3ljd6i,1,t5_2qi27
7817475,0,t3_4me2nx,so is there a toolchain to use with CMake for this ?,cpp,d3uqyxc,6,t5_2qi27
7844667,0,t1_d3xgsb4,Its broken in UTF but thats not the point. It only wants to know if the string is a palindrome as a byte sequence independent of the encoding.,cpp,d3xt5st,2,t5_2qi27
7856863,0,t1_d3z4g5w,Unlike you I know what it is A terribly naive and inefficient way to calculate primes that is not the sieve of Erathosthenes. ,cpp,d3z6kvs,20,t5_2qi27
7886938,0,t1_d2xlcv1,The level of goodness is irrelevant it shouldnt be there in the goddamned first place.,cpp,d42kcc8,2,t5_2qi27
7893824,0,t3_4nezeq,Neat but this article is very Visual Studiospecific. Not my thing but kind of fun to read anyway. Thanks!,cpp,d43c8iy,10,t5_2qi27
7900099,0,t3_4nezeq,Condition breakpoint works in QtCreator as well. You need right click on breakpoint and then pick Edit breakpoint,cpp,d441myv,3,t5_2qi27
7905658,0,t1_d44608b,Visual Studio also do this with Microsofts C Quick Fixes extension.,cpp,d44o6iw,2,t5_2qi27
7910237,0,t1_d44tqd4,The only benefit is documentation the reference is nonnull and not owned. You can get away without some comments youd need if you used T.Something like notnullltunownedptrltTgtgt would describe the features better IMO.Its usually better to use types rather than comments to describe ownership and nullness of pointers. Comments can go stale and become lies but compiler will notice mismatch in types.In modern C though raw pointers are almost always not owned theyre borrowed from uniqueptr  stack somewhere.,cpp,d456os7,4,t5_2qi27
7931756,0,t1_d4778fv,I think youre right. From what I can tell their static checker would would reject this code for the same reason. The difference in this case is that there isnt an easy fix. Since this is a global uniqueptr we cant create a copy of it like they have shown with the sharedptr. So creating a local root doesnt work unless you are willing to temporarily move the global uniqueptr to a local one.,cpp,d47lrhk,1,t5_2qi27
7942215,1,t1_d48rv1m,Whats dick about it if license allows it? I would have absolutely no problem if someone takes Lumix Engine and sells it.,cpp,d48s20m,1,t5_2qi27
7983670,0,t3_4okhzo,I have wanted that so bad. A linux executable with a nice icon that the user can just click on and use. There is no such thing. ,cpp,d4dfujs,1,t5_2qi27
8001191,0,t1_d4f41ve,I think that talk you are looking for is this one  ?,cpp,d4ferjc,2,t5_2qi27
8009725,0,t3_4o1jgr,Horrible code. Does not use the stdlib and this bit simply killed it for me    define LUMIXNEWallocator ... new LumixNewPlaceholder      allocator.allocatesizeofVAARGS VAARGS    define LUMIXDELETEallocator var allocator.deleteObjectvarNo thank you.,cpp,d4gd9k6,1,t5_2qi27
8045758,0,t1_d4ket8a,But you have to using all the members and then you have the maintenance hazard of ensuring any new members in the base get corresponding usings added in the derived classes. I suppose thats what selective means?Was I supposed to be on the OOP side?,cpp,d4kf3x4,1,t5_2qi27
8082557,0,t1_d4mqkls,Destructuring initialization. Also known as an irrefutable pattern in Haskell.,cpp,d4ojy7h,1,t5_2qi27
8094872,0,t1_d4pmvgw,Yay!,cpp,d4pxq57,2,t5_2qi27
8105366,0,t3_4q5bz0,stdoptional in c will solve part of the problem soon ,cpp,d4r46a4,3,t5_2qi27
8111468,0,t1_d4pwudi,gt Eclipse has a free IDE as part of its huge suite. Last time I checked it out it was dreadful but that was quite a few years ago and I hear its improved a lot.I suppose your view on this would depend on exactly why you thought it was dreadful years ago.If you thought it was dreadful because it was too small too fast and not nearly confusing enough then yes you should probably try it againyou might like it a lot better now.If however youre at least partially sane...,cpp,d4rsvyj,1,t5_2qi27
8127115,0,t1_d4sbv7w,Maybe over the years Ive converged to a workflow where I avoid without realizing the problems others are facing with it. Installing CDT being a problem could only be imaginable on Windows since on Linux you just download Eclipse for CC developers and it just works without even installing it you just unzip it. It has no problems finding the compiler etc. it just works. You can get going in under a minute depending on your download speed. On Windows it used to be a hassle to get it to find MinGW etc. but nowadays it just finds it as well. The only overhead is the fact that you have to install MinGW but I think the time it takes to install MinGW AND Eclipse is a fraction of that of Visual Studio.As for the maze of menuswindowstabs every IDE takes time to get used to I dont think Visual Studio is any less annoying in that department BUT I rarely ever deal with those menus anyway I use CMake for build configuration so my project is completely defined by my CMakeLists.txt. And CMake has a very nice Eclipse project generator. For me the complexity of the UI is irrelevant since I think its ALWAYS a bad idea to depend on an IDEs built in build configuration regardless of how simple it might hypothetically be...,cpp,d4tk7sn,1,t5_2qi27
8145180,0,t3_4qs7j0,In log.h|.cc you are declaring constructor and destructor but they are empty. Better leave the compiler do the job instead.,cpp,d4vozlt,1,t5_2qi27
8153078,0,t1_d4vvqzk,deleted,cpp,d4wokr9,1,t5_2qi27
8178550,0,t1_d4ml69v,deleted,cpp,d4zv9dw,1,t5_2qi27
8214024,0,t1_d53yb0y,gt I believe QtCreator only allows breaking on lines of code whether in JS or C.no it allows the same as vs. you can break on memory access on static addresses or addresses given by an arbitrary expression syscalls exceptions thrown anywhere js and c process forking process starting fatalcalls qWarningcalls qFatalcalls QML signal emission exception catched function names not tied to any source file and line etc.and you can give arbitrary conditions for each of those like matching syscall number or whatever else you can come up with.,cpp,d54b2wg,1,t5_2qi27
8216912,0,t1_d544my4,I dont think I have ever hard coded a map like this and thats what I mean by useless. Sure the syntax is nicer but usually the data is coming from disk or otherwise not hard coded. And even then youve only saved one line because you could write it like this too    static stdarrayltstdpairltKey Valuegt gt list          key value        another key another value        static stdunorderedmapltKey Valuegt maplist.begin list.endFurthermore I could still use an array  lowerbound since the data is static I can keep it sorted    static stdarrayltstdpairltKey Valuegt gt list          key value        another key another value        assertstdissortedlist.begin list.end    return stdlowerboundlist.begin list.end stdpairltKey Valuegtkey gtsecond,cpp,d54o3nl,-1,t5_2qi27
8346259,0,t3_4tsa5q,I would suggest to clarify the first sentence of the Readme.mdThis is a backport of the current C standard library to CIt only makes sense to backport to the past doesnt it?The FAQ is more clarifyingIn some cases this project may provide usable code before compilers support a standard. For example C at the moment isnt even standardized but we basically know whats in it so we can start supporting it.Just my two cents I am sure the library is going to be useful for some people.,cpp,d5ku38z,1,t5_2qi27
8411757,0,t1_d5swuto,A bit off topic but I wrote a simple sqlite wrapper for sqlite and mysql if you want to have a look I am planning to isolate it in a standalone library.Here are few examples      Read one scalar.    int s    cSELECT  gtgt s     Read a record.    int age stdstring name    cSELECT name age from users LIMIT  gtgt stdtiename age     name  firstusername     age  firstuserage     Iterate on a list of records    cSELECT name age from users |  stdstringamp name intamp age       stdcout ltlt name ltlt   ltlt age ltlt stdendl         Read a record using a IOD object.    auto r  Dname  stdstring age  int    cSELECT name age from users LIMIT  gtgt r     r.name  firstusername     r.age  firstuserage     Iterate on a list of records using a IOD object    typedef decltyper R    cSELECT name age from users |  R r       stdcout ltlt r.name ltlt   ltlt r.age ltlt stdendl    ,cpp,d5t0i4n,5,t5_2qi27
8429287,0,t1_d5v429q, is joyents parser written in C used in node.js inspired by nginx. I was talking with a friend and we where discussing updating  to a header only implementation. Could be fun to port! Fork it and ill accept pull requests as well. Should be getting the cmake files updated and tests updated this weekend.,cpp,d5v7a2r,3,t5_2qi27
8442989,0,t1_d5w9o2m,That may be true but how many things in life are free anyway?,cpp,d5wwutm,3,t5_2qi27
8453357,0,t1_d5y734b,gt Youre speaking as if .h or .hpp has some magical meaning For some build systems they have ! ,cpp,d5y7eed,3,t5_2qi27
8485422,0,t3_4vwxkz,Well I may not be the best reviewer and Im not familiar with Arduino other than knowing its a microcontroller platform but Ill give it a stab Using pow x for toggling int math is inefficient and a bit risky. pow actually uses floatingpoint math so youve got implicit conversions to double and back to int. Inttodouble is pretty safe but doubletoint is not particularly since its a truncating conversion instead of a rounding conversion. More problematic is that pow may be inaccurate and vary between compilers and platforms. A sane math library should give you an exact result for integer but its best not to rely on that. Rather than documenting the parameters for the geckoStep methods in comments you could just name the arguments in the declarations. The geckoStep constructor has side effects namely changing the direction of IO pins. This can be OK but youre also constructing a global array of geckoStep. Userdefined constructors on global objects in C are a minefield due to a lack of guarantees on order of initialization particularly if you have such objects in more than one source file you can get into situations where they run in the wrong order and there arent good ways to force the desired order. This can get especially nasty if there are also hidden initializers in the libraries youre using and they dont run soon enough before your code does. There are places doing delays by simply calling a delayMicroseconds function. These kind of sleep functions can have significant restrictions on the actual precision of the sleep interval and also only guarantee an approximate or minimummaximum sleep time. Typically you will need to track actual time elapsed and compare it against requested so you can correct for any error in subsequent delay calls hitting the right rate on average. I lost points on this in a digital logic course in college so Im bitter. If your target CPU is not too limited you might consider putting in some safety checks such as asserts conditionally compiling them in if necessary for performance. At some point your program will stop mysteriously working and itll be easier to revive it if you have checks ready to enable. It may also save your butt if the device youre driving is less than tolerant of out of spec signals being sent from your controller like far too many stepping pulses and safety checks halt your program before bad noises or smells occur. Watch your boundary cases. The keypad routine for instance looks like it might read at invalid index data when it starts which means youd be checking garbage. And yes at some point that byte will actually happen to be  and screw you over. Looks like it might also overflow if you press too many digits.,cpp,d6282eq,11,t5_2qi27
8485821,0,t1_d62883x,gt it doesnt look like modules will solve these issues. Nor should they  its a problem at the operating system  compilation target level not at the language level. ,cpp,d629v2l,3,t5_2qi27
8497141,0,t1_d63owg7,hm today I learned...Though Id proffer that if you get a stdbadalloc in the ctor of an exception thats being created then your program is already way south.. what if the exception being thrown in the ctor throws an exception and so forth?I guess the best standard library authors can do is ensure their standard exceptions never throw.,cpp,d63ozlp,3,t5_2qi27
8520503,0,t3_4we762,Depends. Most of the small programs I write deal with some networking requests and filesystem readingwriting files and as such much more easily implemented and run by node.jspython,cpp,d66mgox,0,t5_2qi27
8537211,0,t3_4wodgq,gtgt  For example I put a static vector inside the class to hold objects of the class itself and wrote a public function to read a JSON file into that static vector. Is this normal or okay?Making the variable static also makes the variable a global variables and this automatically makes the class thread unsafe since access to this global variable is not guarded against simultaneous access. If this is ok or not depends on how the class is used.ampnbspgtgt As a hobbyist Im not really sure how professional code is writtenYour code looks professional to me because its has a consistent format.ampnbspYour class also seems to violate the separation of concern principle and i think this variable should live in its own class and maybe those static methods should be free floating functions.ampnbspThis function looks suspiciousit is declared as static meaning it cant access local variables of the class but it is accessing mbanners which looks like a local variable of the class. This is possible because mbanners is not a local variable as i mention above. This variable looking like a local variable when its a global variable is not a good thing.,cpp,d68pv4b,4,t5_2qi27
8566836,0,t3_4wtvfd,Unfortunately there are also memory barriers which are an entirely different thing. Ugh.,cpp,d6cfn14,1,t5_2qi27
8573723,0,t3_4x82hd,Hadnt heard of this looks superb.Im wondering  with such a superb speed profile and being header only and because its obviously doing all its work at compile time does it have a similarly impressive object code overhead?,cpp,d6daqaj,1,t5_2qi27
8593014,0,t1_d6flwhc,I would be more worried about the bot andor reddit not existing anymore in . ,cpp,d6fpu2w,3,t5_2qi27
8596179,0,t1_d6g0o4z,I develop primarily on Windows so I am not familiar with homebrew other than its a system for installing packages ?. If someone wants to take the initiative and add Beast to homebrew I fully support them!,cpp,d6g43y0,4,t5_2qi27
8660686,0,t1_d6o6oaq,Shift  Enter will submit the code. Issue to make this clearer here ,cpp,d6o7b0q,1,t5_2qi27
8660727,0,t1_d6ns1le,Why do Qtrelated posts always bring up some lengthy offtopic discussion about the framework?I mean we GET it you think Qt is a bloated highlycoupled piece of trash. Why dont you just downvote the post and move on to whatever you think is better?,cpp,d6o7hoy,0,t5_2qi27
8661983,0,t3_4yk36l,Btw if I understood correctly you can only unpack everything by copy auto a b c by reference autoamp a b c and maybe fancy universal ref ampamp not sure about this one. But why it was made so? Isnt it a little limited? In the example you want to change only one element but you acquire reference to all elements.Wouldnt syntax such as auto ampa ampampb const c which would translate into auto ampa  ... autoampamp b  ... and so on be more powerful and useful?,cpp,d6od5yh,6,t5_2qi27
8680644,0,t1_d6qmxx2,gt You should be emulating C in JavaScriptHow would that go exactly?I see C as a much more flexible language and I cant see how youd emulate classic CC techniques in JS at all to be honest.,cpp,d6qpdn9,4,t5_2qi27
8693444,0,t1_d6s9p72,Code duplication detection was mostly using Coverity on the full code base as well as normal review process. Coverity finds many instances of code duplication already and humans are pretty good at recognizing a pattern theyve seen somewhere else if it isnt identical enough.Do you have links to what LLVMClang can output? Note that this isnt callgraphs but includelevel dependencies. If you want to split up a code base you will need to actually not include any headers from another unit.,cpp,d6sb6e2,1,t5_2qi27
8694193,0,t1_d6sb8w8,Oh sorry I didnt notice that you were talking about a different IDE instead of VS Code.,cpp,d6sek38,1,t5_2qi27
8701828,0,t1_d6tabyt,Yes  it will be in C,cpp,d6td0hd,1,t5_2qi27
8705156,0,t1_d6tpx57,As for the comparisons Ill definitely do it.,cpp,d6ts1m9,1,t5_2qi27
8714224,0,t1_d6upw0z,Im not particularly happy with its  code navigation. The default doesnt correctly handle smart pointers the Clang code model bugs out on basic stuff. If its any better in KDevelop thats enough for me. Ive never tried KDevelop but it looks like the layout is nicer and perhaps its easier to navigate larger codebases.,cpp,d6uwz08,2,t5_2qi27
8717161,0,t3_4zeeg4,deleted,cpp,d6va8px,2,t5_2qi27
8723495,0,t3_4zhyn7,gt Adding the two move operations was a bad idea and is a breaking change.How is it a breaking change?  The example code you provided wouldnt have even compiled without the move operators.Writing code after the fact that doesnt logically maintain invariants is not the fault of the type implementing the move operators.  Regardless of what the socket move operators actually do what do you expect     socket mysocket        socket yoursocketstdmovemysocket        dosthmysocket    ... to even mean?  Somebody had to write that code and had to think it meant something.  Whatever they thought they thought wrong.  The fault is not that somebody implemented socket move operators the fault is that somebody used stdmove without understanding the implications.  I think of stdmove as a necessary evil  sometimes you need it but refactoring the code to avoid it entirely is usually a better solution.,cpp,d6w2tme,15,t5_2qi27
8728640,0,t1_d6wm26w,So? The rope wasnt there but now it is because it was deemed useful. The fact that someone doesnt know how to use it and hangs on it doesnt make it any less useful.gt Someone should only shoot himself in the foot by using language level UB like useafterfree but he couldnt hang himself using a movedfrom object.Thats really not how c works. You can shoot yourself in the foot in c every time you call method on any movedfrom object without considering possible preconditions.Calling back on movedfrom string without checking first if it is empty is UB and can hardly be considered language level UB.And if all your method require valid socket and someone violates the contract by throwing movedfrom sockets around thats his fault. Yes it would be nice to be able to enforce something like this compiletime but even without it the action necessary to get object in this state is very explicit.,cpp,d6wq20i,1,t5_2qi27
8765609,0,t1_d71cbd7,Its nicer but limited. Raw loops dont lend itself to generic code as easily compared to STL functions because you are tightly coupling the logic to the loop itself. With STL functions you are encouraged to decouple that logic using predicates and lambdas. I would argue that is less error prone because screwups are now confined inside a lambda. Look up Sean Parents talk about this subject. Also the use STL functions is descriptive. When you look at findif you know exactly what its meant to be doing. With raw loops that might not be so obvious depending on complexity and you are forced to mentally parse it to figure out whats going on.With Eric Nieblers range concepts lot of the ugliness with begin and end will be put to rest that is you should be able to write stdfindifrows predicate at some point. ,cpp,d71d3f2,1,t5_2qi27
8817391,0,t1_d77q1us,But different potential performance it generates an rval which is the copymove to the other. For simple types the compiler will optimize for others the performance will be real.Edited for clarification Even when in release builds the performance may be the same in debug builds you will be paying for it.,cpp,d77qb9s,-8,t5_2qi27
8819963,0,t1_d77w6ix,Sometimes you dont need to know what the type is and making the type explicit by writing it is actually as error prone as using auto in your examples.For example    for const stdpairltstdstring intgt pamp  producemap     ... This code wont compile. This wont work as you expect. Do you know why? stdmapdefines const T for the key type of stdpair. You see that we wrote stdstring for the first template parameter which results in a compile error temporary copy because you lose the cvqualifier passing a constamp to amp. Using auto and letting the compiler deduce the correct type for the expression solves the problem and makes it more consistent.    for const autoamp p  producemap      Thanks utcanens for the correction.auto can also prevent accesses to uninitialized variables. Once auto needs an initializer to deduce its own type theres no room for variables without a value to be declared.Another important thing is decltypeauto which is really useful in templates. Basically its auto with decltype rules applied to it. That is theres no cvqualifier loss because decltype preserves the cvqualifier of an expression whereas auto doesnt. So why is it useful? This is great for writing function signatures where the return type depends on the expression being returned. If its an lvalue of type intamp then the return type will be intamp. If its an rvalue of type const T the return type will be const T. auto would just strip off its constness andor volatileness for anything. A contrived example for this case would be a function returning an element of a container and giving you readwrite access to it    templatelttypename Containergt    constexpr decltypeauto    containerelementContainerampamp c sizet i            return stdforwardltContainergtci            stdvectorltintgt v               decltypeauto  intamp    containerelementv   ,cpp,d781eul,3,t5_2qi27
8820755,0,t1_d77r127,gtOtherwise using Clang on Windows is not a fun taskIf you install MSYS its as easy as pacman S mingwwxclang and then running clang stdc test.cpp o test.exe.,cpp,d784txq,2,t5_2qi27
8836552,0,t1_d77ol48,gt Especially when used with userdefined literals.Userdefined literals are also bad static const whatever being preferable. Always reach for the original sin .,cpp,d7a124s,1,t5_2qi27
8938449,0,t1_d7m8se9,Actually the crash log shows the IP is on the vmovss instruction,cpp,d7m9pnr,1,t5_2qi27
8961405,0,t1_d7oyjkf,On top of argc and argv which are part of the C standard.It wouldnt do anything useful in an environment where argc and argv doesnt contain anything useful but neither would anyone really expect it to.,cpp,d7p0yad,7,t5_2qi27
8963412,0,t3_52t05m,Personally I think that if you are a true beginner wanting to try out programming find an online class offered at your local community college.  That way you have a formal learning process and plenty of help if you need it plus you get credit!  Something like Programming Fundamentals  is the one you want.,cpp,d7p9mmc,1,t5_2qi27
8991755,0,t1_d7s7bbw,You could actually do this because in this case youre the compiler.  Just notice when a constant string with static or thread storage duration is initialized with a string literal and change the constructor and destructor to directly assign to the internal pointers directly instead of going through new and delete.  But youre right that the best tool for this is stringview.  gcc and clang dont appear to initialize those at compiletime either but its cheaper to construct so you still win as long as you dont need it NULterminated.,cpp,d7so56m,1,t5_2qi27
9010130,0,t1_d7ua0ap,As far as Im aware OpenCL is the highest performance cross platform cross vendor solution and is quite widely used in that area. Several major companies dont seem to think OpenCL has lost eg ARM has an customer oriented opencl department and is apparently implementing .x supportVulkan compute may be a viable replacement long term for my particular use case plus it should be higher performance but a lot of notthatold hardware doesnt support it so its out of the window for the moment,cpp,d7uvl2f,2,t5_2qi27
9010373,0,t1_d7uvfss,I use reference member almost everywhere and I almost never use assignment operators.Something that needs assignment is the spacial case for me.,cpp,d7uwmyw,3,t5_2qi27
9011286,0,t1_d7v0520,Hot damn thats impressive.,cpp,d7v0l9r,2,t5_2qi27
9016232,0,t3_53r0k0,p forwardastuple returns tupleltTampamp...gt not tupleltT...gt,cpp,d7vm01h,7,t5_2qi27
9041736,0,t1_d7yo0fu,Not automotive but yes we use FunctionalPlus quite a lot in our new code.,cpp,d7yo7on,4,t5_2qi27
9074233,0,t1_d82cbmo,Just curious why fork from Yafaray? I read your about page with the differences but none of them is really a reason to fork and develop a separate project?,cpp,d82kqfp,1,t5_2qi27
9090041,1,t1_d84gry7,I dont intend to introduce politics to Meeting C.I just want to offer a chance to attend the event for people that otherwise couldnt.,cpp,d84h5hr,-1,t5_2qi27
9171385,0,t1_d8ej913,absolutely C still can use C libs! I was specifically talking about stdsort cost not C libs vs C libs.,cpp,d8ejhq7,2,t5_2qi27
9189001,0,t1_d8gqnh8,Basically booststringview is the same as booststringref but with more constexpr usage and closer from Cs stdstringviews API. Some guys have mentioned deprecating stringref on the mailing lists IIRC ,cpp,d8grui4,1,t5_2qi27
9196051,0,t3_568v51,Programming questions in interviews are nonsense. Nobody writes programs on paper our days. Looking at private projects of a possible applicant is one way to deal with this. Otherwise send them a task before the interview and ask them to bring the solution with them. Then you can talk about their solution and why and how they solved it. All your questions sound a bit like oh look I know so much what do you know? If I am invited for an interview I tell the people I am not the one with the best knowledge about the STL or library XYZ but I know where to look for information and I am a fast learner. I just got a new job and I wasnt asked a single technical question in the interview. We were talking about my live my former employees and projects. They wanted to know if I can work with customers and if I am able to express myself in a reasonable manner. They wanted to find out if I fit in the team. Okay I have quite some projects in my github repository. This might have saved me from the technical questions part. Read this article from  if you want to know how others are coping with this problem,cpp,d8ho158,7,t5_2qi27
9199128,0,t1_d8g7bia,Partial import of interface is something you need to work out in full details before further discussion how is name lookup going to work? Especially ADL.  You need to present a fairly complete analysis.,cpp,d8i22k9,2,t5_2qi27
9200951,0,t1_d8i0x1p,take a look at Boost.Hana,cpp,d8iae19,2,t5_2qi27
9203210,0,t3_56c46x,MSs support for C has come a long long way in the last ten years  its now worldclass.Thank you for giving us the headsup very much appreciated!,cpp,d8ikpdb,12,t5_2qi27
9241667,0,t1_d8nevbr,Thanks.  I would have done it earlier but Visual Studio didnt have sensible C support until Visual Studio .  There have been other frustrations like clang regressing in C support over the last year as well.  But anyway its too much of a burden to try and work around broken compilers when we have had good C support in widely available and free compilers like GCC for years now.,cpp,d8ng5ip,3,t5_2qi27
9250679,0,t3_571wth,I do understand that developers want performance but can someone please explain to me why there are so many logging libraries and why they are particular obsessed with low latency and performance  what is the typical use case for these logging libraries?,cpp,d8ol9xd,2,t5_2qi27
9267515,0,t1_d8qogkk,Id prefer something a little less verbose but if that was the only way to do it Id do it! I dont know if the compiler were using MSVC  because reasons supports it.,cpp,d8qq20c,1,t5_2qi27
9268482,0,t3_571wth,gt Its fast  gt LOGINFO ltlt Sample NanoLog  ltlt iMine is faster.  With this syntax you are always going to evaluate all of the arguments no matter what.  With a syntax that looks like thisLOGINFOSample NanoLog  ltlt iI can   eliminate all log calls of a certain level at compile time if I wish to do it.  Alternatively   have the  macro unfold to something like      if unlikelyLoggercurrentLevel lt INFO         Loggerlog ltlt Sample NanoLog  ltlt i    to again avoid the argument evaluation. unlikely or likely can be controlled in compile time according to DEBUGRELEASE build.,cpp,d8qugwx,1,t5_2qi27
9280616,0,t1_d8sb975,The overhead for the code Im using.Say I want to do AThing.  Well theres BoostDoAThing.  Great!  But when something unexpected happens how do I diagnose it?  I look at BoostDoAThingDo and find that not only is it amazingly complicated but it delegates a lot of work to BoostAnything BoostAbstractAllTheThings and BoostGiveThePreprocessorPTSD.  Soon I have  megabytes of code to figure out much of which is frequently used in compiler stress tests.Or I could write and maintain a couple hundred lines of my own code.  Ex BoostSerialization is gtk of code excluding tests examples etc by itself.  Then there are its dependencies.  My BoostSerialization clone is  lines.  It only handles simple types but thats all Ive ever needed.,cpp,d8sdva7,1,t5_2qi27
9312716,0,t3_57yie2,Interesting but my first thought was why not gperf?,cpp,d8wgedk,2,t5_2qi27
9344622,0,t1_d90g88r,Your compiler needs to support c. Here you can find the filesystem docs If you google something you are looking for there are many boost version but they work almost the same as the sdl version.,cpp,d90hxgg,2,t5_2qi27
9460349,0,t1_d9f5iku,You lack experience anything didactic is useful to you by definition.TBH you sound like a naive highschool kid ampndash Math is so boring! I cant wait to be done with school and have a job as an engineer.,cpp,d9f5zx6,3,t5_2qi27
9472893,0,t1_d9gpu10,I dont desire it. I just think even such dinossaur would be useful in the standard over nothing.Python uses TK and does fine. Nobody writing a serious GUI application in python would use it but its there for simple stuff. By the same logic the standard shouldnt have a standard IO api because its completely unsuitable for how IO intensive applications are done today.,cpp,d9gqlsp,2,t5_2qi27
9510848,0,t1_d9lbngw,Rigid is good sometimes. It all depends on what youre trying to achieve. My preferred way of nonrigid hierarchies is this,cpp,d9lewve,2,t5_2qi27
9517719,0,t1_d9m0ovw,The funny thing is that atomclangs linter wasnt working well for me so I use lintergcc configured to use Clang as the binary.,cpp,d9m9fef,1,t5_2qi27
9526778,0,t1_d9nan0l,Hardly none of it is true. Go watch this talk C is and has always been about zero overhead abstractions.Hes probably right on about two points Exceptions may be troublesome I have too little experience in that and that there is loads of stupid or inexperienced programmers writing stupid code. Thats true in any language. Torvalds seems to think its less true in C.,cpp,d9ndkll,8,t5_2qi27
9534944,0,t1_d9nan0l,Of course there are no hidden memory allocations in C. Its a bogus argument. The standard library does all that for you. To develop a kernel in C would require a very different standard library than the one provided for generalpurpose application development. Thats all. Sure the standard library is part of the language but theres nothing wrong with deciding not to use a whole bunch of it  and ensuring by construction that you cant accidentally use it. I use plenty C daily on projects that have no exception handling and no dynamic memory allocation and I still can leverage a lot of the standard library to help me out in that task. Theres no malloc on the platform Im using BTW.,cpp,d9odq1z,4,t5_2qi27
9581571,0,t1_d9u3pkz,gt If one really needs them properties are easy to implement.Im not sure that theyre easy. I think theyre probably impossible to implement without changes to the language i.e. operatordot.Consider if the property isnt a simple builtin type without members. If we have a stdstring property how do we implement the following?    struct         propertyltstdstringgt name     somethingwithproperties    auto firstletter  somethingwithproperties.name,cpp,d9u4hjc,1,t5_2qi27
9617842,0,t3_5chf36,Not sure if I missed it but was there any official view if the plan is to send out the C DIS after the Kona or Toronto meeting?,cpp,d9ylhr8,1,t5_2qi27
9661425,0,t1_da3gtzo,i think the reboot is required if you have previously installed the Dev redist somewhere on the box.,cpp,da3z137,3,t5_2qi27
9675997,0,t1_da5qtx4,The point is that if you do all your allocations up front youll know that they will always pass.  You have to limit the number and sizes of buffers but youll never get halfway through running and go to allocate a buffer that you SHOULD have room for and have it fail.Avoiding dynamic allocation also helps avoid memory leaks yes you can still leak your statically allocated buffers and such but its less likely and easier to diagnose where the leak is.Failing  years into runtime is much worse on most embedded system than failing on setupinitial boot.,cpp,da5rpxr,1,t5_2qi27
9677409,0,t1_da5xpq2,Come on arent you just being picky ?  Yep will move I did not know about the other subreddit,cpp,da5xzzs,4,t5_2qi27
9694157,0,t1_da8030y,gt One error has to do with the API the other has to do with the language I dont know why youre trying to pass the latter off as the APIs fault.Im not Im trying to negate your argument.gt Honestly Im sick of this debate and regret posting in this thread at all. Im not discussing with you Im discussing with your arguments. This is nothing personal I know that you didnt write the library I just really dislike this API choice hereand want to make it clear by attacking possible reasons for it.,cpp,da80e5r,6,t5_2qi27
9698786,0,t3_5dx4jf,Do they post the talks on YouTube?,cpp,da8kylz,2,t5_2qi27
9703404,0,t1_da6ny9n,yes two putchars gave me ms on that test.. but I had no time to see why,cpp,da95hzy,1,t5_2qi27
9704165,0,t1_da97cd1,... in what way?,cpp,da98vqe,1,t5_2qi27
9708166,0,t1_da9f2m8,gt Said code wouldnt be isolated though it would be in a function with split in the name. Dependent code would then call a function with split in the name.Indeed. And that function is so useful it should be in the standard library a member function of the string class.,cpp,da9qn9s,1,t5_2qi27
9722455,0,t1_dabfa9v,This is true. Im not complaining just hopeful. Keep up the good work ,cpp,dabi6ij,1,t5_2qi27
9727417,0,t1_da7qb6a,Using a pointer is not really an old technique. I mean it actually is kind of similar to how the language works dynamiccast exception throwing version is enabled by passing references and the pointer returning version also takes a pointer. In boost variant they also did it this way boostget takes a pointer when you want it to return a pointer and takes a reference when you want it to throw exceptions. Idk I dont think its bad to use a pointer here instead of stdoptional. If the return type is supposed to be a pointer also to the thing that is pointed then its pretty hard for the programmer to screw it up about the lifetimes.,cpp,dac48dv,1,t5_2qi27
9728452,0,t1_da9kc1q,How about conan.io? Any idea if its good?,cpp,dac8tgx,1,t5_2qi27
9735837,0,t3_5ehrel,Skype for Business,cpp,dad5kan,2,t5_2qi27
9736851,0,t1_dad9qjd,Actually a bunch of std library features added in  came from the boost community.   uniqueptr and sharedptr come to mind. I think a bunch of the fancy mutexes came from boost too.,cpp,dada2lf,11,t5_2qi27
9738890,0,t3_5ehrel,Finance  Banking High Frequency Trading HFT platform software  low latency is so much easier to hit with zerocost abstractions!C gives me a way to write complex objectoriented code that compiles down to very little assembly. Equally importatnly it allows me to mindfully manage what goes into the CPU caches which is the difference between nanosecond latency and nanosecond latency. And thats the difference between making another K or losing it.,cpp,dadj4br,15,t5_2qi27
9766973,0,t3_5ehrel,Computer graphics and image processing.,cpp,dagzvj9,1,t5_2qi27
9785108,0,t3_5fchj8,,cpp,daj87k3,6,t5_2qi27
9809821,0,t1_dam79wq,deleted,cpp,dam9r2p,1,t5_2qi27
9909696,0,t1_daz9529,Certainly not objectively at best a personal preference. And its essentially equivalent to doing define BEGIN  ,cpp,daz991k,6,t5_2qi27
9919993,0,t3_5himv7,Team up with uzygoloid for a proposal to expose the full language newdeletereinterpretcastgoto at compiletime?,cpp,db0lmao,11,t5_2qi27
9925694,0,t1_db14x99,Wait a sec. Doesnt this imply that if a destructor written by the compiler that calls a destructor written by the user is a trivial? That doesnt sound right at all. According to this the condition for a trivial destructor is also that all of the base classes and members must be trivially destructible.,cpp,db1ccmx,3,t5_2qi27
9971910,0,t1_db7c2dc,Wow! You dont think maybe like I figured it out since writing the blog post contacted Raj Jain to confirm my findings and will write it up when I get a chance? See also ,cpp,db7d7tk,3,t5_2qi27
9982028,0,t1_db8o1mf,IANALL but I think pointers are castable to some integer types which does not mean that they actually are numbers.,cpp,db8oq69,6,t5_2qi27
10058205,0,t1_dbhvxhc,It makes more sense not to have an implementation than to have one that is in practice useless. stdregex shouldnt be something that only students are expected to use in trivial class assignments. If an implementation isnt on par with whats expected of industry standard implementations of regexes out there it shouldnt find its way in. To do otherwise is to blatantly lie to your userbase. Id find that sort of a thing shameful. But thats me.,cpp,dbilwyo,1,t5_2qi27
10133071,0,t1_dbs8kry,Issue  Rare mysterious reports of slow generated executables is the only issue Im aware of and its something like  reports out of many thousands of users. Until I get more information I cant do anything about it.,cpp,dbscetf,1,t5_2qi27
10201895,0,t3_5m037m,Just store the member function along with the weakptr?,cpp,dc0fwwz,1,t5_2qi27
10223581,0,t1_dc1s34z,Ah I see. Gotta write some articel about the spaghetti method. ,cpp,dc2wexf,1,t5_2qi27
10228951,0,t1_dc3bw37,I dont really understand  why for local variables and template arguments? A local variable is really always just in the local scope isnt it?,cpp,dc3ibsc,1,t5_2qi27
10235502,0,t1_dc444k0,Because MSVC doesnt have O so that one was without any optimization. MSVC has O O and Ox Ox being the highest optimization level. But even when using Ox its still a bit disappointing,cpp,dc49251,3,t5_2qi27
10235938,0,t3_5mjxoq,gt What are your recommendations for a newbie like me? Should I start with a book or random tutorials on YouTube?The most important is to give yourself a small project to do with some directions fixed from the beginning. For instance an image editor a chat program etc.This way you can have well definite steps in your project such as how to display text how to react to a pressed button how to show and hide an image which you can easily search on the web. You will learn much more like this than if you try to read all the docs hint you cant and most wouldnt be relevant to the application you will be developing anywayIf you need inspiration you can look at the numerous examples in the Qt installation folder and try to rebuild one of the simpler ones for instance.,cpp,dc4au4b,1,t5_2qi27
10240257,0,t3_5mmrpr,Please stop and read the sidebar. Beginner questions are offtopic in this subreddit.,cpp,dc4sgm7,1,t5_2qi27
10256999,0,t3_5mvd4g, inline function as almost nothing to do with inlining anymore. Its a switch that says you can implement that function in a header file.  when you return a const value from a function it will change absolutely nothing. Since the returned value will eventually be copied into another variable that in turn can be modified. If you return objects that can be moved the const return value will prevent move semantics and will slow down your code. Returning const reference on the other hand is quite useful and do pretty much what youd expect it will refer to an existing variable without copying it and will not grant you the right of changing its state.  destructor and deterministic deconstruction is probably the best C feature. When you are using dynamic allocation  allocation with new  you are in charge is deallocating the memory. You must put a delete somewhere. That somewhere is usually in destructors because in the constructor or calling a setter I know they are bad you usually make the new. Memory is a resource. You can use RAII which is a pattern in C that will manage that delete for you or the db.disconnect or that file.close look for scope guard and RAII. Its pretty much like a generalization of the finally that work in any situation not just error handling.By the way use stduniqueptr a RAII overheadfree smart pointer that remembers when to delete.  ,cpp,dc6oqt8,12,t5_2qi27
10307080,0,t1_dcc5j9k,The article is using the ultrasimplified vector defined in the code snippet above not stdvector. Of course itd be nice if begin and end returned T and not int at least.,cpp,dccd2q6,6,t5_2qi27
10335774,0,t1_dcfknss,More or less. Every library should do only one thing and do it well. Anyway those big libraries such as Qt are usually just wrappers around those libraries and you have to build them using theirs build systems anyway and use their bug trackers if you find a bug in them.Just a note about OpenGL  OpenGL abstration layers are all flawed. Because OpenGL has global state it cant be abstracted properly without too much overhead e.g. remembering owning context for each object and switching to it every time you usedestroy that object ... in case other context was set as current.,cpp,dcfm958,4,t5_2qi27
10338786,0,t3_5num0a,A lot of good replies. Another one to look at is CEGUI crazy eddies gui.,cpp,dcfykkf,0,t5_2qi27
10365135,0,t3_5ofgvz,In your extremely simple example there is no really good reason to use a pointer. In c pointers have been useful for polymorphism and method call dispatching,cpp,dciy7py,1,t5_2qi27
10375812,0,t1_dck241b,The content of the Ranges TS is likely to form the seed of a standard library version  project that will create a new standard library that takes advantage of the things weve learned about library specification in the last  years to create an improved standard library. The idea is that incorporating concepts into the standard library will necessarily break backwards compatibility so we should take the chance to make other breaking changes to library components where we know it will improved them.Since backwards compatibility is on of the committees primary goals its almost certain that this new standard library will be delivered alongside the old library in a different namespace.When the Ranges TS moves into the standard it will almost certainly be moving out of the ranges namespace but not into std. Considering that C is reserving all namespaces starting with std and ending with a string of digits it will probably be one of those. Im personally holding out for std for obvious reasons.,cpp,dck5toc,10,t5_2qi27
10389716,0,t1_dck4o7d,gt theoretical reasoning is on the postNo its not.  Why do you keep saying this?  Given this thread and your other reddit thread you have serious communication issues.  But that would be tolerable if you didnt pretend that youre actually a very clear communicator.Theres at least three separate people in this thread asking you why?  And you keep saying its there.  And its not there.,cpp,dclqmt1,3,t5_2qi27
10395954,0,t1_dcmexfz,Im learning from a c  book... is there a place where I could learn features of the new c versions? Id really like to study them once Im done,cpp,dcmg4o3,1,t5_2qi27
10450981,0,t1_dcsmdci,Qt is way more than a web framework,cpp,dcspu9z,17,t5_2qi27
10494899,0,t1_dcxnis8,No. Move of builtin types incl. pointers is the same as copy. So the compilergenerated move ctor would not null out other.d.,cpp,dcxpgr1,2,t5_2qi27
10515516,0,t1_dczz39o,Some people like to watch the world burn,cpp,dd01olq,17,t5_2qi27
10556350,0,t1_dd3yojj,Yes I knew this stuff and all about the assignment operator too but somehow noob brain refused to put this together in this context. Now its crystal clear thanks for the explanation D,cpp,dd4ojk4,1,t5_2qi27
10575389,0,t1_dd6ro2n,deleted,cpp,dd6roes,1,t5_2qi27
10578933,0,t1_dd6x3b7,C Features and STL Fixes in VS  Preview  was my official statement includinggt And the STL binary compatibility means that thirdparty libraries can be built once and used with both VS  and VS .  However it is still best for everything to be compiled consistently with the latest available version as that will give you the most correctness and performance.That is mixingandmatching should work in that stuff shouldnt crash. However due to how the linker works you might get the correctness and performance of the oldest version involved. Compiling everything consistently with the latest version will give you all of our bugfixes.Note as far as compatibility is concerned mixing  Update  with  Update  is just like mixing it with  RTM. Theyre literally the same branch WCFB and weve been continuously following the same rules. The compiler changed its version number to help identification but didnt actually change anything regarding compatibility.,cpp,dd74uxr,4,t5_2qi27
10594285,0,t1_dd87pyv,Trompeloeil is nice modern maintained and works well together with Catch.,cpp,dd8pvpb,2,t5_2qi27
10607029,0,t1_dd9g90y,Honestly  just give me cmake generation in premake and I will never ever look back. ,cpp,dda1836,1,t5_2qi27
10610005,0,t3_5rivzv,removed,cpp,ddacaa7,1,t5_2qi27
10624754,0,t1_ddbr96p,It was originally designed for windows so it is good.  ,cpp,ddbv1yr,1,t5_2qi27
10642266,0,t3_5sauxw,Uh... seriously dont do this.,cpp,dddo2gl,18,t5_2qi27
10713155,0,t1_ddkoj6o,You can do that?!? ,cpp,ddkzcwj,3,t5_2qi27
10719530,0,t1_ddku6au,gt AVX only added a further  despite the doubled widthIsnt AVX just added better support for wide integers and a few handy instructions? AVX already came with bit registers.,cpp,ddln21b,1,t5_2qi27
10733979,0,t1_ddmg8uc,Why ? As long as you provide these or the executable anybody can make a new package and run it on its phone which is what the lgpl requires.,cpp,ddn4o75,1,t5_2qi27
10737602,0,t1_ddnhb1l,Rather than repeated myself Ill just link to my previous comment Regarding UBSan and co note that those are not compile time warnings but run time instrumentations. The instrumentations occur before optimization and will inhibit a number of potential optimizations for example addition will be checked instead of assuming it cannot overflow.UBSan is probably the least costly sanitizer memory and performance wise and yet the degradation is important.,cpp,ddni3ta,9,t5_2qi27
10791516,0,t1_ddt22z7,While the token amp doubles as an operator this isnt an operator. Its simply syntax for a reference type.,cpp,ddt2hco,4,t5_2qi27
10840344,0,t1_ddy2ibo,Good catch. The title is actually wrong... I copied it from the title. But of course youre right. Thanks.,cpp,ddy3s51,1,t5_2qi27
10842407,0,t1_ddy4gyd,deleted,cpp,ddybg8n,5,t5_2qi27
10851864,0,t1_ddz7iqf,All these cases you talk about dont mean theres an exception thrown. The best way to handle that without exceptions is through promises and futures. Sure you can set an exception to a promise but Id rather use something like a stdexpected. The expected has a value if the request is successful but set an error if not. It act a bit like a specialized variant. I think that a code is way cleaner if you check the result of a request if it exist and if not handle errors.,cpp,ddzak00,2,t5_2qi27
10853035,0,t1_ddzekm4,Fair enough. Of course if they read the documentation directly it would should be obvious how painless the solution actually is.Anyway... Like I said I appreciate the CMake work youve released I just hate how bad a rap Boost.Build gets. Its foreign and unusual at first but its really not halfbad.,cpp,ddzewks,3,t5_2qi27
10920817,0,t1_de540gr,According to this they started around  which makes sense prior to the release of C at the end of  things in the C world had been fairly stagnant and there wasnt a whole lot of interest in improving C tools. So then C comes out theres a big spike in interest and MS realizes that their compiler is in dire need of updating to deal with the new customer demands.I can easily imagine the project has taken this long simply because of what a huge effort is required to update a  year old compiler that doesnt even build complete ASTs. ,cpp,de6embx,2,t5_2qi27
10955200,0,t3_5vut37,gt What software are you guys using to codepractice coding?At workVisual StudioVisual Studio Code for simple things python JS JSON C sometimes.vimAt homeXCodeVisual Studio Codevimother tools cmake python,cpp,de9y8t2,1,t5_2qi27
10984503,0,t3_5wngqk,Do I need to set a colour for each functionblock name or is there some way to automate this to avoid having to assign and manage colours to parts of my project? The README.md seems to suggest that if I dont do this every block will have the same colour?,cpp,ded241s,1,t5_2qi27
11003071,0,t1_def58bq,I would imagine reflexper,cpp,def601p,6,t5_2qi27
11007580,0,t1_dee2fh4,Const works great for local variables especially variables that are either simple like int bool etc or ones that have expressive enough constructors that you can construct them directly into the state youll need them instead of mutating after construction. If you really want to make an effort you can even use immediately evaluated lambdas to get a const local in that case.I agree that const for member variables doesnt work out so well but I think that saying that const doesnt work well for values in general is overgeneralizing.,cpp,defofjo,1,t5_2qi27
11022618,0,t1_deeqh9a,deleted,cpp,dehdtie,1,t5_2qi27
11024482,0,t1_dehlb0u,The  references   the closest I can find being .,cpp,dehlfsb,2,t5_2qi27
11031996,0,t3_5xgud6,,cpp,deig9ne,1,t5_2qi27
11038775,0,t1_deia8o2,Well thats the Competitive Programming world for you. Love it or hate it thats the trend interviewing is following these days  focusing more on algorithms and quick solutions than on elegance of code.,cpp,dej84y0,4,t5_2qi27
11063160,0,t1_deklj1m,gt There are lots of people still writing and maintaining C code although Im sure a fair portion of them are hating life for being under those constraints. Doing that for a living. Can confirm. Cannot wait for the project a big combat system for Spanish Navy to get up to date with the times. At least I can use boost. |,cpp,delzowk,1,t5_2qi27
11064282,0,t1_dem2j6s,Thanks for your patient explainations. Thank you!Duration problem I insist what we do now. stdchronoduration is more complicated.I am a freshman for CMake. I will improve it in the future if necessarily.fixedsize problem you are right we must make sure the sizes are all the same in all systems. I will review the codes. ,cpp,dem4i8a,6,t5_2qi27
11087459,0,t1_deo4rbf,Cant do partial preprocessing with the GCC or clang preprocessors. I looked into it before I started. You can however with the Boost.Wave preprocessor though its partial preprocessing capabilities are very limited.,cpp,deor57e,3,t5_2qi27
11106508,0,t1_dequu4c,deleted,cpp,deqwvub,1,t5_2qi27
11112385,0,t1_derdp69, implicit  as a fake attribute for conversion operators and constructors would also be nice to have,cpp,derkvdh,2,t5_2qi27
11113476,0,t1_derm802,Yes I agree. I think they meant it for this case  . However  is still kinda silly.,cpp,derpbof,3,t5_2qi27
11141308,0,t1_deuk8ol,I see thanks,cpp,deuutr0,1,t5_2qi27
11159072,0,t3_5zbz6b,The colon symbol .. its used in labels definitions rangedbased for loops inline conditional statements  inheritance etc,cpp,dewvabu,3,t5_2qi27
11180459,0,t1_daz2sey,But thats not GUI stuff. Youre both kind of off a bit. GUI code is inefficient because it inherently doesnt work well with modern rendering techniques. If you dont always know how much of which widget you need you have to either create a lot of buffers or reupload data constantly. You can upload textures and whatever but thats about it.Having a bunch of rectangles of different size is hard to instance. Having a bunch of stuff that requires different uniforms is a pain to batch.Having as much as possible rendered to a texture first is inefficient if your GUI changes a lot because then you spend a lot of time waiting for the GPU to render your GUI to texture until you can render the texture to the actual framebuffer.Its easier to draw millions of vertices of terrain in terms of optimisation techniques.GUI is not the reason you have  GBs of bandwidth.,cpp,dezajg1,1,t5_2qi27
11181945,0,t1_dezbqmv,,cpp,dezgljx,5,t5_2qi27
11184428,0,t3_5zkj5l,This should be interesting.,cpp,dezqq0d,2,t5_2qi27
11200222,0,t1_df1163z,You mean stdlockguard? ,cpp,df1j50o,14,t5_2qi27
11238137,0,t1_df5tgj2,Ive tried builds with LTO and it barely changed the binary size at all. ,cpp,df5trwh,1,t5_2qi27
11266603,0,t1_df8ud5b,Thats actually not gcc thats libstdc.It uses ABI tagging so it really shouldnt have linked.,cpp,df91x40,5,t5_2qi27
11267478,0,t1_df8dpnc,Thanks for sharing your opinion  but remember not everyone can learn so easily just by books some people also needs examples!,cpp,df95hds,0,t5_2qi27
11278773,0,t1_dfa7rge,You should consider Boosts strong typedef mechanism.,cpp,dfafkw2,2,t5_2qi27
11279667,0,t1_dfa9glm,deleted,cpp,dfaj86c,1,t5_2qi27
11298805,0,t1_dfc80y1,Yeah the whole chaining thing a redherring IMHO. I read override as I expect there to exist a base class version of this function which is declared virtual.The reasons why it might fire are a little different  regular functions typically go wrong perhaps under refactoring because someone typos the name or the params dont match up which cant happen for dtors but not declaring as virtual is equally valid and which applies in both cases.,cpp,dfcpav5,3,t5_2qi27
11302664,0,t1_dfd4pk7,My understanding of a test and set cpu instruction is that its no more blocking than for example a mov or an add. It just takes one instruction cycle and both writes a new value and returns the previous one. Is this not the case? ,cpp,dfd524y,4,t5_2qi27
11316380,0,t1_dfem2xh,lack of minimap is a pain but id still recommend it over clion,cpp,dfeoyz3,1,t5_2qi27
11322554,0,t1_dffdqk1,Im flattered! I would consider waiting a bit though because Id like to implement the suggestions here and Id hate to break your code with the changes Im going to make.,cpp,dffe4r8,1,t5_2qi27
11326657,0,t1_dffomgj,It is a guarantee The rust team even runs releases against the entire crate ecosystem to look for regressions.,cpp,dffuw1c,7,t5_2qi27
11369495,0,t1_dfk4udb,Well for a start C doesnt have pointers and every variable is a reference. Thats a gigantic difference in semantics right there. Its also interpreted by a VM.gt Oh and asyncawait is coming to C too IIRC.Microsoft has proposed it but their proposal is full of so many holes its unlikely it will be accepted any time soon.,cpp,dfkpkx9,1,t5_2qi27
11376168,0,t1_dfkm489,Same here. If you want the IDE look for gdb try Mx gdbmanywindows it works surprisingly well.Edit change manywindows to gdbmanywindows,cpp,dflgw9s,1,t5_2qi27
11396988,0,t1_dfnmzvr,And I will concur that is what Ive seen. Generally folks Ive talked to say that its good enough for most things and they toss out the stuff they disagree with. ,cpp,dfnu0kf,2,t5_2qi27
11423704,0,t3_630ew3,The addiction is real!,cpp,dfqv60p,2,t5_2qi27
11429023,0,t1_dfreyug,If you use Google theyve released a Chrome extension that allows you to disable search results from specific sites. Im sure there are a million ways to achieve this with every search engine so just look it up.,cpp,dfrgue4,4,t5_2qi27
11432846,0,t1_dfrhxad,gtgt Guaranteed Copy Elisongt Not only does this simplify value categories whose rules I have summarized in this short program wandbox Almost Always Auto is no longer almost as noncopyable types can now be constructed in the form auto m  stdmutex thanks to guaranteed copy elison. This further aids in the auto ident  typeinit pattern and set up for when Concepts wherein the pattern will become Concept ident  typeinit. Without guaranteed copy elison this pattern would be flawed and I would understand if one expressed reluctance in using it but that is the case no longer!Now all we need is to fix rules for temporaries lifetime. As in make them sane and remove ambiguities. ,cpp,dfrwglo,3,t5_2qi27
11445354,0,t3_63b5u9,Company ScyllaDB Type Full time remotes welcome Description ScyllaDB develops an opensource highperformance distributed NoSQL database also total coincidence called ScyllaDB  ScyllaDB utilizes the asynchronous IO engine seastar which we also develop to drive million of operations per second on large multicore machines with fast SSDs.  The stack includes everything from custom memory allocators through a userspace TCPIP stack using dpdk through highlevel concepts like query parsing and compilation and maintaining materialized views in synchronization with the base table. Location Israel San Francisco Bay Area and many remotes around the planet  countries and counting Remote Very much most of the workforce is remote Visa Sponsorship in special cases Technologies C C very soon boost asynchronous programming futurepromise JIT Contact jobsscylladb.com,cpp,dftbk0f,1,t5_2qi27
11467741,0,t3_63ouw6,Gotos new without delete globals using namespace std system not using classes correctly. This is not a good tutorial.,cpp,dfvv1qs,2,t5_2qi27
11490827,0,t1_dfyg7k7,I thought I read somewhere irc or discord that clang was alot easier to compile? Maybe it was cross compiling.,cpp,dfyhfgd,2,t5_2qi27
11609975,0,t1_dgbqqnf,gt they do care about C a whole lotIsnt that because of the MSVC compiler that doesnt care about C? ,cpp,dgc01jl,3,t5_2qi27
11611965,0,t1_dgb72jx, is a good example because it also depends on the zlib library and so adds it to its own INTERFACELINKLIBRARIES target property.,cpp,dgc85iu,3,t5_2qi27
11636031,0,t1_dgevdri,Behind the scenes youll still need bit shifting but you can hide that from the userYou could have an enum    enum class RegField       PropOne        PropTwo      ...    Then a variadic template function    template ltRegField ... Fsgt    auto setFields       return  ltlt staticcastltintgtFs | ...    setFields does what Jason showed in the video but keeps the shifting hidden from the user. Other functions like clearMask could also be implemented in a similar manner     ,cpp,dgeygl2,3,t5_2qi27
11636871,0,t1_dgez0jw,. . I remember no way to see the type deduced from auto QuickDoc on variable simply gave me auto var. I am pretty sure it was but nevermind its good enough for me to hear that all then are present now!. I tried to look for any screenshots left but alas I remember it was about some rdparty library related to OpenGL that had tremendously long Doxygen commentaries for functions like  lines of description  detailed descriptions of parameters and stuff. When invoking help the QuickDoc window occasionally went from top to bottom of the screen trying to display it whole instead of providing a preview. That could be already fixed though or on contrary be a very rare kind of heisenbug  since I tend to get myself into various crazy stuff no other people ever encounter ,cpp,dgf1w3t,1,t5_2qi27
11647362,0,t3_664pto,Check out some of the new cross platform features for C in visual studio !,cpp,dgg8qlh,1,t5_2qi27
11666865,0,t3_66focu,deleted,cpp,dgigdbm,1,t5_2qi27
11673897,0,t1_dge53cc,gt assuming youre good with absolute paths in your generated build filesI think generated build files will already contain lots of absolute paths. The build directory is not relocatable by design.,cpp,dgj93k1,1,t5_2qi27
11689431,0,t3_66s5ew,Havent used it myself but the cross platform cpprestsdk seems like it might suit your needs.,cpp,dgl0jql,4,t5_2qi27
11699630,0,t3_66xpb8,I totally agree with stopping usage of ifdef. I generally do this    ifndef DEBUG    define DEBUG     endif    if DEBUG       Do something in debug.     else       Do something in production.     endifOf course instead of writing a define if its not undefined I could use something like this    define PRIMITIVECATa ... a  VAARGS    define COMPLb PRIMITIVECATCOMPL b    define COMPL     define COMPL     define CHECKNx n ... n    define CHECK... CHECKNVAARGS     define PROBEx x     define NOTx CHECKPRIMITIVECATNOT x    define NOT PROBE    define BOOLx COMPLNOTx    if BOOLDEBUG       Do something in debug.     else       Do something in production.     endifThis is much better than defining macros to ONor OFF however if its undefined it results to true instead of false as anything that is not  is true. Of course it could be extended to match numbers and then if its not a recognizable number it becomes false    define PRIMITIVECATa ... a  VAARGS    define CHECKNx n ... n    define CHECK... CHECKNVAARGS     define PROBEx x     define ISNUMBERx CHECKPRIMITIVECATISNUMBER x    define ISNUMBER PROBE    define ISNUMBER PROBE    define ISNUMBER PROBE    define ISNUMBER PROBE    define ISNUMBER PROBE    define ISNUMBER PROBE    define ISNUMBER PROBE    define ISNUMBER PROBE    define EXPAND... VAARGS    define FALSE...     define IIFc PRIMITIVECATIIF c    define IIFt ... VAARGS    define IIFt ... t    define USINGx IIFISNUMBERxEXPAND FALSEx    if USINGDEBUG       Do something in debug.     else       Do something in production.     endifYou could even extend ISNUMBER to recognize ON and OFF as well so both forms can be done.,cpp,dgm66xn,10,t5_2qi27
11720347,0,t3_676top,How does this compare to the authors own cget,cpp,dgoj2ys,2,t5_2qi27
11722456,0,t3_6792gh,This would be more interesting if there was also a version that didnt store individual bits just to see the effects of packingunpacking overhead. ,cpp,dgorr1v,3,t5_2qi27
11729112,0,t3_63b5u9, Company Avalanche Studios Type Full Time Description PCConsole game developer. Makers of Just Cause Mad Max and theHunter games. Were hiring for many different positions with different seniority requirements check here for more details.  Location NYC Stockholm Remote No Visa Sponsorship Easiest if you are Swedish Technologies C Python and Perforce are used for all roles. Depending on the position you may also use Qt Havok FMOD or other rd party software.  Contact   ,cpp,dgpixcc,1,t5_2qi27
11768940,0,t1_dgt3cjy,Hi Bob thanks for the response! The VSCode team is really attentive and has a great community outreach.gt  Im not familiar with these codebases but the symptom sounds a bit like  in the sense that I would expect preprocessor support in the new IntelliSense engine to help here.In these cases its not preprocessor issues its build system issues. For example lets say the code uses a function void portisrswitch. Within the project directory structure there are folders for different targets with a file that defines this function with an implementation thats appropriate for that architecture portsarmcortexmport.c and portsarmcortexmport.c. Only one of them is compiled into the resulting binary based on rules in the Makefile.I think if it were setup like this instead    if definedPORTCORTEXM    include portsarmcortexmport.c    elif definedPORTCORTEXM    include portsarmcortexmport.c    endifThen preprocessor support might do the job. However since the target choice is done within the Makefile it wouldnt help. The indexer would still see all implementations of void portisrswitch in all the target directories and Go To Definition would most likely go to the wrong one.One workaround on my end is to simply remove all files that arent used in my port. However this means I have to fork the code for each project which is kind of painful and makes it more difficult to keep the code uptodate its third party.,cpp,dgu1gir,1,t5_2qi27
11775409,0,t1_dgubnf4,Not a Microsoft product.  Nobody got the joke that Microsoft infamously coined that phrase first?,cpp,dgus0vz,-6,t5_2qi27
