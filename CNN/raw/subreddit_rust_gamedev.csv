,controversiality,parent_id,body,subreddit,id,score,subreddit_id
1588661,0,t3_2cf2jw,When I first heard about Piston I couldnt believe it there was a group of people working together towards a game framework in pure Rust. Before that rust gamedev community was scattered projects born and died like stars in the sky. That made me reconsider the value of collaboration and eventually leaded to the state of gfxrs that we have now. None of us could do this alone and now weve got a pretty strong team.Your post has many interesting points on the current state gamedev in Rust and Ill not be able to comment on everything. But I do thank you for writing this especially since we are at an important history point now. Your words are now part of the history and Ill for sure revisit this post in the future.Piston. It seems to me that you have an implicit difference between Piston project and Piston ecosystem. I always saw it as the latter and Id like Piston to go route N build tools and communicate best practices for the Rust gamedev community. Piston umbrella has already provided a huge productivity boost for some of us and Im sure itll keep helping our community grow and build wonderful things.gfxrs. We found that abstracting the graphics layer doesnt really have to go with a lot of compromises. We have reached a solid functioning state and well keep improving gfxrs. We are also looking for ways to set up higher levels of abstractions that will be suitable for direct usage by game developers. If you have a graphics application in rust we encourage you to try porting it to gfxrs. Your feedback may be vital for us to grow.,rust_gamedev,cjff7bh,6,t5_32iyy
1738574,0,t3_2eb4fw,Good luck! Hope to play your game soon! ,rust_gamedev,cjyb7s5,3,t5_32iyy
1960605,0,t3_2h55qy,Piston is a game engine written in Rust Perhaps we can make it easier to use custom devices in the event structure? There is no way we can support every kind of device in pistoninput so we could make the whole pipeline generic instead.,rust_gamedev,ckpgdue,2,t5_32iyy
7239901,0,t3_4eldc8,The things I am missing most are editors Object property editor Shadermaterial graph editor Expression scripting editor AI behavior tree editor Landscape sculpting editor Planttree generation editor Vehicle editor Skeletal animation editor Particle system editor Dialogue editor Economic system editor Level editor placing objects,rust_gamedev,d214h50,4,t5_32iyy
7306784,0,t1_d26m7fc,Its a step in the right direction yeah. Looks like you could pretty much struct enum vec and map with it which should go a long way.Ive been playing with an idea where the system differs from the standard XMLJSON paradigm in that you always have the expected type to go along with your parse and the expected type can be used as a context to enable nonuniversal shorthands in the input such as if youre expecting an Option type a present value will parse as Some and an omitted one as a None. Needs more work to figure out if this is actually a good idea though.EDIT Also a config file syntax that corresponded exactly with Rusts structured literal syntax would allow for stupid tricks like having config files which could could also embed in your actual source with include!. Would run into trouble with vecs and maps that dont have a static literal syntax though.,rust_gamedev,d28qcp6,1,t5_32iyy
8738627,0,t1_d6tpebb,thanks a bunch. I will fix those things after I get path finding to stop being broken.,rust_gamedev,d6xz81e,2,t5_32iyy
9208977,0,t3_4x2q86,if you want to write seriously fast code you are honestly best off using CC. performant code is about blasting over huge linear arrays so performant code in any language looks exactly the same as performant code in C. C also makes it easier to use sseavx if you choose to use themmemory safe languagesGC are not helpful because performant code requires very simple data flowsallocation patterns,rust_gamedev,d8jb1f7,1,t5_32iyy
11251818,0,t3_60h3om,Not developing a game per se but wanted low latency audio IO for effects and something that would run on ARM.  The only thing that worked for me was portaudiors which at the time wasnt even on crates.io.  I tried cpal alsa rustportaudio and rsoundio.  If you only have playback requirements it may not be as hard to find one that works well.  Its been about a year since I tried all these toolkits so things may have changed.  ,rust_gamedev,df7dkw0,1,t5_32iyy
