,controversiality,parent_id,body,subreddit,id,score,subreddit_id
2020876,0,t1_ckwoqx7,Have you looked at the numbers for PyPy and Numba? They can actually match native C code nowadays in some cases. ,Julia,ckwpn62,3,t5_2qps0
2026931,0,t3_2hwgpt,deleted,Julia,ckxgsn2,1,t5_2qps0
2563450,0,t3_2p36av,This is so wonderful!  Thank you for taking up the banner that I dropped.  This may be a better lowerresistance medium than using GithubGithub Sites allowing more folks to participate in the discussion and add changes.  I feel bad about dropping the ball on TWIJ Conferences end of semester and my own local version of issue  have gotten in the way for the past month but am very glad to see this continue.Heres one thing I was planning to use in a new post once I had time The number of contributors to core Julia as Github counts them has surpassed !  I think this is a great achievement and represents some of the success Julia has had.  I thought itd be cool to see how this number has grown so I fixed up the mailmap a little bit to eliminate a few duplicates and plotted the contribution counts this is still a little higher than GitHub reports because GitHub ignores entries that arent linked to an accountTotal number of contributors to JuliaNumber of new contributors by month,Julia,cmt6iq1,10,t5_2qps0
4484832,0,t1_csj1zb3,I will look for it soon. Just try not to set it on the nd and rd Wednesday. Most people go to the python meetup.,Julia,csvz79k,1,t5_2qps0
5438972,0,t1_cw6ujtq,Matches shell syntax and its often necessary to mix different levels of quoting in shell command arguments? Backtick quotes are on the table to be changed to a macro extensible mechanism like custom string literals though.Ive yet to see any projects written in Go or Rust that actually solve problems I have with the exception of docker where Ive never needed to look at the source. I have a much easier time reading and reasoning about Julia code with reflection pointing me straight to where things are defined than trying to figure out backtraces of deeply nested OO hierarchies in all of the Python or C code Ive ever tried to debug. Dispatch is far more interesting for code structure and interactions than file and module organization. Cleanliness of exports is a matter of good practices at the moment many Julia users are coming from a Matlab or R world where its a total mess and Julia improves tremendously on that and will get better over time as a social matter. Julia is probably the wrong language for your use cases but that doesnt mean you need to continuously vehemently rant about how its import system and code organization will forever make it wrong for everyone elses use cases.,Julia,cw6vrmr,2,t5_2qps0
5443820,0,t1_cw705v6,I intended to be challenging on the thought level. Sorry if I offended you or others this is not what I meant.Sophistication has nothing to do with what Im saying. Quite the reverse Im saying that if Julia suits you for oneshot scripts that is not suprising at all. The main reason why is that Julia is IMHO targetted to this usage and it does it well.As well if you are coming from Matlab yes it feels definitely better.But if you are coming from any other modern language Julia feels bitter because its great for a lot of things but still ugly for other things. This has nothing to do with sofistication but after using other languages some design decision seem stupid. All the more stupid that the design rational is often yes that doesnt make sense from the year experience humankind got from designing programming languages but remember our users are scientists not computer scientists so we prefer to stick to the fortranmatlab that they are used to instead of enforcing best practices.John Myles White style guide still advise not to use import but using... At the same time Tim Holy explains that exporting is not the same as declaring stuff public and in this regard he even refrained a couple of tiles to export functions like open in some of his libs because it would clash with the native open function and induce a mess. Today still he is wondering if it would be better to make a prefixed alias to these functions in order to export them. This problem that you wont generally encounter in oneshot scripts but in larger libraries is solved since the invention of C. Julias design decision here is sensible its easier for the poor scientist who doesnt want to type everything each time or at ilport time or doesnt want to use an IDE but the problems that it generates are harsh and not completely solved as of today.Here what people raising the problem have been told is we have our reasons that wont change. There is no discussion whatsover. All alternatives like a launch flag a macro etc. were denied from the start. As a last note about Julia design... Im not saying that all they have done is crap far from it otherwise I wouldnt even care. Im just saying that the general behavior in the Julia dev community regarding enhancements is far from good If you try to ask for changes based on what modern languages do for some sound reason you get told that you dont understand a thing that there are good reasons for why the things are the way they are and that Julia is not itended to replace language X. When gently challenging things like the actual trade off of having more than  stringlike types in the standard lib you get said that there are good reasons and that it wont change. When you dig farther and ask if string expansion is really worth the complexity of adding even more rawverbatim string types you get said that this is the way it is for a good reason of course and that it wont change. When you propose to write a converter to automatically getting rid of all these string types in people scripts to facilitate the transition to a simpler string story you get said that this is not worth it. and at the same time people keep fixing problems caused by the string expansion feature and nobody want to hear that there might be other way to retain that ease of use while avoiding all the problems caused by it.Regarding my level of expertise Ive used Julia weekly for  months for nearly oneshot scripts. Ive decided to convert them to a library. It was all good... Just the module boilerplate which seemed really dated. Then I had to fix bugs in other libraries and have been throughbso much pain to understand the code that I decided to abandon Julia altogether. Yes tooling would make things better but wake up we are in  tooling for reading code is ugly Thats where I figured out Julia would bring yet another decade of ugly scientific legacy.But well Im not deaf even if you may think so. I understand this is not the right way to get heard and that it is definitely better to give up. Julia is not going to change.,Julia,cw7i0yg,6,t5_2qps0
5597814,0,t1_cwqw7js,I dont understand what the solution is there.,Julia,cwqyndi,1,t5_2qps0
5610253,0,t1_cws8d8i,Yeah it is a bit unfair to compare the development of a brand new language that started about  years ago to fully developed languages like R and Matlab that have been around for more than  years. ,Julia,cwsi8b9,2,t5_2qps0
5611870,0,t1_cwsosha,Well said. Same here. I would prefer  packages or features that work  over  packages that work .,Julia,cwspfzu,2,t5_2qps0
5667331,0,t1_cwzjci3,Regardless of languageimplementation its likely that your algorithm can be improved.  If youre interested I suggest posting it as a gist somewhere as it sounds like there is a way to rephrase your operations without using so much memory.,Julia,cwzl6ap,2,t5_2qps0
6209499,0,t1_cyuf1k6,deleted,Julia,cyvgbk1,1,t5_2qps0
6825177,0,t1_czmmcbc,This seems useful I ran into the problem where I wrote a script using Gadfly and Dataframes and then found that when plotted in a Jupyter notebook it slowed my web browser to a crawl so I went back to PyPlot and native arrays.,Julia,d0pxlj7,1,t5_2qps0
9023556,0,t1_d7nyk2n,Basically ignore any type instabilities that are not among the list of variables or in the function return type. The others are most often spurious warnings.,Julia,d7whnmx,2,t5_2qps0
9995898,0,t3_5iq3j6,The console is neat and I rly like the Juno ide. What i dont like is the compile time and the error messages. Maybe python is just more my thing. Also I really love the Julia plotting environment. The default styles are gorgeous so you can produce nice plots really fast. I only use programming for simple stuff as of now so maybe Ill switch back and forth a bit and see what fits me best,Julia,dbahsl0,2,t5_2qps0
10161981,0,t3_5lhxc6,What is the type of your dictionary? Or more precisely what kind of object is dicti?,Julia,dbvx0qq,1,t5_2qps0
10398254,0,t1_dcmjl0v,My goal is to make the ember observer of Julia.  which has code amp readme searchI think library browsing tools are essential for language developmentedit  I also wanted to provide a benchmark that Julia web frameworks strive to beat Genie.jls package browser is nice but I think its significantly lacking in many regards,Julia,dcmpila,1,t5_2qps0
10438213,0,t3_5pft7m,Julia will revolutionize numerical computation... Fing awesome article!,Julia,dcr8u11,7,t5_2qps0
11444204,0,t1_dfrmiqe,Nice tutorials. Thanks!,Julia,dft6uxb,1,t5_2qps0
11740493,0,t3_67fbap,deleted,Julia,dgqtcbf,1,t5_2qps0
