,controversiality,parent_id,body,subreddit,id,score,subreddit_id
196293,0,t1_cf0c71q,The devices that show the glitches are  Samsung Galaxy S Plus GTI Android ..  MB RAM other specsNokia Lumia  Windows Phone   MB RAM other specsThe devices with no display problemsSony Tablet S Android ..  GB RAM other specsAmazon Kindle FireHDX  Android ..  GB RAM other specsWith the profiler attached my app has a reserved total of about  MB including the profilers  MBAnd unfortunately it does not appear to be a real fix just an improvement  when I connected Unitys profiler today to note the total RAM usage the glitches were back again  the profiler takes an additional  MB Maybe I have to break down the graphics in my app to even smaller parts  right now Im having a x transparent atlas and a x opaque atlas permanently loaded looks like thats too much already for these devices,futile,cf0ssct,1,t5_2uqi7
232655,0,t3_1wrgwq,Hah thats pretty neat looking. So it is basically making like  copies of the sprite behind it at different opacities and then removing them? or I guess its more complicated than that right like theyre actually kind of tracking the path of it? ,futile,cf4v3gd,3,t5_2uqi7
646351,0,t1_cgdh6ci,Yeah I mean the way I would do stuff is a little bit different in my own stuff I dont like using visuals for gameplay stuff... In other words I would set up the stuff for collisions etc. exactly how I wanted them just based on positions of the objects but not based on the sprite widthheight... Then I would render the sprites based on that information. In other words for example lets say I want to add a glow to the visual laser sprite art I dont want that to affect the actual width of it in gameplay which is what would happen if the gameplay stuff was based directly off the texture dimensions. The other thing is that since its a laser I dont know how wide it will be but you may be able to get away with doing circleline collisions if the laser is wide you can also use two parallel lines spread apart. ,futile,cgdqnsi,2,t5_2uqi7
